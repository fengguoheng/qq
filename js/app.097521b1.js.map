{"version":3,"file":"js/app.097521b1.js","mappings":"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","sources":["webpack://mobile_qq/./src/App.vue","webpack://mobile_qq/./src/App.vue?7ccd","webpack://mobile_qq/./src/views/ActionView.vue","webpack://mobile_qq/./src/views/ActionView.vue?e955","webpack://mobile_qq/./src/views/WelcomeView.vue","webpack://mobile_qq/./src/views/WelcomeView.vue?0c8b","webpack://mobile_qq/./src/views/LoginView.vue","webpack://mobile_qq/./src/views/LoginView.vue?5755","webpack://mobile_qq/./src/views/HomeView.vue","webpack://mobile_qq/./src/components/TopBar.vue","webpack://mobile_qq/./src/views/HomeView.vue?1da1","webpack://mobile_qq/./src/components/MessageCom.vue","webpack://mobile_qq/./src/components/MessageCom.vue?ebee","webpack://mobile_qq/./src/components/FriendsCom.vue","webpack://mobile_qq/./src/components/FriendsCom.vue?3aae","webpack://mobile_qq/./src/components/DiscoverCom.vue","webpack://mobile_qq/./src/components/DiscoverCom.vue?cadc","webpack://mobile_qq/./src/views/CardView.vue","webpack://mobile_qq/./src/views/CardView.vue?4c14","webpack://mobile_qq/./src/views/DialogView.vue","webpack://mobile_qq/./src/views/DialogView.vue?467c","webpack://mobile_qq/./src/views/SideView.vue","webpack://mobile_qq/./src/views/SideView.vue?606d","webpack://mobile_qq/./src/components/DiscoverCom1.vue","webpack://mobile_qq/./src/components/DiscoverCom1.vue?3329","webpack://mobile_qq/./src/views/EmotionView.vue","webpack://mobile_qq/./src/views/EmotionView.vue?3476","webpack://mobile_qq/./src/router/index.js","webpack://mobile_qq/./src/main.js","webpack://mobile_qq/./src/assets/images/ sync ^\\.\\/.*$","webpack://mobile_qq/webpack/bootstrap","webpack://mobile_qq/webpack/runtime/chunk loaded","webpack://mobile_qq/webpack/runtime/compat get default export","webpack://mobile_qq/webpack/runtime/define property getters","webpack://mobile_qq/webpack/runtime/global","webpack://mobile_qq/webpack/runtime/hasOwnProperty shorthand","webpack://mobile_qq/webpack/runtime/make namespace object","webpack://mobile_qq/webpack/runtime/publicPath","webpack://mobile_qq/webpack/runtime/jsonp chunk loading","webpack://mobile_qq/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- 左侧侧边栏 -->\n    <div v-if=\"!$route.meta.hideSidebar\" class=\"sidebar\">\n      <div class=\"sidebar-header\">\n        <!-- 左侧边栏顶部：头像 + 姓名 + +号 -->\n        <van-image round width=\"32px\" height=\"32px\" :src=\"require('./assets/images/my_profile.jpg')\" alt=\"用户头像\"\n          @click=\"handleSidebarAvatarClick\" class=\"avatar-hover\" />\n        <!-- 显示从localStorage获取的用户名 -->\n        <span class=\"username\">{{ username }}</span>\n\n        <!-- +号弹出juli功能 -->\n        <van-popover v-model:show=\"showPopover\" :actions=\"actions\" placement=\"bottom-end\" :offset=\"[13, 8]\"\n          @select=\"handleActionSelect\">\n          <template #reference>\n            <van-icon name=\"plus\" color=\"white\" size=\"15\" class=\"icon-hover\" />\n          </template>\n        </van-popover>\n      </div>\n\n      <div class=\"sidebar-menu\">\n        <!-- 替换原有的消息菜单项 -->\n        <div class=\"menu-group\">\n          <!-- 消息主菜单 -->\n          <div class=\"menu-item\" :class=\"{ 'active': active === 'message' }\" @click=\"toggleMessageDropdown\">\n            <van-icon name=\"chat-o\" class=\"menu-icon\" />\n            <span class=\"menu-text\">固定面试</span>\n            <!-- 下拉箭头（根据状态切换） -->\n            <van-icon :name=\"messageDropdownOpen ? 'arrow-up' : 'arrow-down'\" class=\"dropdown-arrow\" />\n          </div>\n\n          <!-- 下拉菜单内容 -->\n          <div class=\"dropdown-wrapper\">\n            <transition name=\"dropdown-fade\">\n              <div class=\"message-dropdown\" v-if=\"messageDropdownOpen\">\n                <div class=\"message-dropdown-content\">\n                  <ul class=\"message-list\">\n                    <li v-for=\"(item, index) in friendMessageList\" :key=\"item.name\" class=\"message-item\"\n                      @click=\"handleMessageItemClick(item)\">\n                      <van-image round width=\"40px\" height=\"40px\" :src=\"item.profile\" class=\"message-avatar\" />\n                      <span class=\"message-name\">{{ item.name }}</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </transition>\n          </div>\n          <div class=\"menu-item\" :class=\"{ 'active': active === 'emotion' }\" @click=\"navigateTo('/emotion', 'emotion')\">\n          <!-- 对话机器人组合图标 -->\n          <svg class=\"menu-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <!-- 对话气泡 -->\n            <path d=\"M4 18L10 15L4 12V18Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" />\n            <path d=\"M10 15H20V9H10V15Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" />\n            <!-- 机器人头部简化 -->\n            <circle cx=\"17\" cy=\"7\" r=\"1.5\" fill=\"currentColor\" />\n          </svg>\n          <span class=\"menu-text\">自由面试</span>\n        </div>\n        </div>\n        <div class=\"menu-item\" :class=\"{ 'active': active === 'friends' }\"\n          @click=\"navigateTo('/home/friends', 'friends')\">\n          <van-icon name=\"friends-o\" class=\"menu-icon\" />\n          <span class=\"menu-text\">虚拟人juli</span>\n        </div>\n        <div class=\"menu-item\" :class=\"{ 'active': active === 'discover' }\"\n          @click=\"navigateTo('/home/discover', 'discover')\">\n          <van-icon name=\"underway-o\" class=\"menu-icon\" />\n          <span class=\"menu-text\">动态</span>\n        </div>\n        \n\n      </div>\n    </div>\n\n    <!-- 主内容区域 -->\n    <div class=\"main-container\">\n      <!-- 内容区域 -->\n      <div class=\"content-area\">\n        <router-view></router-view>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      messageDropdownOpen: false,  // 控制下拉菜单显示/隐藏\n      // 消息列表数据（面试官列表）\n      friendMessageList: [\n        {\n          name: \"人工智能技术岗面试官\",\n          profile: require('./assets/images/profile_拉菲.jpg')\n        },\n        {\n          name: \"大数据运维测试岗面试官\",\n          profile: require('./assets/images/profile_02.jpg')\n        },\n        {\n          name: \"物联网产品岗面试官\",\n          profile: require('./assets/images/profile_栗山未来.jpg')\n        }\n      ],\n      active: 'message',\n      titleMap: {\n        message: '面试',\n        friends: 'juli',\n        discover: '动态',\n        emotion: '智能面试体验'\n      },\n      showPopover: false,\n      actions: [\n        { text: '虚拟人1号', icon: 'gift-o' },\n      ],\n      username: '' // 用于存储从localStorage获取的用户名\n    }\n  },\n  computed: {\n    currentTitle() {\n      return this.titleMap[this.active] || '首页'\n    }\n  },\n  methods: {\n    // 切换消息下拉菜单\n    toggleMessageDropdown() {\n      this.messageDropdownOpen = !this.messageDropdownOpen;\n      // 确保点击后消息菜单处于激活状态\n      this.active = 'message';\n    },\n\n    // 点击消息列表项处理\n    handleMessageItemClick(item) {\n      // 提取职业信息并存储\n      const index = item.name.indexOf('面');\n      const career = index !== -1 ? item.name.substring(0, index) : item.name;\n      localStorage.setItem('career', career);\n\n      // 大数据运维测试岗跳转到discover1路由\n      if (item.name === \"大数据运维测试岗面试官\") {\n        this.$router.push({\n          path: '/home/discover1',\n          query: {\n            interviewer: item.name\n          }\n        });\n      }\n      // 物联网产品岗跳转到action路由\n      else if (item.name === \"物联网产品岗面试官\") {\n        this.$router.push({\n          path: '/action',\n          query: {\n            interviewer: item.name\n          }\n        });\n      }\n      // 其他岗位跳转到默认对话页面\n      else {\n        this.$router.push(`/dialog/${item.name}`);\n      }\n\n      // 关闭下拉菜单\n      this.messageDropdownOpen = false;\n    },\n    navigateTo(path, name) {\n      this.$router.push(path)\n      this.active = name\n    },\n    handleLeftClick() {\n      this.$router.push('/side')\n    },\n    handleTopAvatarClick() {\n      this.$router.push('/side')\n    },\n    handleSidebarAvatarClick() {\n      this.$router.push('/side')\n    },\n    handleActionSelect(action) {\n      if (action.text === 'juli') {\n        window.location.href = 'https://123.56.203.202/ui'\n      }\n      this.showPopover = false\n    },\n    // 专门用于从localStorage加载用户名的方法\n    loadUsernameFromLocalStorage() {\n      try {\n        const userInfo = localStorage.getItem('currentUser')\n        if (userInfo) {\n          const parsedUser = JSON.parse(userInfo)\n          this.username = parsedUser.username || '用户'\n        } else {\n          this.username = '访客'\n        }\n      } catch (error) {\n        console.error('从localStorage加载用户名失败:', error)\n        this.username = '用户'\n      }\n    }\n  },\n  watch: {\n    '$router.path'(newPath) {\n      const pathMap = {\n        '/home/message': 'message',\n        '/home/friends': 'friends',\n        '/home/discover': 'discover',\n        '/emotion': 'emotion'\n      }\n      this.active = pathMap[newPath] || 'message'\n    }\n  },\n  mounted() {\n    const pathMap = {\n      '/home/message': 'message',\n      '/home/friends': 'friends',\n      '/home/discover': 'discover',\n      '/emotion': 'emotion'\n    }\n    this.active = pathMap[this.$route.path] || 'message'\n    this.loadUsernameFromLocalStorage()\n  }\n}\n</script>\n\n<style scoped>\n#app {\n  display: flex;\n  min-height: 100vh;\n  background-color: #f5f7fa;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  position: relative;\n}\n\n/* 左侧侧边栏样式 - 光滑棱角和悬停特效 */\n.sidebar {\n  width: 200px;\n  background-color: #2c3e50;\n  color: #fff;\n  height: 100vh;\n  flex-shrink: 0;\n  display: flex;\n  flex-direction: column;\n  padding: 20px 0;\n  z-index: 10;\n  box-shadow: 3px 0 15px rgba(0, 0, 0, 0.2);\n  position: relative;\n  border-radius: 0 16px 16px 0;\n  /* 光滑棱角 */\n  transition: all 0.3s ease;\n  /* 整体过渡效果 */\n}\n\n.sidebar:hover {\n  box-shadow: 5px 0 20px rgba(0, 0, 0, 0.3);\n  /* 悬停时增强阴影 */\n}\n\n.sidebar-header {\n  margin-bottom: 30px;\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* 让头像、姓名和+号均匀分布 */\n}\n\n/* 调整侧边栏头部元素间距 */\n.sidebar-header>* {\n  margin: 0 5px;\n}\n\n.header-icon {\n  font-size: 24px;\n  margin-right: 10px;\n  transition: transform 0.3s ease;\n}\n\n.sidebar-header:hover .header-icon {\n  transform: scale(1.1);\n  /* 标题图标放大效果 */\n}\n\n.header-text {\n  font-size: 16px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.sidebar-header:hover .header-text {\n  letter-spacing: 0.5px;\n  /* 文字间距变化 */\n}\n\n.sidebar-menu {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 0 10px;\n  gap: 8px;\n}\n\n/* 菜单项悬停特效 */\n.menu-item {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  opacity: 0.8;\n  transition: all 0.3s ease;\n  padding: 12px 20px;\n  border-radius: 12px;\n  /* 光滑棱角 */\n  transform: translateX(0);\n}\n\n.menu-item:hover {\n  opacity: 1;\n  color: #42b983;\n  background-color: rgba(255, 255, 255, 0.15);\n  transform: translateX(5px);\n  /* 轻微右移 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.menu-item.active {\n  opacity: 1;\n  color: #42b983;\n  background-color: rgba(255, 255, 255, 0.1);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.menu-icon {\n  font-size: 20px;\n  margin-right: 15px;\n  transition: transform 0.3s ease;\n}\n\n.menu-item:hover .menu-icon {\n  transform: scale(1.2);\n  /* 图标放大 */\n}\n\n.menu-text {\n  font-size: 14px;\n  transition: all 0.3s ease;\n}\n\n/* 用户名样式和特效 */\n.username {\n  font-size: 16px;\n  font-weight: 500;\n  color: white;\n  vertical-align: middle;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 80px;\n  transition: all 0.3s ease;\n  position: relative;\n}\n\n.username::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 0;\n  height: 2px;\n  background-color: white;\n  transition: width 0.3s ease;\n}\n\n.username:hover::after {\n  width: 100%;\n  /* 下划线动画 */\n}\n\n/* 头像悬停特效 */\n.avatar-hover {\n  transition: all 0.3s ease;\n}\n\n.avatar-hover:hover {\n  transform: scale(1.1) rotate(5deg);\n  /* 缩放旋转效果 */\n  box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);\n}\n\n/* +号图标悬停特效 */\n.icon-hover {\n  transition: all 0.3s ease;\n  transform-origin: center;\n}\n\n.icon-hover:hover {\n  transform: scale(1.3) rotate(90deg);\n  /* 放大旋转效果 */\n}\n\n/* 内容区域 - 隐藏边界并保留悬停特效 */\n.content-area {\n  flex: 1;\n  overflow-y: auto;\n  box-sizing: border-box;\n  background-color: #ffffff;\n  margin: 0;\n  /* 保持间距但不显示边框 */\n  border: none;\n  /* 明确移除边框 */\n  border-radius: 0;\n  /* 取消圆角 */\n  box-shadow: none;\n  /* 移除阴影效果 */\n  transition: all 0.3s ease;\n\n  /* 隐藏滚动条 */\n  scrollbar-width: none;\n  /* Firefox */\n  -ms-overflow-style: none;\n  /* IE和Edge */\n}\n\n.content-area::-webkit-scrollbar {\n  display: none;\n  /* Chrome, Safari, Opera */\n}\n\n.sidebar-footer {\n  margin-top: auto;\n  padding: 0 20px 20px;\n}\n\n.main-container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n  z-index: 5;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n}\n\n/* 消息下拉菜单相关样式 */\n.menu-group {\n  width: 100%;\n  position: relative;\n}\n\n/* 下拉箭头样式 */\n.dropdown-arrow {\n  margin-left: auto;\n  transition: transform 0.3s;\n  font-size: 16px;\n}\n\n/* 下拉菜单容器 */\n.dropdown-wrapper {\n  position: relative;\n  width: 100%;\n}\n\n/* 消息下拉菜单样式 */\n.message-dropdown {\n  width: 100%;\n  position: relative;\n  z-index: 5;\n  /* 确保在其他内容上方 */\n}\n\n.message-dropdown-content {\n  background-color: #34495e;\n  padding: 10px;\n  border-radius: 8px;\n  margin-top: 5px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n  width: calc(100% - 20px);\n}\n\n.message-list {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.message-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 10px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.message-item:hover {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.message-avatar {\n  margin-right: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.message-name {\n  font-size: 13px;\n}\n\n/* 下拉动画效果 */\n.dropdown-fade-enter-active,\n.dropdown-fade-leave-active {\n  transition: opacity 0.3s, transform 0.3s;\n}\n\n.dropdown-fade-enter-from,\n.dropdown-fade-leave-to {\n  opacity: 0;\n  transform: translateY(-10px);\n}\n\n.dropdown-fade-enter-to,\n.dropdown-fade-leave-from {\n  opacity: 1;\n  transform: translateY(0);\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=4cdf7206&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4cdf7206&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4cdf7206\"]])\n\nexport default __exports__","<template>\r\n  <div id=\"dialog\">\r\n    <!-- 顶部导航导航栏 -->\r\n    <van-nav-bar :fixed=\"true\" :placeholder=\"true\" left-arrow @click-left=\"backToHomeMessage()\"\r\n      custom-style=\"z-index: 999;\">\r\n      <template #right>\r\n        <van-icon name=\"wap-nav\" size=\"20\" />\r\n      </template>\r\n      <template #title>\r\n        <div style=\"line-height: 20px;\">\r\n          物联网产品岗面试官\r\n          <br>\r\n          \r\n        </div>\r\n      </template>\r\n    </van-nav-bar>\r\n\r\n    <!-- 聊天会话内容区域 -->\r\n    <div id=\"dialog_content\" class=\"chat-container\">\r\n      <div class=\"messages\" ref=\"messagesContainer\">\r\n        <!-- 初始欢迎消息 -->\r\n        <div class=\"message-item ai-message\">\r\n\r\n          <div class=\"message-bubble\">\r\n            你好！我是物联网产品岗面试官\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 动态消息列表 -->\r\n        <div v-for=\"(msg, index) in messages\" :key=\"index\"\r\n          :class=\"['message-item', msg.sender === 'user' ? 'user-message flex-row-reverse' : 'ai-message']\">\r\n\r\n\r\n\r\n          <!-- 文本消息 -->\r\n          <div v-if=\"msg.type === 'text'\" class=\"message-bubble\" :class=\"msg.isError ? 'error-message' : ''\">\r\n            {{ msg.content }}\r\n          </div>\r\n          <!-- 新增：格式化消息（Markdown） -->\r\n          <div v-if=\"msg.type === 'formatted'\" class=\"message-bubble markdown-bubble\">\r\n            <div v-html=\"msg.content\" class=\"markdown-render\"></div>\r\n          </div>\r\n          <!-- 语音消息 -->\r\n          <div v-if=\"msg.type === 'voice'\" class=\"voice-bubble\">\r\n            <div class=\"voice-controls\">\r\n              <van-icon :name=\"msg.isPlaying ? 'pause-circle' : 'play-circle'\" size=\"20\"\r\n                @click=\"toggleVoicePlayback(index)\" class=\"play-icon\" />\r\n              <div class=\"voice-wave\">\r\n                <div :style=\"{ height: '100%' }\"></div>\r\n                <div :style=\"{ height: '60%' }\"></div>\r\n                <div :style=\"{ height: '80%' }\"></div>\r\n                <div :style=\"{ height: '40%' }\"></div>\r\n              </div>\r\n              <span class=\"voice-duration\">{{ formatDuration(msg.duration) }}</span>\r\n            </div>\r\n\r\n            <!-- 语音操作按钮 -->\r\n            <div class=\"voice-actions\" v-if=\"msg.sender === 'user'\">\r\n              <van-button size=\"mini\" type=\"primary\" @click=\"convertVoiceToText(index)\" round>\r\n                转文字\r\n              </van-button>\r\n              <van-button size=\"mini\" type=\"info\" @click=\"analyzeVoiceTone(index)\" round>\r\n                分析语调\r\n              </van-button>\r\n              <van-button size=\"mini\" type=\"warning\" @click=\"calculateSpeechSpeed(index)\" round\r\n                :disabled=\"!msg.textResult\">\r\n                语速\r\n              </van-button>\r\n              <van-button size=\"mini\" type=\"success\" @click=\"analyzeLanguageLogic(index)\" round\r\n                :disabled=\"!msg.textResult\">\r\n                语言逻辑\r\n              </van-button>\r\n            </div>\r\n\r\n            <!-- 语音转文字结果 -->\r\n            <div v-if=\"msg.textResult\" class=\"voice-text-result\">\r\n              {{ msg.textResult }}\r\n            </div>\r\n\r\n            <!-- 语速计算结果 -->\r\n            <div v-if=\"msg.speechSpeed\" class=\"voice-speed-result\">\r\n              语速: {{ msg.speechSpeed }} 字/秒 (约 {{ Math.round(msg.speechSpeed * 60) }} 字/分钟)\r\n            </div>\r\n\r\n            <!-- 语调分析结果 -->\r\n            <div v-if=\"msg.toneResult\" class=\"voice-tone-result\">\r\n              <div>语调: {{ msg.toneResult.tone_type }}</div>\r\n              <div>基频均值: {{ msg.toneResult.f0_mean }}Hz</div>\r\n              <div>基频范围: {{ msg.toneResult.f0_min }}-{{ msg.toneResult.f0_max }}Hz</div>\r\n            </div>\r\n\r\n            <!-- 语言逻辑分析结果 -->\r\n            <div v-if=\"msg.logicResult\" class=\"voice-logic-result\">\r\n              <div><strong>语言逻辑分析:</strong></div>\r\n              <div>{{ msg.logicResult.analysis }}</div>\r\n              <div v-if=\"msg.logicResult.score\"><strong>连贯性评分:</strong> {{ msg.logicResult.score }}/10</div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 表情和姿态分析消息 -->\r\n          <div v-if=\"msg.type === 'expression'\" class=\"expression-bubble\">\r\n            <div class=\"expression-image-container\">\r\n              <img :src=\"msg.imageUrl\" class=\"expression-image\" alt=\"表情和姿态分析截图\">\r\n            </div>\r\n\r\n            <!-- 表情分析结果 -->\r\n            <div  class=\"expression-results\">\r\n              <div><strong>表情与动作分析:</strong></div>\r\n              \r\n              <div>{{ msg.expressionResults.result }}</div>\r\n            </div>\r\n\r\n            <!-- 姿态分析结果 -->\r\n            <div v-if=\"msg.poseResult\" class=\"pose-result\">\r\n              <div><strong>姿态分析:</strong></div>\r\n              <div>动作: {{ msg.poseResult.pose }}</div>\r\n              <div>置信度: {{ (msg.poseResult.score * 100).toFixed(1) }}%</div>\r\n              <div>帧率: {{ msg.poseResult.fps }}fps</div>\r\n            </div>\r\n\r\n            <!-- 综合分析结果 -->\r\n            <div v-if=\"msg.comprehensiveAnalysis\" class=\"comprehensive-analysis\">\r\n              <div><strong>综合分析:</strong></div>\r\n              <div>{{ msg.comprehensiveAnalysis }}</div>\r\n            </div>\r\n\r\n            <!-- 操作按钮 -->\r\n            <div class=\"expression-actions\" v-if=\"msg.sender === 'user'\">\r\n              <van-button size=\"mini\" type=\"primary\" @click=\"analyzeComprehensive(index)\" round>\r\n                综合分析\r\n              </van-button>\r\n              <van-button size=\"mini\" type=\"success\" @click=\"saveAnalysisToStorage(msg)\" round>\r\n                保存分析\r\n              </van-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 正在输入指示器 -->\r\n        <div v-if=\"isTyping\" :id=\"typingId\" class=\"message-item ai-message\">\r\n          <div class=\"avatar\">\r\n\r\n          </div>\r\n          <div class=\"message-bubble typing\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 底部输入栏 -->\r\n    <div id=\"dialog_bottombar\">\r\n      <div id=\"dialog_bottombar_inside\">\r\n        <!-- 使用flex布局将输入框和发送按钮放在同一行 -->\r\n        <div style=\"display: flex; align-items: flex-end; gap: 8px;\">\r\n          <van-field type=\"textarea\" rows=\"1\" :autosize=\"{ maxHeight: 100, minHeight: 40 }\" v-model=\"message\"\r\n            style=\"border-radius:25px; padding:10px; flex: 1;\" @keypress.enter.prevent=\"sendMessage\"\r\n            placeholder=\"输入消息...\" />\r\n\r\n          <!-- 发送按钮移至输入框右侧 -->\r\n          <van-button round type=\"primary\" size=\"small\" @click=\"sendMessage\"\r\n            style=\"width:60px; height:60px; padding:0; display:flex; align-items:center; justify-content:center;\"\r\n            :disabled=\"!message.trim()\">\r\n            发送\r\n            <van-icon name=\"paper-plane-o\" size=\"16\" style=\"margin-left: 2px;\" />\r\n          </van-button>\r\n        </div>\r\n\r\n        <van-row style=\"padding-top: 8px;\">\r\n          <van-col span=\"8\" style=\"text-align:center;\">\r\n            <van-icon :name=\"isRecording ? 'stop' : require('@/assets/icon/icon_dialog_语音.png')\" size=\"20\"\r\n              @click=\"startInterviewProcess()\" />\r\n          </van-col>\r\n          <van-col span=\"8\" style=\"text-align:center;\">\r\n            <van-icon name=\"image\" size=\"20\" />\r\n          </van-col>\r\n          <van-col span=\"4\" style=\"text-align:center;\">\r\n            <van-icon :name=\"require('@/assets/icon/icon_dialog_相机.png')\" size=\"20\" @click=\"toggleCamera\"\r\n              :class=\"isCameraActive ? 'camera-active' : ''\" />\r\n          </van-col>\r\n          <van-col span=\"4\" style=\"text-align:center;\">\r\n            <van-icon name=\"red-envelope\" size=\"20\" />\r\n          </van-col>\r\n          \r\n          <!-- 移除原发送按钮所在的van-col -->\r\n        </van-row>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <van-popup \r\n      v-model:show=\"isCameraModalVisible\" \r\n      :style=\"{\r\n        width: popupWidth + 'px',   // 动态宽度\r\n        height: popupHeight + 'px', // 动态高度\r\n        left: popupLeft + 'px',     // 动态左偏移\r\n        top: popupTop + 'px',       // 动态上偏移\r\n        'z-index': 100,\r\n        background: 'white',\r\n        borderRadius: '12px',\r\n        boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\r\n        overflow: 'hidden',\r\n        position: 'fixed',  // 固定定位，支持自由移动\r\n        margin: 0           // 清除默认margin\r\n      }\" \r\n      :overlay=\"false\"\r\n      :position=\"null\"\r\n    >\r\n      <!-- 弹窗头部（可拖拽区域） -->\r\n      <!-- 开始拖拽 -->\r\n      <div \r\n        class=\"camera-header\"\r\n        style=\"padding: 12px; border-bottom: 1px solid #eee; display: flex; justify-content: space-between; align-items: center; cursor: move;\"\r\n        @mousedown=\"startDrag\"\r\n      >\r\n        <h3 style=\"margin: 0; font-size: 16px;\">表情与姿态识别</h3>\r\n        <van-icon name=\"close\" @click=\"toggleCamera\" style=\"font-size: 20px; cursor: pointer;\" />\r\n      </div>\r\n\r\n      <!-- 相机预览区域 -->\r\n      <div class=\"camera-preview\" style=\"flex: 1; padding: 10px; box-sizing: border-box; position: relative;\">\r\n        <video ref=\"videoElement\" autoplay playsinline class=\"camera-video\"\r\n          style=\"width: 100%; height: 100%; object-fit: cover; border-radius: 8px;\"></video>\r\n\r\n        <!-- 加载中状态 -->\r\n        <div v-if=\"isLoadingCamera\"\r\n          style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center;\">\r\n          <van-loading type=\"spinner\" color=\"#1677ff\" />\r\n          <p style=\"margin-top: 8px; color: #666;\">正在初始化相机...</p>\r\n        </div>\r\n\r\n        <!-- 错误提示 -->\r\n        <div v-if=\"cameraError\"\r\n          style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center; color: #f53f3f;\">\r\n          <van-icon name=\"warning-circle\" color=\"#f53f3f\" size=\"24\" />\r\n          <p style=\"margin-top: 8px;\">{{ cameraError }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 相机控制按钮 -->\r\n      <div class=\"camera-controls\" style=\"padding: 12px; display: flex; gap: 10px; justify-content: center;\">\r\n        <van-button type=\"primary\" round @click=\"captureImage\" :disabled=\"!isCameraActive || isProcessingImage\"\r\n          style=\"padding: 8px 20px;\">\r\n          <van-icon name=\"camera\" size=\"18\" style=\"margin-right: 5px;\" />\r\n          {{ isProcessingImage ? '处理中...' : '拍照分析' }}\r\n        </van-button>\r\n\r\n        <van-button type=\"info\" round @click=\"startContinuousAnalysis\"\r\n          :disabled=\"!isCameraActive || isAnalyzingContinuously\" style=\"padding: 8px 20px;\">\r\n          <van-icon name=\"play\" size=\"18\" style=\"margin-right: 5px;\" />\r\n          {{ isAnalyzingContinuously ? '停止连续分析' : '连续分析' }}\r\n        </van-button>\r\n      </div>\r\n\r\n      <!-- 右下角 resize 手柄（用于调整大小） -->\r\n      <div \r\n        class=\"resize-handle\"\r\n        style=\"position: absolute; right: 0; bottom: 0; width: 15px; height: 15px; cursor: nwse-resize; background: #1677ff; border-radius: 0 0 12px 0;\"\r\n        @mousedown=\"startResize\"\r\n      ></div>\r\n    </van-popup>\r\n\r\n\r\n    <!-- 评测报告弹窗 -->\r\n    <van-popup v-model:show=\"isReportVisible\" position=\"center\"\r\n      :style=\"{ width: '90%', maxWidth: '800px', height: '90%', overflow: 'auto' }\">\r\n      <div class=\"report-container\">\r\n        <div class=\"report-header\">\r\n          <h2>面试多维度评估报告</h2>\r\n          <van-icon name=\"close\" @click=\"isReportVisible = false\" class=\"close-icon\" />\r\n        </div>\r\n\r\n        <div v-if=\"reportLoading\" class=\"report-loading\">\r\n          <van-loading type=\"spinner\" color=\"#1677ff\" size=\"30\" />\r\n          <p>正在生成评估报告...</p>\r\n        </div>\r\n\r\n        <div v-else-if=\"reportError\" class=\"report-error\">\r\n          <van-icon name=\"warning-circle\" color=\"#f53f3f\" size=\"24\" />\r\n          <p>{{ reportError }}</p>\r\n          <van-button @click=\"generateReportFromStorage\" type=\"primary\" round>重试</van-button>\r\n        </div>\r\n\r\n        <div v-else class=\"report-content\">\r\n          <!-- 雷达图区域 -->\r\n          <div class=\"radar-chart-container\">\r\n            <h3 class=\"chart-title\">多维度能力雷达图</h3>\r\n            <div class=\"chart-wrapper\">\r\n              <canvas ref=\"radarChart\" width=\"400\" height=\"300\"></canvas>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 能力详情区域 -->\r\n          <div class=\"ability-details-container\">\r\n            <h3 class=\"details-title\">各维度评分详情</h3>\r\n            <div class=\"details-list\">\r\n              <div v-for=\"(item, index) in reportIndicators\" :key=\"index\" class=\"detail-item\">\r\n                <span class=\"indicator-name\">{{ item }}</span>\r\n                <span class=\"score-value\" :class=\"getScoreClass(reportValues[index])\">\r\n                  {{ reportValues[index] }}分 ({{ getScoreLevel(reportValues[index]) }})\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 详细分析区域 -->\r\n          <div class=\"analysis-container\">\r\n            <h3 class=\"analysis-title\">详细分析</h3>\r\n\r\n            <div class=\"analysis-section\">\r\n              <h4>专业知识水平</h4>\r\n              <p>{{ professionalKnowledgeAnalysis || '暂无数据' }}</p>\r\n              <p v-if=\"firstQuestion\"><strong>问题:</strong> {{ firstQuestion }}</p>\r\n              <p v-if=\"firstResult\"><strong>回答:</strong> {{ firstResult }}</p>\r\n            </div>\r\n\r\n            <div class=\"analysis-section\">\r\n              <h4>技能匹配度</h4>\r\n              <p>{{ skillMatchAnalysis || '暂无数据' }}</p>\r\n              <p v-if=\"secondQuestion\"><strong>问题:</strong> {{ secondQuestion }}</p>\r\n              <p v-if=\"secondResult\"><strong>回答:</strong> {{ secondResult }}</p>\r\n            </div>\r\n\r\n            <div class=\"analysis-section\">\r\n              <h4>语言表达能力</h4>\r\n              <p>{{ languageExpressionAnalysis || '暂无数据' }}</p>\r\n              <p v-if=\"thirdQuestion\"><strong>问题:</strong> {{ thirdQuestion }}</p>\r\n              <p v-if=\"thirdResult\"><strong>回答:</strong> {{ thirdResult }}</p>\r\n            </div>\r\n\r\n            <div class=\"analysis-section\">\r\n              <h4>逻辑思维能力</h4>\r\n              <p>{{ logicalThinkingAnalysis || '暂无数据' }}</p>\r\n              <p v-if=\"fourthQuestion\"><strong>问题:</strong> {{ fourthQuestion }}</p>\r\n              <p v-if=\"fourthResult\"><strong>回答:</strong> {{ fourthResult }}</p>\r\n            </div>\r\n\r\n            <div class=\"analysis-section\">\r\n              <h4>创新能力</h4>\r\n              <p>{{ innovationAbilityAnalysis || '暂无数据' }}</p>\r\n              <p v-if=\"fifthQuestion\"><strong>问题:</strong> {{ fifthQuestion }}</p>\r\n              <p v-if=\"fifthResult\"><strong>回答:</strong> {{ fifthResult }}</p>\r\n            </div>\r\n          </div>\r\n          <!-- 在报告的详细分析区域下方添加新内容 -->\r\n          <div class=\"analysis-container\">\r\n            <h3 class=\"analysis-title\">关键问题定位</h3>\r\n            <div class=\"issue-location\">\r\n              <p>{{ keyIssues || '暂无关键问题定位' }}</p>\r\n\r\n              <div v-if=\"issueExamples && issueExamples.length\">\r\n                <h4>具体表现示例:</h4>\r\n                <ul>\r\n                  <li v-for=\"(example, index) in issueExamples\" :key=\"index\">\r\n                    {{ example }}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"analysis-container\">\r\n            <h3 class=\"analysis-title\">反馈建议</h3>\r\n            <div class=\"feedback-suggestions\">\r\n              <div v-if=\"feedbackCategories && feedbackCategories.length\">\r\n                <div v-for=\"(category, catIndex) in feedbackCategories\" :key=\"catIndex\" class=\"feedback-category\">\r\n                  <h4>{{ category.title }}</h4>\r\n                  <ul>\r\n                    <li v-for=\"(suggestion, sugIndex) in category.suggestions\" :key=\"sugIndex\">\r\n                      {{ suggestion }}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <p v-else>暂无具体反馈建议</p>\r\n            </div>\r\n          </div>\r\n          <!-- 综合评价 -->\r\n          <div class=\"summary-container\">\r\n            <h3 class=\"summary-title\">综合评价与建议</h3>\r\n            <div class=\"summary-content\">\r\n              <p>{{ comprehensiveEvaluation || '暂无综合评价' }}</p>\r\n\r\n              <h4>改进建议</h4>\r\n              <ul v-if=\"improvementSuggestions.length\">\r\n                <li v-for=\"(suggestion, index) in improvementSuggestions\" :key=\"index\">\r\n                  {{ suggestion }}\r\n                </li>\r\n              </ul>\r\n              <p v-else>暂无建议</p>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 响应体展示区域 -->\r\n          <div class=\"response-body-container\">\r\n            <h3 class=\"response-body-title\">原始响应数据</h3>\r\n            <div class=\"response-body-content\">\r\n              <pre>{{ formattedReportResponse }}</pre>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </van-popup>\r\n\r\n    <!-- 录音提示 -->\r\n    <div v-if=\"isRecording\" class=\"recording-indicator\">\r\n      <div class=\"recording-dot\"></div>\r\n      <p>正在录音...{{ recordingSeconds }}s</p>\r\n      <p>松开结束录音</p>\r\n    </div>\r\n\r\n    <!-- 服务状态提示 -->\r\n    <div class=\"status-bar\" :class=\"statusClass\" style=\"z-index: 998;\">\r\n      {{ statusText }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Chart, registerables, RadarController } from 'chart.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n    // 弹窗初始位置和尺寸（可根据需求调整）\r\n      popupWidth: 300,\r\n      popupHeight: 600,\r\n      popupLeft: 500,\r\n      popupTop: 100,\r\n      \r\n      // 拖拽相关状态\r\n      isDragging: false,\r\n      startX: 0,\r\n      startY: 0,\r\n      \r\n      // 调整大小相关状态\r\n      isResizing: false,\r\n      startWidth: 0,\r\n      startHeight: 0,\r\n      msg: {\r\n        // 提前初始化 expressionResults 为数组，避免 undefined\r\n        expressionResults: []\r\n      },\r\n      // 关键问题定位\r\n      keyIssues: '',\r\n      issueExamples: [],\r\n\r\n      // 反馈建议\r\n      feedbackCategories: [],\r\n\r\n      name: this.$route.params.name,\r\n      message: \"\",\r\n      messages: [],\r\n      isTyping: false,\r\n      typingId: \"\",\r\n      API_BASE_URL: 'https://123.56.203.202',\r\n      statusText: '连接中...',\r\n      statusClass: 'text-xs text-gray-500 mt-2 text-center',\r\n      commonHeaders: {\r\n        'ngrok-skip-browser-warning': '1'\r\n      },\r\n\r\n      // 语音相关状态\r\n      isRecording: false,\r\n      mediaRecorder: null,\r\n      audioBlob: null,\r\n      recordingSeconds: 0,\r\n      recordingTimer: null,\r\n      audioContext: null,\r\n      audioElements: {},\r\n      mediaStream: null,\r\n      audioChunks: [],\r\n      transcribeCount: 0, // 转写计数，用于跟踪是第几次转写\r\n\r\n      // 相机相关状态\r\n      isCameraModalVisible: false,\r\n      isCameraActive: false,\r\n      isLoadingCamera: false,\r\n      cameraError: null,\r\n      isProcessingImage: false,\r\n      isAnalyzingContinuously: false,\r\n      continuousAnalysisTimer: null,\r\n      detectionInterval: null,\r\n      videoStream: null,\r\n\r\n      // 评测报告相关状态\r\n      isReportVisible: false,\r\n      reportLoading: false,\r\n      reportError: '',\r\n      chart: null,\r\n      reportResponse: null, // 存储原始响应数据\r\n\r\n      // 报告数据 - 五个维度\r\n      reportIndicators: [\r\n        '专业知识水平',\r\n        '技能匹配度',\r\n        '语言表达能力',\r\n        '逻辑思维能力',\r\n        '创新能力'\r\n      ],\r\n      reportValues: [60, 60, 60, 60, 60],\r\n\r\n      // 问题和答案存储\r\n      firstQuestion: '',\r\n      secondQuestion: '',\r\n      thirdQuestion: '',\r\n      fourthQuestion: '',\r\n      fifthQuestion: '',\r\n      firstResult: '',\r\n      secondResult: '',\r\n      thirdResult: '',\r\n      fourthResult: '',\r\n      fifthResult: '',\r\n\r\n      // 详细分析数据\r\n      professionalKnowledgeAnalysis: '', // 专业知识水平\r\n      skillMatchAnalysis: '', // 技能匹配度\r\n      languageExpressionAnalysis: '', // 语言表达能力\r\n      logicalThinkingAnalysis: '', // 逻辑思维能力\r\n      innovationAbilityAnalysis: '', // 创新能力\r\n      comprehensiveEvaluation: '',\r\n      improvementSuggestions: []\r\n    };\r\n  },\r\n  computed: {\r\n    // 格式化响应体数据用于展示\r\n    formattedReportResponse() {\r\n      if (!this.reportResponse) return '无响应数据';\r\n      return JSON.stringify(this.reportResponse, null, 2);\r\n    }\r\n  },\r\n  mounted() {\r\n    localStorage.setItem('career', '物联网产品岗');\r\n    console.log(localStorage.getItem('career'));\r\n    \r\n    this.testConnection();\r\n    this.initContainerHeight();\r\n    window.addEventListener('resize', this.initContainerHeight);\r\n    this.checkRecordingSupport();\r\n\r\n    // 从localStorage加载已保存的问题和答案\r\n    this.loadStoredQuestionsAndAnswers();\r\n\r\n    // 注册Chart.js组件\r\n    Chart.register(...registerables);\r\n    Chart.register(RadarController);\r\n    window.Chart = Chart;\r\n\r\n\r\n\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.initContainerHeight);\r\n    this.stopRecording();\r\n    Object.values(this.audioElements).forEach(audio => {\r\n      if (audio) {\r\n        audio.pause();\r\n      }\r\n    });\r\n\r\n    // 清理相机相关资源\r\n    this.stopCamera();\r\n    if (this.continuousAnalysisTimer) {\r\n      clearInterval(this.continuousAnalysisTimer);\r\n    }\r\n    if (this.detectionInterval) {\r\n      clearInterval(this.detectionInterval);\r\n    }\r\n\r\n    // 销毁图表\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n    }\r\n  },\r\n  methods: {\r\n     // 开始拖拽弹窗\r\n    startDrag(e) {\r\n      this.isDragging = true;\r\n      // 记录初始鼠标位置和弹窗位置\r\n      this.startX = e.clientX;\r\n      this.startY = e.clientY;\r\n      \r\n      // 绑定鼠标移动和释放事件\r\n      document.addEventListener('mousemove', this.handleDrag);\r\n      document.addEventListener('mouseup', this.stopDrag);\r\n      e.preventDefault(); // 防止拖动时选中文本\r\n    },\r\n    \r\n    // 处理拖拽逻辑\r\n    handleDrag(e) {\r\n      if (!this.isDragging) return;\r\n      \r\n      // 计算鼠标移动距离\r\n      const deltaX = e.clientX - this.startX;\r\n      const deltaY = e.clientY - this.startY;\r\n      \r\n      // 更新弹窗位置（限制在可视区域内）\r\n      const newLeft = this.popupLeft + deltaX;\r\n      const newTop = this.popupTop + deltaY;\r\n      \r\n      // 限制左边界不小于0\r\n      this.popupLeft = Math.max(0, newLeft);\r\n      // 限制上边界不小于0\r\n      this.popupTop = Math.max(0, newTop);\r\n      // 限制右边界不超过窗口宽度\r\n      this.popupLeft = Math.min(window.innerWidth - this.popupWidth, this.popupLeft);\r\n      // 限制下边界不超过窗口高度\r\n      this.popupTop = Math.min(window.innerHeight - this.popupHeight, this.popupTop);\r\n      \r\n      // 更新初始位置（用于下一次计算）\r\n      this.startX = e.clientX;\r\n      this.startY = e.clientY;\r\n    },\r\n    \r\n    // 停止拖拽\r\n    stopDrag() {\r\n      this.isDragging = false;\r\n      document.removeEventListener('mousemove', this.handleDrag);\r\n      document.removeEventListener('mouseup', this.stopDrag);\r\n    },\r\n    \r\n    // 开始调整大小\r\n    startResize(e) {\r\n      this.isResizing = true;\r\n      // 记录初始鼠标位置和弹窗尺寸\r\n      this.startX = e.clientX;\r\n      this.startY = e.clientY;\r\n      this.startWidth = this.popupWidth;\r\n      this.startHeight = this.popupHeight;\r\n      \r\n      // 绑定鼠标移动和释放事件\r\n      document.addEventListener('mousemove', this.handleResize);\r\n      document.addEventListener('mouseup', this.stopResize);\r\n      e.preventDefault(); // 防止拖动时选中文本\r\n    },\r\n    \r\n    // 处理调整大小逻辑\r\n    handleResize(e) {\r\n      if (!this.isResizing) return;\r\n      \r\n      // 计算鼠标移动距离（控制宽高变化）\r\n      const deltaWidth = e.clientX - this.startX;\r\n      const deltaHeight = e.clientY - this.startY;\r\n      \r\n      // 计算新的宽高（设置最小尺寸限制，避免过小）\r\n      const minWidth = 200;\r\n      const minHeight = 300;\r\n      this.popupWidth = Math.max(minWidth, this.startWidth + deltaWidth);\r\n      this.popupHeight = Math.max(minHeight, this.startHeight + deltaHeight);\r\n      \r\n      // 限制最大尺寸不超过窗口\r\n      this.popupWidth = Math.min(window.innerWidth - 50, this.popupWidth);\r\n      this.popupHeight = Math.min(window.innerHeight - 50, this.popupHeight);\r\n    },\r\n    \r\n    // 停止调整大小\r\n    stopResize() {\r\n      this.isResizing = false;\r\n      document.removeEventListener('mousemove', this.handleResize);\r\n      document.removeEventListener('mouseup', this.stopResize);\r\n    },\r\n    // 从localStorage加载已保存的问题和答案\r\n    loadStoredQuestionsAndAnswers() {\r\n      // 硬编码设置指定的五个问题到localStorage（如果不存在）\r\n      const defaultQuestions = [\r\n        {\r\n          id: \"firstQuestion\",\r\n          content: \"请详细阐述您对物联网产品岗领域中核心概念和技术的理解，以及您在实际项目中如何应用这些知识解决问题。\"\r\n        },\r\n        {\r\n          id: \"secondQuestion\",\r\n          content: \"在物联网产品岗岗位上，您认为哪些关键技能是必不可少的？请举例说明您在这些技能方面的掌握程度和实际应用经验。\"\r\n        },\r\n        {\r\n          id: \"thirdQuestion\",\r\n          content: \"请描述一次您需要向非技术团队成员清晰解释物联网产品岗相关复杂技术概念的经历。您采用了什么方法确保对方理解？\"\r\n        },\r\n        {\r\n          id: \"fourthQuestion\",\r\n          content: \"在物联网产品岗工作中，当面对一个复杂问题时，您的分析和解决问题的逻辑步骤是什么？请分享一个具体案例。\"\r\n        },\r\n        {\r\n          id: \"fifthQuestion\",\r\n          content: \"请分享一个您在物联网产品岗相关项目中提出创新解决方案的经历。您是如何发现问题并提出新颖的解决思路的？\"\r\n        }\r\n      ];\r\n\r\n      // 初始化localStorage中的问题（如果不存在）\r\n      defaultQuestions.forEach(question => {\r\n        if (!localStorage.getItem(question.id)) {\r\n          localStorage.setItem(question.id, question.content);\r\n        }\r\n      });\r\n\r\n      // 从localStorage加载问题到组件\r\n      this.firstQuestion = localStorage.getItem(\"firstQuestion\") || '';\r\n      this.secondQuestion = localStorage.getItem(\"secondQuestion\") || '';\r\n      this.thirdQuestion = localStorage.getItem(\"thirdQuestion\") || '';\r\n      this.fourthQuestion = localStorage.getItem(\"fourthQuestion\") || '';\r\n      this.fifthQuestion = localStorage.getItem(\"fifthQuestion\") || '';\r\n\r\n      // 从localStorage加载答案到组件\r\n      this.firstResult = localStorage.getItem(\"firstResult\") || '';\r\n      this.secondResult = localStorage.getItem(\"secondResult\") || '';\r\n      this.thirdResult = localStorage.getItem(\"thirdResult\") || '';\r\n      this.fourthResult = localStorage.getItem(\"fourthResult\") || '';\r\n      this.fifthResult = localStorage.getItem(\"fifthResult\") || '';\r\n    },\r\n\r\n    startInterviewProcess() {\r\n  // 模拟avatarPlatform2已实例化\r\n  const avatarPlatform2 = true;\r\n\r\n  if (avatarPlatform2) {\r\n    // 初始调用 - 问候语（带自动播放视频）\r\n    let username = localStorage.getItem(\"username\") || \"候选人\";\r\n    let career = localStorage.getItem(\"career\") || \"相关岗位\";\r\n    let text = `你好，${username}，欢迎面试${career}。接下来将进行面试环节，共有五道题目，涉及专业知识水平、技能匹配度、语言表达能力、逻辑思维能力和创新能力五个维度。请认真思考后回答。`;\r\n\r\n    // 创建视频元素并设置自动播放\r\n    const videoElement = document.createElement('video');\r\n    videoElement.controls = true; // 显示播放控件\r\n    videoElement.autoplay = true; // 自动播放\r\n    videoElement.muted = false; // 不静音\r\n    videoElement.style.width = \"100%\";\r\n    videoElement.style.maxWidth = \"600px\";\r\n    videoElement.style.marginTop = \"15px\";\r\n\r\n    // 添加视频源\r\n    const sourceElement = document.createElement('source');\r\n    sourceElement.src = \"https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Crengongzhinengjishugang.mp4\";\r\n    sourceElement.type = \"video/mp4\";\r\n    videoElement.appendChild(sourceElement);\r\n\r\n    // 处理自动播放限制的兼容方案\r\n    videoElement.addEventListener('canplaythrough', () => {\r\n      // 尝试播放，处理浏览器自动播放政策限制\r\n      videoElement.play().catch(e => {\r\n        console.log('自动播放被浏览器限制，需要用户交互后播放:', e);\r\n        // 显示提示让用户手动播放\r\n        const playPrompt = document.createElement('p');\r\n        playPrompt.style.color = '#666';\r\n        playPrompt.style.fontSize = '14px';\r\n        playPrompt.textContent = '提示：请点击播放按钮观看面试说明';\r\n        messageContainer.appendChild(playPrompt);\r\n      });\r\n    });\r\n\r\n    // 创建包含文本和视频的容器\r\n    const messageContainer = document.createElement('div');\r\n    messageContainer.innerHTML = `<p>${text}</p>`;\r\n    messageContainer.appendChild(videoElement);\r\n\r\n    // 添加不支持视频的提示\r\n    const fallbackText = document.createTextNode(\"您的浏览器不支持视频播放功能\");\r\n    messageContainer.appendChild(fallbackText);\r\n\r\n    // 添加消息到界面\r\n    this.addMessage('ai', text, 'text');\r\n\r\n    // 设置30秒后自动显示面试题弹窗（横向单题展示）\r\n    setTimeout(() => {\r\n      // 硬编码岗位为人工智能技术岗\r\n      const career = \"物联网产品岗\";\r\n\r\n      // 五道题目的文本内容\r\n      const questions = [\r\n        {\r\n          title: \"第一道题\",\r\n          text: '',\r\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A/Temp/%E7%89%A9%E8%81%94%E7%BD%91%E4%BA%A7%E5%93%81%E5%B2%971.mp4\",\r\n          id: \"first\"\r\n        },\r\n        {\r\n          title: \"第二道题\",\r\n          text: '',\r\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A/Temp/%E7%89%A9%E8%81%94%E7%BD%91%E4%BA%A7%E5%93%81%E5%B2%972.mp4\",\r\n          id: \"second\"\r\n        },\r\n        {\r\n          title: \"第三道题\",\r\n          text: '',\r\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A/Temp/%E7%89%A9%E8%81%94%E7%BD%91%E4%BA%A7%E5%93%81%E5%B2%973.mp4\",\r\n          id: \"third\"\r\n        },\r\n        {\r\n          title: \"第四道题\",\r\n          text: '',\r\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A/Temp/%E7%89%A9%E8%81%94%E7%BD%91%E4%BA%A7%E5%93%81%E5%B2%974.mp4\",\r\n          id: \"fourth\"\r\n        },\r\n        {\r\n          title: \"第五道题\",\r\n          text: '',\r\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A/Temp/%E7%89%A9%E8%81%94%E7%BD%91%E4%BA%A7%E5%93%81%E5%B2%975.mp4\",\r\n          id: \"fifth\"\r\n        }\r\n      ];\r\n\r\n      // 当前题目索引\r\n      let currentIndex = 0;\r\n\r\n      // 弹窗位置和大小的默认值\r\n      const defaultWidth = 800;\r\n      const defaultHeight = 600;\r\n      const defaultLeft = (window.innerWidth - defaultWidth) / 2;\r\n      const defaultTop = (window.innerHeight - defaultHeight) / 2;\r\n\r\n      // 创建弹窗元素（背景遮罩）\r\n      const modal = document.createElement('div');\r\n      modal.style.cssText = `\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: rgba(0,0,0,0.5);\r\n\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nbackground: rgba(0,0,0,0.1); /* 降低透明度 */\r\n  z-index: 999; /* 降低z-index，确保主页面元素可交互 */\r\n  pointer-events: none; /* 关键：允许点击穿透遮罩层 */\r\n`;\r\n\r\n      // 创建可拖拽的弹窗容器\r\n      const draggableModal = document.createElement('div');\r\n      draggableModal.style.cssText = `\r\nwidth: ${defaultWidth}px;\r\nheight: ${defaultHeight}px;\r\nleft: ${defaultLeft}px;\r\ntop: ${defaultTop}px;\r\nposition: absolute;\r\nbox-shadow: 0 4px 20px rgba(0,0,0,0.15);\r\nborder-radius: 12px;\r\noverflow: hidden;\r\ndisplay: flex;\r\nflex-direction: column;\r\nz-index: 1000; /* 确保弹窗在遮罩层上方 */\r\n  pointer-events: auto; /* 确保弹窗自身可交互 */\r\n`;\r\n\r\n      // 弹窗标题栏（可拖拽区域）\r\n      const modalHeader = document.createElement('div');\r\n      \r\n      modalHeader.style.cssText = `\r\nbackground: #f8f9fa;\r\npadding: 15px 20px;\r\nborder-bottom: 1px solid #eee;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\ncursor: move;\r\n`;\r\n      \r\n      // 标题文本\r\n      const headerTitle = document.createElement('h3');\r\n      headerTitle.textContent = '面试题目';\r\n      headerTitle.style.cssText = `\r\nmargin: 0;\r\nfont-size: 16px;\r\ncolor: #333;\r\n`;\r\n      \r\n      // 关闭按钮\r\n      const closeButton = document.createElement('button');\r\n      closeButton.innerHTML = '×';\r\n      closeButton.style.cssText = `\r\nbackground: none;\r\nborder: none;\r\nfont-size: 20px;\r\ncursor: pointer;\r\ncolor: #666;\r\npadding: 0 10px;\r\nline-height: 1;\r\n`;\r\n      \r\n      modalHeader.appendChild(headerTitle);\r\n      modalHeader.appendChild(closeButton);\r\n      // 就在这里添加关闭按钮的点击事件（这是关键的添加位置）\r\ncloseButton.addEventListener('click', () => {\r\n  if (confirm('确定要关闭吗？已填写的回答可能会丢失。')) {\r\n    document.body.removeChild(modal);\r\n  }\r\n});\r\n\r\n      // 弹窗内容容器\r\n      const modalContainer = document.createElement('div');\r\n      modalContainer.style.cssText = `\r\nbackground: white;\r\nflex: 1;\r\ndisplay: flex;\r\nflex-direction: column;\r\noverflow: hidden;\r\n`;\r\n\r\n      // 题目导航指示器\r\n      const progressIndicator = document.createElement('div');\r\n      progressIndicator.id = 'progressIndicator';\r\n      progressIndicator.style.cssText = `\r\ndisplay: flex;\r\njustify-content: center;\r\nmargin: 15px 0;\r\ngap: 8px;\r\npadding: 0 20px;\r\n`;\r\n\r\n      // 创建进度点\r\n      questions.forEach((_, index) => {\r\n        const dot = document.createElement('div');\r\n        dot.id = `progress-${index}`;\r\n        dot.style.cssText = `\r\nwidth: 12px;\r\nheight: 12px;\r\nborder-radius: 50%;\r\nbackground: #ddd;\r\ntransition: all 0.3s ease;\r\n`;\r\n        progressIndicator.appendChild(dot);\r\n      });\r\n\r\n      // 题目内容区域 - 添加滚动功能\r\n      const questionContentWrapper = document.createElement('div');\r\n      questionContentWrapper.style.cssText = `\r\nflex: 1;\r\noverflow-y: auto;\r\npadding: 0 20px;\r\n`;\r\n\r\n      // 题目内容容器\r\n      const questionContent = document.createElement('div');\r\n      questionContent.id = 'questionContent';\r\n      questionContentWrapper.appendChild(questionContent);\r\n\r\n      // 按钮区域\r\n      const buttonContainer = document.createElement('div');\r\n      buttonContainer.style.cssText = `\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 15px 20px;\r\nborder-top: 1px solid #eee;\r\n`;\r\n\r\n      // 上一题按钮\r\n      const prevButton = document.createElement('button');\r\n      prevButton.textContent = '上一题';\r\n      prevButton.style.cssText = `\r\nbackground: #f0f0f0;\r\ncolor: #333;\r\nborder: none;\r\npadding: 10px 20px;\r\nborder-radius: 6px;\r\ncursor: pointer;\r\nfont-size: 14px;\r\ntransition: background 0.3s;\r\n`;\r\n      prevButton.addEventListener('mouseover', () => prevButton.style.background = '#e0e0e0');\r\n      prevButton.addEventListener('mouseout', () => prevButton.style.background = '#f0f0f0');\r\n\r\n      // 下一题/提交按钮\r\n      const nextButton = document.createElement('button');\r\n      nextButton.textContent = '下一题';\r\n      nextButton.style.cssText = `\r\nbackground: #4CAF50;\r\ncolor: white;\r\nborder: none;\r\npadding: 10px 20px;\r\nborder-radius: 6px;\r\ncursor: pointer;\r\nfont-size: 14px;\r\ntransition: background 0.3s;\r\n`;\r\n      nextButton.addEventListener('mouseover', () => nextButton.style.background = '#45a049');\r\n      nextButton.addEventListener('mouseout', () => nextButton.style.background = '#4CAF50');\r\n\r\n      // 右下角调整大小手柄\r\n      const resizeHandle = document.createElement('div');\r\n      resizeHandle.style.cssText = `\r\nposition: absolute;\r\nright: 0;\r\nbottom: 0;\r\nwidth: 15px;\r\nheight: 15px;\r\ncursor: nwse-resize;\r\nbackground: #4CAF50;\r\nborder-radius: 4px 0 0 0;\r\n`;\r\n\r\n      // 组装弹窗\r\n      buttonContainer.appendChild(prevButton);\r\n      buttonContainer.appendChild(nextButton);\r\n      modalContainer.appendChild(progressIndicator);\r\n      modalContainer.appendChild(questionContentWrapper);\r\n      modalContainer.appendChild(buttonContainer);\r\n      draggableModal.appendChild(modalHeader);\r\n      draggableModal.appendChild(modalContainer);\r\n      draggableModal.appendChild(resizeHandle);\r\n      modal.appendChild(draggableModal);\r\n      document.body.appendChild(modal);\r\n\r\n      // 渲染当前题目\r\n      function renderCurrentQuestion() {\r\n        const question = questions[currentIndex];\r\n\r\n        // 更新进度指示器\r\n        document.querySelectorAll('#progressIndicator div').forEach((dot, index) => {\r\n          if (index < currentIndex) {\r\n            dot.style.background = '#4CAF50'; // 已完成\r\n          } else if (index === currentIndex) {\r\n            dot.style.background = '#2196F3'; // 当前\r\n            dot.style.transform = 'scale(1.2)';\r\n          } else {\r\n            dot.style.background = '#ddd'; // 未完成\r\n            dot.style.transform = 'scale(1)';\r\n          }\r\n        });\r\n\r\n        // 检查是否有已保存的回答\r\n        const savedAnswer = localStorage.getItem(`${question.id}Result`) || '';\r\n\r\n        // 渲染题目内容，包含语音识别控件\r\n        questionContent.innerHTML = `\r\n<h2 style=\"margin-top: 0; color: #333; font-size: 20px;\">${question.title}</h2>\r\n<p style=\"font-size: 16px; line-height: 1.6; color: #555; margin: 15px 0;\">${question.text}</p>\r\n\r\n<div style=\"margin: 20px 0;\">\r\n  <p style=\"margin-bottom: 10px; font-weight: 500;\">相关视频参考：</p>\r\n  <video controls style=\"width: 100%; max-height: 300px; object-fit: contain;\">\r\n    <source src=\"${question.videoUrl}\" type=\"video/mp4\">\r\n    您的浏览器不支持视频播放\r\n   </video>\r\n</div>\r\n\r\n<!-- 语音输入控件 -->\r\n<div style=\"margin: 15px 0; padding: 15px; background: #f9f9f9; border-radius: 6px;\">\r\n  <div style=\"display: flex; gap: 10px; margin-bottom: 15px;\">\r\n    <button id=\"startRecord\" style=\"background: #4CAF50; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer;\">\r\n      开始录音\r\n    </button>\r\n    <button id=\"stopRecord\" style=\"background: #f44336; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; display: none;\">\r\n      停止录音\r\n    </button>\r\n  </div>\r\n  \r\n  <!-- 语音分析结果展示 -->\r\n  <div style=\"font-size: 14px; color: #666; margin-top: 10px;\">\r\n    <p>语调状态：<span id=\"toneStatus\">未检测</span></p>\r\n    <p>语速：<span id=\"speedStatus\">未计算</span>（字/秒）</p>\r\n    <p>录音时长：<span id=\"recordTime\">0秒</span></p>\r\n  </div>\r\n</div>\r\n\r\n<textarea id=\"${question.id}Answer\" style=\"width: 100%; height: 200px; margin: 15px 0; padding: 12px; box-sizing: border-box; border: 1px solid #ddd; border-radius: 6px; font-size: 14px; resize: vertical;\" placeholder=\"请输入您的回答...\">${savedAnswer}</textarea>\r\n`;\r\n\r\n        // 初始化语音识别和音频分析\r\n        initSpeechRecognition(question.id);\r\n\r\n        // 更新按钮状态\r\n        prevButton.disabled = currentIndex === 0;\r\n        prevButton.style.opacity = currentIndex === 0 ? '0.5' : '1';\r\n        prevButton.style.cursor = currentIndex === 0 ? 'not-allowed' : 'pointer';\r\n\r\n        // 最后一题显示提交按钮\r\n        if (currentIndex === questions.length - 1) {\r\n          nextButton.textContent = '提交回答';\r\n          nextButton.style.background = '#2196F3';\r\n        } else {\r\n          nextButton.textContent = '下一题';\r\n          nextButton.style.background = '#4CAF50';\r\n        }\r\n\r\n        // 重置滚动位置到顶部\r\n        questionContentWrapper.scrollTop = 0;\r\n      }\r\n\r\n      // 初始化语音识别和音频分析\r\n      function initSpeechRecognition(questionId) {\r\n        const startBtn = document.getElementById('startRecord');\r\n        const stopBtn = document.getElementById('stopRecord');\r\n        const toneStatus = document.getElementById('toneStatus');\r\n        const speedStatus = document.getElementById('speedStatus');\r\n        const recordTime = document.getElementById('recordTime');\r\n        const answerTextarea = document.getElementById(`${questionId}Answer`);\r\n\r\n        // 语音识别相关变量\r\n        let recognition;\r\n        let isRecording = false;\r\n        let recordStartTime = 0;\r\n        let recordDuration = 0; // 录音时长（秒）\r\n        let mediaRecorder;\r\n        let audioContext;\r\n        let analyser;\r\n        let dataArray;\r\n        let animationId;\r\n\r\n        // 初始化语音识别（基于Web Speech API）\r\n        function initRecognition() {\r\n          const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n          if (!SpeechRecognition) {\r\n            alert('您的浏览器不支持语音识别功能，请使用Chrome等现代浏览器');\r\n            return null;\r\n          }\r\n          const rec = new SpeechRecognition();\r\n          rec.continuous = true; // 持续识别\r\n          rec.interimResults = true; // 返回中间结果\r\n          rec.lang = 'zh-CN'; // 中文识别\r\n          return rec;\r\n        }\r\n\r\n        // 初始化音频分析器（检测语调）\r\n        function initAudioAnalyser(stream) {\r\n          audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n          analyser = audioContext.createAnalyser();\r\n          const source = audioContext.createMediaStreamSource(stream);\r\n          source.connect(analyser);\r\n          analyser.fftSize = 256; // 快速傅里叶变换大小\r\n          const bufferLength = analyser.frequencyBinCount;\r\n          dataArray = new Uint8Array(bufferLength);\r\n        }\r\n\r\n        // 实时分析语调（基于频率）\r\n        function analyzeTone() {\r\n          if (!isRecording) return;\r\n          analyser.getByteFrequencyData(dataArray);\r\n\r\n          // 计算平均频率（简单模拟语调：频率越高，语调越高）\r\n          let sum = 0;\r\n          dataArray.forEach(value => sum += value);\r\n          const averageFreq = sum / dataArray.length;\r\n\r\n          // 更新语调状态\r\n          if (averageFreq > 80) {\r\n            toneStatus.textContent = '语调偏高（情绪较激动）';\r\n            toneStatus.style.color = '#e53935';\r\n          } else if (averageFreq > 40) {\r\n            toneStatus.textContent = '语调适中';\r\n            toneStatus.style.color = '#43a047';\r\n          } else {\r\n            toneStatus.textContent = '语调偏低（情绪较平稳）';\r\n            toneStatus.style.color = '#1e88e5';\r\n          }\r\n\r\n          animationId = requestAnimationFrame(analyzeTone);\r\n        }\r\n\r\n        // 开始录音\r\n        startBtn.addEventListener('click', async () => {\r\n          if (isRecording) return;\r\n          isRecording = true;\r\n          startBtn.style.display = 'none';\r\n          stopBtn.style.display = 'inline-block';\r\n          recordStartTime = Date.now();\r\n\r\n          // 启动语音识别\r\n          recognition = initRecognition();\r\n          if (!recognition) return;\r\n          recognition.start();\r\n          recognition.onresult = (event) => {\r\n            // 拼接识别结果\r\n            let transcript = '';\r\n            for (let i = 0; i < event.results.length; i++) {\r\n              transcript += event.results[i][0].transcript;\r\n            }\r\n            answerTextarea.value = transcript; // 填充到文本框\r\n          };\r\n\r\n          // 启动音频流和分析器\r\n          try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            mediaRecorder = new MediaRecorder(stream);\r\n            mediaRecorder.start();\r\n            initAudioAnalyser(stream);\r\n            analyzeTone(); // 开始实时语调分析\r\n\r\n            // 实时更新录音时长\r\n            function updateRecordTime() {\r\n              if (!isRecording) return;\r\n              recordDuration = Math.floor((Date.now() - recordStartTime) / 1000);\r\n              recordTime.textContent = `${recordDuration}秒`;\r\n              requestAnimationFrame(updateRecordTime);\r\n            }\r\n            updateRecordTime();\r\n          } catch (err) {\r\n            console.error('录音权限获取失败：', err);\r\n            alert('请允许麦克风权限以使用语音输入功能');\r\n            stopRecording();\r\n          }\r\n        });\r\n\r\n        // 停止录音\r\n        function stopRecording() {\r\n          if (!isRecording) return;\r\n          isRecording = false;\r\n          startBtn.style.display = 'inline-block';\r\n          stopBtn.style.display = 'none';\r\n          cancelAnimationFrame(animationId);\r\n\r\n          // 停止语音识别\r\n          if (recognition) recognition.stop();\r\n          // 停止录音\r\n          if (mediaRecorder) mediaRecorder.stop();\r\n          // 关闭音频上下文\r\n          if (audioContext) audioContext.close();\r\n\r\n          // 计算语速（字数 / 录音时长）\r\n          const text = answerTextarea.value.trim();\r\n          const charCount = text.length; // 文本长度（字数）\r\n          if (recordDuration > 0) {\r\n            const speed = (charCount / recordDuration).toFixed(1); // 保留1位小数\r\n            speedStatus.textContent = `${speed}字/秒`;\r\n\r\n            // 语速提示（参考：正常中文语速约2-3字/秒）\r\n            if (speed < 1.5) {\r\n              speedStatus.style.color = '#e53935';\r\n              speedStatus.textContent += '（偏慢）';\r\n            } else if (speed > 3.5) {\r\n              speedStatus.style.color = '#e53935';\r\n              speedStatus.textContent += '（偏快）';\r\n            } else {\r\n              speedStatus.style.color = '#43a047';\r\n              speedStatus.textContent += '（正常）';\r\n            }\r\n          }\r\n        }\r\n\r\n        stopBtn.addEventListener('click', stopRecording);\r\n      }\r\n\r\n      // 上一题按钮事件\r\n      prevButton.addEventListener('click', () => {\r\n        if (currentIndex > 0) {\r\n          // 保存当前回答\r\n          saveCurrentAnswer();\r\n          currentIndex--;\r\n          renderCurrentQuestion();\r\n        }\r\n      });\r\n\r\n      // 下一题/提交按钮事件\r\n      nextButton.addEventListener('click', () => {\r\n        const currentAnswer = document.querySelector(`#${questions[currentIndex].id}Answer`).value.trim();\r\n\r\n        // 验证当前回答\r\n        if (!currentAnswer) {\r\n          alert(`请完成${questions[currentIndex].title}的回答`);\r\n          return;\r\n        }\r\n\r\n        // 保存当前回答\r\n        saveCurrentAnswer();\r\n\r\n        // 最后一题则提交所有\r\n        if (currentIndex === questions.length - 1) {\r\n          // 提交所有回答\r\n          questions.forEach(question => {\r\n            const answer = localStorage.getItem(`${question.id}Result`) || '';\r\n            this.addMessage('user', `【${question.title}回答】${answer}`, 'text');\r\n          });\r\n\r\n          alert('所有回答已提交成功！');\r\n          document.body.removeChild(modal);\r\n        } else {\r\n          // 进入下一题\r\n          currentIndex++;\r\n          renderCurrentQuestion();\r\n        }\r\n      });\r\n\r\n      // 保存当前题目的回答\r\n      function saveCurrentAnswer() {\r\n        const question = questions[currentIndex];\r\n        const answer = document.querySelector(`#${question.id}Answer`).value.trim();\r\n        if (answer) {\r\n          localStorage.setItem(`${question.id}Result`, answer);\r\n        }\r\n      }\r\n\r\n      \r\n      // 拖拽功能实现\r\n      let isDragging = false;\r\n      let startX, startY, initialLeft, initialTop;\r\n\r\n      modalHeader.addEventListener('mousedown', (e) => {\r\n        isDragging = true;\r\n        startX = e.clientX;\r\n        startY = e.clientY;\r\n        initialLeft = parseInt(draggableModal.style.left);\r\n        initialTop = parseInt(draggableModal.style.top);\r\n        \r\n        // 添加拖拽时的样式\r\n        draggableModal.style.transition = 'none';\r\n        modalHeader.style.background = '#e9ecef';\r\n        \r\n        document.addEventListener('mousemove', handleDrag);\r\n        document.addEventListener('mouseup', stopDrag);\r\n        \r\n        e.preventDefault();\r\n      });\r\n\r\n      function handleDrag(e) {\r\n        if (!isDragging) return;\r\n        \r\n        const deltaX = e.clientX - startX;\r\n        const deltaY = e.clientY - startY;\r\n        \r\n        // 计算新位置并限制在窗口内\r\n        let newLeft = initialLeft + deltaX;\r\n        let newTop = initialTop + deltaY;\r\n        \r\n        // 限制在窗口内\r\n        newLeft = Math.max(0, Math.min(newLeft, window.innerWidth - draggableModal.offsetWidth));\r\n        newTop = Math.max(0, Math.min(newTop, window.innerHeight - draggableModal.offsetHeight));\r\n        \r\n        draggableModal.style.left = `${newLeft}px`;\r\n        draggableModal.style.top = `${newTop}px`;\r\n      }\r\n\r\n      function stopDrag() {\r\n        isDragging = false;\r\n        modalHeader.style.background = '';\r\n        document.removeEventListener('mousemove', handleDrag);\r\n        document.removeEventListener('mouseup', stopDrag);\r\n      }\r\n\r\n      // 调整大小功能实现\r\n      let isResizing = false;\r\n      let startWidth, startHeight;\r\n\r\n      resizeHandle.addEventListener('mousedown', (e) => {\r\n        isResizing = true;\r\n        startX = e.clientX;\r\n        startY = e.clientY;\r\n        startWidth = draggableModal.offsetWidth;\r\n        startHeight = draggableModal.offsetHeight;\r\n        \r\n        // 移除过渡效果，使调整更流畅\r\n        draggableModal.style.transition = 'none';\r\n        \r\n        document.addEventListener('mousemove', handleResize);\r\n        document.addEventListener('mouseup', stopResize);\r\n        \r\n        e.preventDefault();\r\n      });\r\n\r\n      function handleResize(e) {\r\n        if (!isResizing) return;\r\n        \r\n        // 计算新尺寸\r\n        const minWidth = 500;\r\n        const minHeight = 400;\r\n        const newWidth = Math.max(minWidth, startWidth + (e.clientX - startX));\r\n        const newHeight = Math.max(minHeight, startHeight + (e.clientY - startY));\r\n        \r\n        // 限制最大尺寸不超过窗口\r\n        const maxWidth = window.innerWidth - 50;\r\n        const maxHeight = window.innerHeight - 50;\r\n        \r\n        draggableModal.style.width = `${Math.min(newWidth, maxWidth)}px`;\r\n        draggableModal.style.height = `${Math.min(newHeight, maxHeight)}px`;\r\n      }\r\n\r\n      function stopResize() {\r\n        isResizing = false;\r\n        document.removeEventListener('mousemove', handleResize);\r\n        document.removeEventListener('mouseup', stopResize);\r\n      }\r\n\r\n      // 初始化显示第一题\r\n      renderCurrentQuestion();\r\n    }, 40000);\r\n  } else {\r\n    this.showStatus(\"请先实例化SDK\", 'error');\r\n  }\r\n},\r\n    \r\n\r\n\r\n\r\n    // 返回主页面消息界面\r\n    backToHomeMessage() {\r\n      this.$router.push('/home/message');\r\n    },\r\n\r\n    // 发送文本消息\r\n    async sendMessage() {\r\n      let prompt = this.message.trim();\r\n      if (!prompt) return;\r\n\r\n      // 检测输入是否为特定指令\r\n      const isLogicAnalysis = prompt.toLowerCase().includes('分析语言逻辑');\r\n      const isGenerateReport = prompt.toLowerCase().includes('生成可视化评测报告');\r\n      let constructedPrompt = prompt;\r\n\r\n      // 处理\"分析语言逻辑\"指令\r\n      if (isLogicAnalysis) {\r\n        constructedPrompt = this.buildLogicAnalysisPrompt();\r\n      }\r\n      // 处理\"生成可视化评测报告\"指令\r\n      else if (isGenerateReport) {\r\n        constructedPrompt = this.buildEvaluationReportPrompt();\r\n      }\r\n\r\n      this.addMessage('user', prompt, 'text');\r\n      this.message = '';\r\n      this.scrollToBottom();\r\n\r\n      const typingId = this.addTypingIndicator();\r\n\r\n      try {\r\n        fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: constructedPrompt })\r\n        }).then(response => {\r\n          this.removeTypingIndicator(typingId);\r\n\r\n          if (!response.ok) {\r\n            throw new Error(`请求失败: ${response.status}`);\r\n          }\r\n\r\n          return response.json();\r\n        }).then(data => {\r\n          if (data.status === 'success') {\r\n            const taskId = data.task_id;\r\n            const pollInterval = 20000; // 20秒轮询一次\r\n            const maxAttempts = 150;\r\n            let attempts = 0;\r\n\r\n            const pollForFile = () => {\r\n              if (attempts >= maxAttempts) {\r\n                this.addMessage('ai', '请求超时，请稍后再试', 'text', true);\r\n                this.scrollToBottom();\r\n                return;\r\n              }\r\n\r\n              attempts++;\r\n\r\n              fetch(`${this.API_BASE_URL}/get_task_file_url`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  ...this.commonHeaders,\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ task_id: taskId })\r\n              })\r\n                .then(response => {\r\n                  return response.json().then(data => ({ data, response }));\r\n                })\r\n                .then(({ data, response }) => {\r\n                  console.log('文件查询响应:', data);\r\n\r\n                  // 成功获取到文件信息\r\n                  if (data.status === 'success') {\r\n                    // 优先使用Markdown文件（如果存在）\r\n                    const targetFile = data.markdown || data.txt;\r\n\r\n                    if (targetFile && targetFile.file_url) {\r\n                      fetch(targetFile.file_url, {\r\n                        method: 'GET',\r\n                        headers: this.commonHeaders\r\n                      })\r\n                        .then(fileResponse => {\r\n                          if (!fileResponse.ok) {\r\n                            throw new Error(`文件加载失败: ${fileResponse.status}`);\r\n                          }\r\n                          return fileResponse.text();\r\n                        })\r\n                        .then(fileContent => {\r\n                          if (fileContent.trim() === 'processing') {\r\n                            // 处理中，继续轮询\r\n                            this.addMessage('ai', `处理中...((${attempts}/${maxAttempts}))`, 'text');\r\n                            this.scrollToBottom();\r\n                            setTimeout(pollForFile, pollInterval);\r\n                          } else {\r\n                            // 处理完成，根据文件类型和指令类型选择渲染方式\r\n                            if (isGenerateReport) {\r\n                              // 评测报告额外处理雷达图数据\r\n                              this.addMessage('ai', `已生成可视化评测报告:`, 'text');\r\n                              this.processAndRenderReport(fileContent, data.markdown ? true : false);\r\n                            } else if (data.markdown) {\r\n                              // Markdown内容使用格式化渲染\r\n                              this.addMessage('ai', `已获取分析结果（Markdown格式）:`, 'text');\r\n                              this.addFormattedMessageWithSpaces(fileContent);\r\n                            } else {\r\n                              // TXT内容直接显示\r\n                              this.addMessage('ai', `已获取分析结果:`, 'text');\r\n                              this.addMessage('ai', fileContent, 'text');\r\n                            }\r\n                            this.scrollToBottom();\r\n                          }\r\n                        })\r\n                        .catch(() => {\r\n                          this.addMessage('ai', `文件加载中...((${attempts}/${maxAttempts}))`, 'text');\r\n                          this.scrollToBottom();\r\n                          setTimeout(pollForFile, pollInterval);\r\n                        });\r\n                    } else {\r\n                      // 未找到有效文件URL\r\n                      this.addMessage('ai', `未找到文件...((${attempts}/${maxAttempts}))`, 'text');\r\n                      this.scrollToBottom();\r\n                      setTimeout(pollForFile, pollInterval);\r\n                    }\r\n                  }\r\n                  // 未找到文件但可能在处理中\r\n                  else if (response.status === 404 ||\r\n                    (data.status === 'error' && data.message.includes('未找到'))) {\r\n                    this.addMessage('ai', `内容生成中...((${attempts}/${maxAttempts}))`, 'text');\r\n                    this.scrollToBottom();\r\n                    setTimeout(pollForFile, pollInterval);\r\n                  }\r\n                  // 其他错误\r\n                  else {\r\n                    this.addMessage('ai', `获取文件失败: ${data.message || '未知错误'}`, 'text', true);\r\n                    this.scrollToBottom();\r\n                  }\r\n                })\r\n                .catch(error => {\r\n                  console.error('轮询错误:', error);\r\n                  this.addMessage('ai', `连接中...((${attempts}/${maxAttempts}))`, 'text');\r\n                  this.scrollToBottom();\r\n                  setTimeout(pollForFile, pollInterval);\r\n                });\r\n            };\r\n\r\n            pollForFile();\r\n          } else {\r\n            this.addMessage('ai', `错误: ${data.result}`, 'text', true);\r\n          }\r\n          this.scrollToBottom();\r\n        }).catch(error => {\r\n          this.removeTypingIndicator(typingId);\r\n          this.addMessage('ai', `请求失败: ${error.message}`, 'text', true);\r\n          this.scrollToBottom();\r\n          console.error('发送消息失败:', error);\r\n        });\r\n      } catch (error) {\r\n        this.removeTypingIndicator(typingId);\r\n        this.addMessage('ai', `请求失败: ${error.message}`, 'text', true);\r\n        this.scrollToBottom();\r\n        console.error('发送消息失败:', error);\r\n      }\r\n    },\r\n\r\n    // 构建语言逻辑分析的prompt\r\n    buildLogicAnalysisPrompt() {\r\n      const questions = this.getInterviewQuestions();\r\n\r\n      let prompt = \"请以下面试问题及对应的回答，分析回答的语言逻辑和连贯性，并给出评分(0-100分)和简要分析：\\n\\n\";\r\n\r\n      questions.forEach((item, i) => {\r\n        if (item.answer) {\r\n          prompt += `第${i + 1}题：${item.question}\\n`;\r\n          prompt += `回答：${item.answer}\\n\\n`;\r\n        }\r\n      });\r\n\r\n      return prompt;\r\n    },\r\n\r\n    // 构建生成可视化评测报告的prompt（优化版）\r\n    buildEvaluationReportPrompt() {\r\n      const questions = this.getInterviewQuestions();\r\n      const dimensions = [\r\n        \"专业知识水平\",\r\n        \"技能匹配度\",\r\n        \"语言表达能力\",\r\n        \"逻辑思维能力\",\r\n        \"创新能力\"\r\n      ];\r\n\r\n      // 生成唯一标识符，用于精确界定雷达数据的位置\r\n      const radarDataMarker = `RADAR_DATA_${Date.now()}_START`;\r\n      const radarDataEndMarker = `RADAR_DATA_${Date.now()}_END`;\r\n\r\n      let prompt = \"请基于以下5个面试问题及对应回答，生成一份详细的可视化评测报告。\\n\\n\";\r\n      prompt += \"【格式要求非常严格，请严格遵守，否则将导致报告无法正常解析】\\n\";\r\n      prompt += \"报告必须包含以下几个部分，且按以下顺序排列：\\n\\n\";\r\n\r\n      // 1. 雷达图数据部分 - 格式严格限定\r\n      prompt += \"1. 能力雷达图数据：\\n\";\r\n      prompt += `   请在${radarDataMarker}和${radarDataEndMarker}标记之间，为以下5个维度分别评分(0-100分)，\\n`;\r\n      prompt += \"   每个维度单独一行，格式必须为【维度名称: 评分】，不允许有其他内容或格式变化\\n\";\r\n      prompt += `   维度名称：${dimensions.join('、')}\\n`;\r\n      prompt += `   示例格式：\\n`;\r\n      prompt += `   ${radarDataMarker}\\n`;\r\n      prompt += `   专业知识水平: 80\\n`;\r\n      prompt += `   技能匹配度: 70\\n`;\r\n      prompt += `   语言表达能力: 90\\n`;\r\n      prompt += `   逻辑思维能力: 60\\n`;\r\n      prompt += `   创新能力: 80\\n`;\r\n      prompt += `   ${radarDataEndMarker}\\n\\n`;\r\n\r\n      // 2. 关键问题定位\r\n      prompt += \"2. 关键问题定位：\\n\";\r\n      prompt += \"   请使用项目符号(-)列出回答中存在的主要问题，每条问题单独一行\\n\";\r\n      prompt += \"   例如：\\n\";\r\n      prompt += \"   - 回答缺乏STAR结构\\n\";\r\n      prompt += \"   - 对专业术语的解释不够清晰\\n\\n\";\r\n\r\n      // 3. 企业决策建议\r\n      prompt += \"3. 企业决策建议：\\n\";\r\n      prompt += \"   请明确给出是否推荐录用的建议，并提供3-5条具体理由，使用项目符号(-)列出\\n\\n\";\r\n\r\n      // 4. 求职者个性化改进建议\r\n      prompt += \"4. 求职者个性化改进建议：\\n\";\r\n      prompt += \"   针对每个维度的不足，提供具体可行的改进方法，每个维度单独成段，开头注明维度名称\\n\\n\";\r\n\r\n      // 5. Markdown格式要求\r\n      prompt += \"5. 整体使用Markdown格式输出，包含适当的标题层级：\\n\";\r\n      prompt += \"   - 主标题：# 物联网产品岗面试可视化评测报告\\n\";\r\n      prompt += \"   - 各部分标题：## 1. 能力雷达图数据、## 2. 关键问题定位等\\n\\n\";\r\n\r\n      // 面试问题与回答\r\n      prompt += \"【面试问题及回答】\\n\";\r\n      questions.forEach((item, i) => {\r\n        if (item.answer) {\r\n          prompt += `第${i + 1}题（${dimensions[i]}）：${item.question}\\n`;\r\n          prompt += `回答：${item.answer}\\n\\n`;\r\n        }\r\n      });\r\n\r\n      // 存储标记以便后续解析\r\n      this.radarDataMarkers = {\r\n        start: radarDataMarker,\r\n        end: radarDataEndMarker\r\n      };\r\n\r\n      return prompt;\r\n    },\r\n\r\n    // 从localStorage获取面试问题和答案\r\n    getInterviewQuestions() {\r\n      return [\r\n        {\r\n          question: localStorage.getItem('firstQuestion') || '第一道题',\r\n          answer: localStorage.getItem('firstResult') || ''\r\n        },\r\n        {\r\n          question: localStorage.getItem('secondQuestion') || '第二道题',\r\n          answer: localStorage.getItem('secondResult') || ''\r\n        },\r\n        {\r\n          question: localStorage.getItem('thirdQuestion') || '第三道题',\r\n          answer: localStorage.getItem('thirdResult') || ''\r\n        },\r\n        {\r\n          question: localStorage.getItem('fourthQuestion') || '第四道题',\r\n          answer: localStorage.getItem('fourthResult') || ''\r\n        },\r\n        {\r\n          question: localStorage.getItem('fifthQuestion') || '第五道题',\r\n          answer: localStorage.getItem('fifthResult') || ''\r\n        }\r\n      ];\r\n    },\r\n\r\n    // 处理并渲染评测报告，包括雷达图\r\n    processAndRenderReport(content, isMarkdown) {\r\n      try {\r\n        // 使用预设的标记提取雷达图数据\r\n        const { start, end } = this.radarDataMarkers || {};\r\n        let radarDataSection = '';\r\n\r\n        if (start && end) {\r\n          const startIndex = content.indexOf(start);\r\n          const endIndex = content.indexOf(end);\r\n\r\n          if (startIndex !== -1 && endIndex !== -1 && endIndex > startIndex) {\r\n            // 提取标记之间的内容\r\n            radarDataSection = content.substring(\r\n              startIndex + start.length,\r\n              endIndex\r\n            ).trim();\r\n          } else {\r\n            console.warn('未找到完整的雷达图数据标记');\r\n          }\r\n        } else {\r\n          console.warn('未设置雷达图数据标记');\r\n        }\r\n\r\n        // 提取雷达图数据\r\n        const dimensions = [\r\n          \"专业知识水平\",\r\n          \"技能匹配度\",\r\n          \"语言表达能力\",\r\n          \"逻辑思维能力\",\r\n          \"创新能力\"\r\n        ];\r\n\r\n        const radarData = {};\r\n\r\n        // 按行解析\r\n        if (radarDataSection) {\r\n          const lines = radarDataSection.split('\\n');\r\n          lines.forEach(line => {\r\n            // 使用严格的正则匹配格式\r\n            const match = line.match(/^\\s*([^:]+?)\\s*:\\s*(\\d+)\\s*$/);\r\n            if (match && match[1] && match[2]) {\r\n              const dimension = match[1].trim();\r\n              const score = parseInt(match[2], 10);\r\n\r\n              // 只处理我们需要的维度，评分范围改为0-100\r\n              if (dimensions.includes(dimension) && score >= 0 && score <= 100) {\r\n                radarData[dimension] = score;\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n        // 检查是否有缺失的维度\r\n        dimensions.forEach(dimension => {\r\n          if (radarData[dimension] === undefined) {\r\n            console.warn(`维度\"${dimension}\"的分数未找到或格式不正确`);\r\n            radarData[dimension] = 0; // 默认为0分\r\n          }\r\n        });\r\n\r\n        // 生成雷达图容器，调整雷达图大小为400px高度\r\n        const radarContainerId = `radar-chart-${Date.now()}`;\r\n        let radarChartHtml = `<div class=\"radar-chart-container\">\r\n      <h3>能力雷达图</h3>\r\n      <!-- 调整雷达图大小 -->\r\n      <canvas id=\"${radarContainerId}\" style=\"width: 100%; height: 400px; max-width: 600px; margin: 0 auto;\"></canvas>\r\n    </div>`;\r\n\r\n        // 处理报告内容\r\n        let processedContent;\r\n        if (isMarkdown) {\r\n          processedContent = this.processMarkdownContent(content);\r\n          processedContent = radarChartHtml + processedContent;\r\n        } else {\r\n          processedContent = `<div class=\"report-content\">\r\n        ${radarChartHtml}\r\n        <div class=\"text-content\">${content.replace(/\\n/g, '<br>')}</div>\r\n      </div>`;\r\n        }\r\n\r\n        // 添加到消息列表\r\n        this.messages.push({\r\n          sender: 'ai',\r\n          type: 'formatted',\r\n          content: processedContent\r\n        });\r\n\r\n        // 确保DOM已更新后再渲染图表\r\n        this.$nextTick(() => {\r\n          // 检查Chart.js是否已加载\r\n          if (typeof Chart === 'undefined') {\r\n            // 动态加载Chart.js\r\n            const script = document.createElement('script');\r\n            script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\r\n            script.onload = () => this.renderRadarChart(radarContainerId, radarData);\r\n            script.onerror = () => {\r\n              document.getElementById(radarContainerId).innerHTML =\r\n                '<p class=\"error-message\">无法加载图表库，请检查网络连接</p>';\r\n            };\r\n            document.head.appendChild(script);\r\n          } else {\r\n            this.renderRadarChart(radarContainerId, radarData);\r\n          }\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('处理评测报告失败:', error);\r\n        this.addMessage('ai', '评测报告处理失败，显示原始内容:', 'text', true);\r\n        this.addMessage('ai', content, 'text');\r\n      }\r\n    },\r\n\r\n    // 渲染雷达图\r\n    renderRadarChart(containerId, data) {\r\n      // 确保Chart.js已加载\r\n      if (typeof Chart === 'undefined') {\r\n        console.error('Chart.js未加载，无法渲染雷达图');\r\n        return;\r\n      }\r\n\r\n      // 增加重试机制\r\n      const maxRetries = 5;\r\n      let retries = 0;\r\n\r\n      const tryRender = () => {\r\n        const container = document.getElementById(containerId);\r\n\r\n        // 检查容器是否存在\r\n        if (!container) {\r\n          if (retries < maxRetries) {\r\n            retries++;\r\n            console.log(`重试获取图表容器 (${retries}/${maxRetries})`);\r\n            setTimeout(tryRender, 100); // 100ms后重试\r\n            return;\r\n          } else {\r\n            console.error(`无法找到ID为\"${containerId}\"的图表容器`);\r\n            return;\r\n          }\r\n        }\r\n\r\n        // 确保容器是canvas元素或包含canvas\r\n        let canvas;\r\n        if (container.tagName === 'CANVAS') {\r\n          canvas = container;\r\n        } else {\r\n          // 检查容器内是否已有canvas\r\n          canvas = container.querySelector('canvas');\r\n          if (!canvas) {\r\n            // 创建新的canvas元素\r\n            canvas = document.createElement('canvas');\r\n            container.innerHTML = ''; // 清空容器\r\n            container.appendChild(canvas);\r\n          }\r\n        }\r\n\r\n        // 准备雷达图数据\r\n        const labels = [\r\n          \"专业知识水平\",\r\n          \"技能匹配度\",\r\n          \"语言表达能力\",\r\n          \"逻辑思维能力\",\r\n          \"创新能力\"\r\n        ];\r\n\r\n        const values = labels.map(label => data[label] || 0);\r\n\r\n        // 销毁已存在的图表实例\r\n        if (container.chartInstance) {\r\n          container.chartInstance.destroy();\r\n        }\r\n\r\n        // 创建雷达图，将评分范围调整为0-100\r\n        container.chartInstance = new Chart(canvas.getContext('2d'), {\r\n          type: 'radar',\r\n          data: {\r\n            labels: labels,\r\n            datasets: [{\r\n              label: '能力评分',\r\n              data: values,\r\n              backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n              borderColor: 'rgba(54, 162, 235, 1)',\r\n              pointBackgroundColor: 'rgba(54, 162, 235, 1)',\r\n              pointBorderColor: '#fff',\r\n              pointHoverBackgroundColor: '#fff',\r\n              pointHoverBorderColor: 'rgba(54, 162, 235, 1)'\r\n            }]\r\n          },\r\n          options: {\r\n            scales: {\r\n              r: {\r\n                angleLines: {\r\n                  display: true\r\n                },\r\n                suggestedMin: 0,\r\n                suggestedMax: 100, // 评分范围改为0-100\r\n                ticks: {\r\n                  stepSize: 20, // 刻度间隔设为20，使0-100显示更合理\r\n                  callback: function (value) {\r\n                    return value + '%'; // 显示百分比符号\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            plugins: {\r\n              legend: {\r\n                position: 'top',\r\n              },\r\n              tooltip: {\r\n                callbacks: {\r\n                  label: function (context) {\r\n                    return `${context.label}: ${context.raw}分`;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      };\r\n\r\n      // 开始尝试渲染\r\n      tryRender();\r\n    },\r\n\r\n    // 增强的格式化消息方法，支持Markdown渲染\r\n    addFormattedMessageWithSpaces(content) {\r\n      try {\r\n        if (!content || content.trim() === '') {\r\n          this.addMessage('ai', '没有返回内容', 'text');\r\n          return;\r\n        }\r\n\r\n        const processedContent = this.processMarkdownContent(content);\r\n\r\n        // 添加到消息列表\r\n        this.messages.push({\r\n          sender: 'ai',\r\n          type: 'formatted',\r\n          content: processedContent\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('格式化Markdown失败:', error);\r\n        this.addMessage('ai', '内容格式化失败，显示原始内容:', 'text', true);\r\n        this.addMessage('ai', content, 'text');\r\n      }\r\n    },\r\n    // 处理Markdown内容为HTML，确保透明样式生效\r\n    processMarkdownContent(content) {\r\n      // 标准化换行符\r\n      let processed = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\r\n\r\n      // 处理思考内容标签，使用正确的正则表达式和样式\r\n      processed = processed.replace(\r\n        /<|FunctionCallBegin|>([\\s\\S]*?)<|FunctionCallEnd|>/g,  // 正确匹配</think>和<|FunctionCallEnd|>标签\r\n        // 使用明确的透明度样式，确保优先级\r\n        '<div style=\"color: rgba(107, 114, 128, 0.7); font-style: italic; background-color: rgba(243, 244, 246, 0.3); padding: 12px; border-radius: 0.5rem; border: 1px solid rgba(229, 231, 235, 0.5); margin: 1rem 0; display: block;\">思考过程: $1</div>'\r\n      );\r\n\r\n      // Markdown格式处理\r\n      processed = processed\r\n        // 处理标题\r\n        .replace(/^# (.*?)$/gm, '<h1 class=\"text-2xl font-bold my-4\">$1</h1>')\r\n        .replace(/^## (.*?)$/gm, '<h2 class=\"text-xl font-bold my-3\">$1</h2>')\r\n        .replace(/^### (.*?)$/gm, '<h3 class=\"text-lg font-bold my-2\">$1</h3>')\r\n        // 先处理有序列表\r\n        .replace(/^\\d+\\. (.*?)$/gm, '<li class=\"list-decimal\">$1</li>')\r\n        .replace(/(<li class=\"list-decimal\">.*?<\\/li>)+/gs, '<ol class=\"list-decimal pl-6 my-2\">$&</ol>')\r\n        // 再处理无序列表\r\n        .replace(/^- (.*?)$/gm, '<li class=\"list-disc\">$1</li>')\r\n        .replace(/(<li class=\"list-disc\">.*?<\\/li>)+/gs, '<ul class=\"list-disc pl-6 my-2\">$&</ul>')\r\n        // 处理加粗和斜体\r\n        .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n        .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n        // 处理链接\r\n        .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" class=\"text-blue-600 underline\">$1</a>')\r\n        // 处理换行\r\n        .replace(/(?![^<]*<\\/li>)\\n/g, '<br>');\r\n\r\n      // 构建HTML内容，添加容器样式以确保内部样式生效\r\n      return `<div class=\"formatted-content markdown-content\" style=\"font-family: sans-serif;\">${processed}</div>`;\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // 停止录音\r\n    stopRecording() {\r\n      if (this.isRecording && this.mediaRecorder) {\r\n        this.mediaRecorder.stop();\r\n        this.isRecording = false;\r\n\r\n        if (this.recordingTimer) {\r\n          clearInterval(this.recordingTimer);\r\n          this.recordingTimer = null;\r\n        }\r\n\r\n        if (this.mediaStream) {\r\n          this.mediaStream.getTracks().forEach(track => track.stop());\r\n          this.mediaStream = null;\r\n        }\r\n\r\n        this.showStatus('录音已完成', 'success');\r\n      }\r\n    },\r\n\r\n    // 添加语音消息到列表\r\n    addVoiceMessage() {\r\n      if (!this.audioBlob) return;\r\n\r\n      const audioUrl = URL.createObjectURL(this.audioBlob);\r\n      const duration = this.recordingSeconds;\r\n\r\n      const audio = new Audio(audioUrl);\r\n\r\n      this.messages.push({\r\n        sender: 'user',\r\n        type: 'voice',\r\n        blob: this.audioBlob,\r\n        url: audioUrl,\r\n        duration: duration,\r\n        isPlaying: false,\r\n        textResult: null,\r\n        toneResult: null,\r\n        speechSpeed: null,\r\n        logicResult: null\r\n      });\r\n\r\n      this.audioElements[this.messages.length - 1] = audio;\r\n\r\n      this.scrollToBottom();\r\n    },\r\n\r\n    // 播放或暂停语音\r\n    toggleVoicePlayback(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'voice') return;\r\n\r\n      const audio = this.audioElements[index];\r\n      if (!audio) return;\r\n\r\n      if (msg.isPlaying) {\r\n        audio.pause();\r\n        msg.isPlaying = false;\r\n      } else {\r\n        this.messages.forEach((m, i) => {\r\n          if (m.isPlaying && i !== index) {\r\n            m.isPlaying = false;\r\n            const otherAudio = this.audioElements[i];\r\n            if (otherAudio) otherAudio.pause();\r\n          }\r\n        });\r\n\r\n        audio.play()\r\n          .then(() => {\r\n            msg.isPlaying = true;\r\n            audio.onended = () => {\r\n              msg.isPlaying = false;\r\n            };\r\n          })\r\n          .catch(error => {\r\n            console.error('播放失败:', error);\r\n            this.showStatus('播放失败，请重试', 'error');\r\n          });\r\n      }\r\n    },\r\n\r\n    // 语音转文字\r\n    //找到convertVoiceToText方法，修改如下：\r\n    async convertVoiceToText(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'voice' || !msg.blob) return;\r\n\r\n      this.showStatus('正在转换语音为文字...', 'info');\r\n\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('audio', msg.blob, 'recording.wav');\r\n\r\n        const response = await fetch(`${this.API_BASE_URL}/recognize_speech`, {\r\n          method: 'POST',\r\n          headers: this.commonHeaders,\r\n          body: formData\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          console.error('语音转文字API错误:', errorText);\r\n          throw new Error(`服务器错误: ${response.status} - ${errorText.substring(0, 100)}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success') {\r\n          // 1. 确保更新消息对象\r\n          this.messages.splice(index, 1, {\r\n            ...this.messages[index],\r\n            textResult: data.text || '未能识别语音内容'\r\n          });\r\n\r\n          // 2. 转写计数循环使用1-5\r\n          this.transcribeCount = (this.transcribeCount % 5) + 1;\r\n\r\n          // 3. 根据次数存储结果，使用Vue的响应式更新\r\n          if (this.transcribeCount === 1) {\r\n            this.firstResult = data.text || '';\r\n            localStorage.setItem(\"firstResult\", this.firstResult);\r\n            console.log('第一次转写成功，' + this.firstResult);\r\n          } else if (this.transcribeCount === 2) {\r\n            this.secondResult = data.text || '';\r\n            localStorage.setItem(\"secondResult\", this.secondResult);\r\n            console.log('第二次转写成功，' + this.secondResult);\r\n          } else if (this.transcribeCount === 3) {\r\n            this.thirdResult = data.text || '';\r\n            localStorage.setItem(\"thirdResult\", this.thirdResult);\r\n            console.log('第三次转写成功，' + this.thirdResult);\r\n          } else if (this.transcribeCount === 4) {\r\n            this.fourthResult = data.text || '';\r\n            localStorage.setItem(\"fourthResult\", this.fourthResult);\r\n            console.log('第四次转写成功，' + this.fourthResult);\r\n          } else if (this.transcribeCount === 5) {\r\n            this.fifthResult = data.text || '';\r\n            localStorage.setItem(\"fifthResult\", this.fifthResult);\r\n            console.log('第五次转写成功，' + this.fifthResult);\r\n          }\r\n\r\n          // 4. 保存语言内容到localStorage\r\n          localStorage.setItem('interview_response_content', data.text || '');\r\n\r\n          this.showStatus('语音转文字成功', 'success');\r\n        } else {\r\n          throw new Error(data.message || '语音转文字失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('语音转文字失败:', error);\r\n        this.showStatus(`转文字失败: ${error.message}`, 'error');\r\n      }\r\n    },\r\n\r\n\r\n    // 分析语调\r\n    async analyzeVoiceTone(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'voice' || !msg.blob) return;\r\n\r\n      this.showStatus('正在分析语调...', 'info');\r\n\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('audio', msg.blob, 'recording.wav');\r\n\r\n        const response = await fetch(`${this.API_BASE_URL}/extract_tone`, {\r\n          method: 'POST',\r\n          headers: this.commonHeaders,\r\n          body: formData\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          console.error('语调分析API错误:', errorText);\r\n          throw new Error(`服务器错误: ${response.status} - ${errorText.substring(0, 100)}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success') {\r\n          // 使用扩展运算符创建新对象，触发响应式更新\r\n          this.messages[index] = {\r\n            ...this.messages[index],\r\n            toneResult: data.data\r\n          };\r\n\r\n          // 保存情感语调分析到localStorage（追加方式）\r\n          const existingTone = localStorage.getItem('interview_emotional_tone') || '';\r\n          const toneAnalysis = `语调类型: ${data.data.tone_type}, 基频均值: ${data.data.f0_mean}Hz, 基频范围: ${data.data.f0_min}-${data.data.f0_max}Hz`;\r\n          const newToneAnalysis = existingTone ? `${existingTone}\\n${toneAnalysis}` : toneAnalysis;\r\n          localStorage.setItem('interview_emotional_tone', newToneAnalysis);\r\n\r\n          this.showStatus('语调分析成功', 'success');\r\n        } else {\r\n          throw new Error(data.message || '语调分析失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('语调分析失败:', error);\r\n        this.showStatus(`语调分析失败: ${error.message}`, 'error');\r\n      }\r\n    },\r\n\r\n    // 计算语速\r\n    calculateSpeechSpeed(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'voice' || !msg.textResult) return;\r\n\r\n      // 计算字数（去除空白字符）\r\n      const text = msg.textResult.trim();\r\n      const charCount = text.length;\r\n\r\n      // 音频时长（秒）\r\n      const duration = Math.max(msg.duration, 0.1); // 避免除以0\r\n\r\n      // 计算语速（字/秒）\r\n      const speed = (charCount / duration).toFixed(1);\r\n      const speedPerMinute = Math.round(speed * 60);\r\n\r\n      // 使用扩展运算符创建新对象，触发响应式更新\r\n      this.messages[index] = {\r\n        ...this.messages[index],\r\n        speechSpeed: speed\r\n      };\r\n\r\n      // 保存语速分析到localStorage（追加方式）\r\n      const existingSpeed = localStorage.getItem('interview_speech_rate') || '';\r\n      const speedAnalysis = `${speed} 字/秒 (约 ${speedPerMinute} 字/分钟)。${this.evaluateSpeechSpeed(speedPerMinute)}`;\r\n      const newSpeedAnalysis = existingSpeed ? `${existingSpeed}\\n${speedAnalysis}` : speedAnalysis;\r\n      localStorage.setItem('interview_speech_rate', newSpeedAnalysis);\r\n\r\n      this.showStatus('语速计算完成', 'success');\r\n    },\r\n\r\n    // 评估语速是否合理\r\n    evaluateSpeechSpeed(speedPerMinute) {\r\n      if (speedPerMinute < 120) {\r\n        return \"语速偏慢，可能影响表达效率\";\r\n      } else if (speedPerMinute > 180) {\r\n        return \"语速偏快，可能影响理解\";\r\n      } else {\r\n        return \"语速适中，表达节奏良好\";\r\n      }\r\n    },\r\n\r\n    // 分析语言逻辑\r\n    async analyzeLanguageLogic(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'voice' || !msg.textResult) return;\r\n\r\n      this.showStatus('正在分析语言逻辑...', 'info');\r\n\r\n      try {\r\n        // 从localStorage获取问题和对应的回答\r\n        const questions = [\r\n          {\r\n            question: localStorage.getItem('firstQuestion') || '第一道题',\r\n            answer: localStorage.getItem('firstResult') || ''\r\n          },\r\n          {\r\n            question: localStorage.getItem('secondQuestion') || '第二道题',\r\n            answer: localStorage.getItem('secondResult') || ''\r\n          },\r\n          {\r\n            question: localStorage.getItem('thirdQuestion') || '第三道题',\r\n            answer: localStorage.getItem('thirdResult') || ''\r\n          },\r\n          {\r\n            question: localStorage.getItem('fourthQuestion') || '第四道题',\r\n            answer: localStorage.getItem('fourthResult') || ''\r\n          },\r\n          {\r\n            question: localStorage.getItem('fifthQuestion') || '第五道题',\r\n            answer: localStorage.getItem('fifthResult') || ''\r\n          }\r\n        ];\r\n\r\n        // 构建包含问题和对应回答的prompt\r\n        let prompt = \"请以下面试问题及对应的回答，分析回答的语言逻辑和连贯性，并给出评分(1-10分)和简要分析：\\n\\n\";\r\n\r\n        questions.forEach((item, i) => {\r\n          if (item.answer) { // 只包含有回答的问题\r\n            prompt += `第${i + 1}题：${item.question}\\n`;\r\n            prompt += `回答：${item.answer}\\n\\n`;\r\n          }\r\n        });\r\n\r\n        // 添加当前消息的文本结果（如果需要包含）\r\n        prompt += `当前分析文本：${msg.textResult}\"`;\r\n\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`请求失败: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success') {\r\n          // 提取评分（如果有的话）\r\n          let score = null;\r\n          const scoreMatch = data.result.match(/(\\d+(\\.\\d+)?)\\s*\\/\\s*10/);\r\n          if (scoreMatch && scoreMatch[1]) {\r\n            score = parseFloat(scoreMatch[1]);\r\n          }\r\n\r\n          // 使用扩展运算符创建新对象，触发响应式更新\r\n          this.messages[index] = {\r\n            ...this.messages[index],\r\n            logicResult: {\r\n              analysis: data.result,\r\n              score: score\r\n            }\r\n          };\r\n\r\n          // 保存语言逻辑分析到localStorage（追加方式）\r\n          const existingLogic = localStorage.getItem('interview_language_logic') || '';\r\n          const newLogicAnalysis = existingLogic ? `${existingLogic}\\n${data.result}` : data.result;\r\n          localStorage.setItem('interview_language_logic', newLogicAnalysis);\r\n\r\n          this.showStatus('语言逻辑分析完成', 'success');\r\n        } else {\r\n          throw new Error(data.result || '语言逻辑分析失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('语言逻辑分析失败:', error);\r\n        this.showStatus(`语言逻辑分析失败: ${error.message}`, 'error');\r\n      }\r\n    },\r\n\r\n    // 保存分析结果到localStorage（追加方式）\r\n    saveAnalysisToStorage(msg) {\r\n      if (!msg || msg.type !== 'expression') return;\r\n\r\n      // 保存表情分析（追加方式）\r\n      if (msg.expressionResults && msg.expressionResults.length) {\r\n        let expressionsText = msg.expressionResults.map(exp =>\r\n          `${exp.emotion} (${(exp.confidence * 100).toFixed(1)}%)`\r\n        ).join('、');\r\n\r\n        const existingExpressions = localStorage.getItem('interview_expression') || '';\r\n        const newExpressions = existingExpressions ? `${existingExpressions}\\n检测到的表情: ${expressionsText}` : `检测到的表情: ${expressionsText}`;\r\n        localStorage.setItem('interview_expression', newExpressions);\r\n      }\r\n\r\n      // 保存姿态分析（追加方式）\r\n      if (msg.poseResult) {\r\n        const poseText = `动作: ${msg.poseResult.pose}, 置信度: ${(msg.poseResult.score * 100).toFixed(1)}%`;\r\n        const existingPose = localStorage.getItem('interview_gesture') || '';\r\n        const newPose = existingPose ? `${existingPose}\\n${poseText}` : poseText;\r\n        localStorage.setItem('interview_gesture', newPose);\r\n      }\r\n\r\n      // 保存综合分析（追加方式）\r\n      if (msg.comprehensiveAnalysis) {\r\n        const existingAnalysis = localStorage.getItem('interview_expression_gesture_summary') || '';\r\n        const newAnalysis = existingAnalysis ? `${existingAnalysis}\\n${msg.comprehensiveAnalysis}` : msg.comprehensiveAnalysis;\r\n        localStorage.setItem('interview_expression_gesture_summary', newAnalysis);\r\n      }\r\n\r\n      this.showStatus('分析结果已保存', 'success');\r\n    },\r\n\r\n    // 添加消息到界面\r\n    addMessage(sender, content, type = 'text', isError = false) {\r\n      this.messages.push({\r\n        sender: sender,\r\n        content: content,\r\n        type: type,\r\n        isError: isError\r\n      });\r\n      this.scrollToBottom();\r\n    },\r\n\r\n    // 添加表情和姿态分析消息\r\n    addExpressionMessage(imageUrl, expressionResults, poseResult) {\r\n      this.messages.push({\r\n        sender: 'ai',\r\n        type: 'expression',\r\n        imageUrl: imageUrl,\r\n        expressionResults: expressionResults,\r\n        poseResult: poseResult,\r\n        comprehensiveAnalysis: null\r\n      });\r\n      this.scrollToBottom();\r\n    },\r\n\r\n    // 添加\"正在输入\"指示器\r\n    addTypingIndicator() {\r\n      const typingId = `typing-${Date.now()}`;\r\n      this.typingId = typingId;\r\n      this.isTyping = true;\r\n      return typingId;\r\n    },\r\n\r\n    // 移除\"正在输入\"状态\r\n    removeTypingIndicator(id) {\r\n      if (this.typingId === id) {\r\n        this.isTyping = false;\r\n        this.typingId = \"\";\r\n      }\r\n    },\r\n\r\n    // 滚动到最新消息\r\n    scrollToBottom() {\r\n      this.$nextTick(() => {\r\n        const container = this.$refs.messagesContainer;\r\n        if (container) {\r\n          container.scrollTop = container.scrollHeight;\r\n        }\r\n      });\r\n    },\r\n\r\n    // 测试连接状态\r\n    async testConnection() {\r\n      try {\r\n        await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'OPTIONS',\r\n          headers: this.commonHeaders\r\n        });\r\n\r\n        this.statusText = ``;\r\n        this.statusClass = 'text-xs text-green-600 mt-2 text-center';\r\n      } catch (error) {\r\n        this.statusText = `连接失败: ${error.message}`;\r\n        this.statusClass = 'text-xs text-red-600 mt-2 text-center';\r\n      }\r\n    },\r\n\r\n    // 初始化聊天容器高度\r\n    initContainerHeight() {\r\n      const navBarHeight = 46;\r\n      const bottomBarHeight = document.getElementById('dialog_bottombar_inside')?.offsetHeight || 0;\r\n      const container = document.getElementById('dialog_content');\r\n      if (container) {\r\n        container.style.paddingTop = navBarHeight + 10 + 'px';\r\n        container.style.paddingBottom = bottomBarHeight + 10 + 'px';\r\n        container.style.height = `calc(100vh - ${navBarHeight + bottomBarHeight + 20}px)`;\r\n      }\r\n    },\r\n\r\n    // 格式化时长显示\r\n    formatDuration(seconds) {\r\n      if (seconds < 60) {\r\n        return `${seconds}s`;\r\n      } else {\r\n        const mins = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n        return `${mins}:${secs < 10 ? '0' + secs : secs}`;\r\n      }\r\n    },\r\n\r\n    // 显示状态消息\r\n    showStatus(text, type = 'info') {\r\n      this.statusText = text;\r\n      switch (type) {\r\n        case 'success':\r\n          this.statusClass = 'text-xs text-green-600 mt-2 text-center';\r\n          break;\r\n        case 'error':\r\n          this.statusClass = 'text-xs text-red-600 mt-2 text-center';\r\n          break;\r\n        case 'warning':\r\n          this.statusClass = 'text-xs text-yellow-600 mt-2 text-center';\r\n          break;\r\n        default:\r\n          this.statusClass = 'text-xs text-blue-600 mt-2 text-center';\r\n      }\r\n\r\n      if (type !== 'error') {\r\n        setTimeout(() => {\r\n          this.statusText = '';\r\n        }, 3000);\r\n      }\r\n    },\r\n\r\n    // 音频格式转换相关方法\r\n    async convertToValidWav(blob) {\r\n      if (await this.isValidWavFile(blob)) {\r\n        return blob;\r\n      }\r\n\r\n      try {\r\n        const arrayBuffer = await new Response(blob).arrayBuffer();\r\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)({\r\n          sampleRate: 16000\r\n        });\r\n\r\n        const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\r\n        const wavBuffer = this.convertToWav(audioBuffer);\r\n\r\n        return new Blob([wavBuffer], { type: 'audio/wav' });\r\n      } catch (error) {\r\n        console.error('音频格式转换失败:', error);\r\n        this.showStatus('音频格式转换失败，可能影响识别效果', 'warning');\r\n        return blob;\r\n      }\r\n    },\r\n\r\n    async isValidWavFile(blob) {\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = (e) => {\r\n          if (e.target.readyState === FileReader.DONE) {\r\n            const arrayBuffer = e.target.result;\r\n            const uint8Array = new Uint8Array(arrayBuffer);\r\n\r\n            if (uint8Array.length >= 4) {\r\n              const riff = String.fromCharCode(uint8Array[0], uint8Array[1], uint8Array[2], uint8Array[3]);\r\n              resolve(riff === 'RIFF');\r\n            } else {\r\n              resolve(false);\r\n            }\r\n          }\r\n        };\r\n        reader.readAsArrayBuffer(blob.slice(0, 4));\r\n      });\r\n    },\r\n\r\n    convertToWav(audioBuffer) {\r\n      const numberOfChannels = audioBuffer.numberOfChannels;\r\n      const sampleRate = audioBuffer.sampleRate;\r\n      const format = 1;\r\n      const bitDepth = 16;\r\n\r\n      let data = new Float32Array(audioBuffer.length);\r\n      for (let i = 0; i < audioBuffer.length; i++) {\r\n        let sum = 0;\r\n        for (let c = 0; c < numberOfChannels; c++) {\r\n          sum += audioBuffer.getChannelData(c)[i];\r\n        }\r\n        data[i] = sum / numberOfChannels;\r\n      }\r\n\r\n      const buffer = new ArrayBuffer(44 + data.length * 2);\r\n      const view = new DataView(buffer);\r\n\r\n      this.writeString(view, 0, 'RIFF');\r\n      view.setUint32(4, 36 + data.length * 2, true);\r\n      this.writeString(view, 8, 'WAVE');\r\n      this.writeString(view, 12, 'fmt ');\r\n      view.setUint32(16, 16, true);\r\n      view.setUint16(20, format, true);\r\n      view.setUint16(22, 1, true);\r\n      view.setUint32(24, sampleRate, true);\r\n      view.setUint32(28, sampleRate * 2, true);\r\n      view.setUint16(32, 2, true);\r\n      view.setUint16(34, bitDepth, true);\r\n      this.writeString(view, 36, 'data');\r\n      view.setUint32(40, data.length * 2, true);\r\n\r\n      let index = 44;\r\n      const volume = 1;\r\n      for (let i = 0; i < data.length; i++) {\r\n        const sample = Math.max(-1, Math.min(1, data[i] * volume));\r\n        view.setInt16(index, sample < 0 ? sample * 0x8000 : sample * 0x7FFF, true);\r\n        index += 2;\r\n      }\r\n\r\n      return buffer;\r\n    },\r\n\r\n    writeString(view, offset, string) {\r\n      for (let i = 0; i < string.length; i++) {\r\n        view.setUint8(offset + i, string.charCodeAt(i));\r\n      }\r\n    },\r\n\r\n    // 相机相关方法\r\n    async toggleCamera() {\r\n      if (this.isCameraActive) {\r\n        this.stopCamera();\r\n        this.isCameraModalVisible = false;\r\n      } else {\r\n        this.isCameraModalVisible = true;\r\n        await this.startCamera();\r\n      }\r\n    },\r\n\r\n    async startCamera() {\r\n      this.isLoadingCamera = true;\r\n      this.cameraError = null;\r\n\r\n      try {\r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n          throw new Error('您的浏览器不支持相机功能，请使用最新浏览器');\r\n        }\r\n\r\n        if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\r\n          throw new Error('相机功能需要在HTTPS环境下运行');\r\n        }\r\n\r\n        // 相机配置\r\n        this.videoStream = await navigator.mediaDevices.getUserMedia({\r\n          video: {\r\n            width: { ideal: 1280 },\r\n            height: { ideal: 720 }\r\n          }\r\n        });\r\n\r\n        const videoElement = this.$refs.videoElement;\r\n        if (videoElement) {\r\n          videoElement.srcObject = this.videoStream;\r\n          this.isCameraActive = true;\r\n          this.showStatus('相机已启动，可进行表情和姿态识别', 'success');\r\n        }\r\n      } catch (error) {\r\n        console.error('相机启动失败:', error);\r\n        this.cameraError = error.message;\r\n\r\n        // 错误处理\r\n        if (error.name === 'NotAllowedError') {\r\n          this.cameraError = '相机权限被拒绝，请在浏览器设置中允许相机访问';\r\n        } else if (error.name === 'NotFoundError') {\r\n          this.cameraError = '未找到相机设备';\r\n        } else if (error.name === 'NotReadableError') {\r\n          this.cameraError = '相机被占用或不可用';\r\n        } else if (error.name === 'NotSupportedError') {\r\n          this.cameraError = '您的浏览器不支持相机功能';\r\n        }\r\n\r\n        this.showStatus(`相机错误: ${this.cameraError}`, 'error');\r\n      } finally {\r\n        this.isLoadingCamera = false;\r\n      }\r\n    },\r\n\r\n    stopCamera() {\r\n      if (this.videoStream) {\r\n        this.videoStream.getTracks().forEach(track => track.stop());\r\n        this.videoStream = null;\r\n      }\r\n\r\n      const videoElement = this.$refs.videoElement;\r\n      if (videoElement) {\r\n        videoElement.srcObject = null;\r\n      }\r\n\r\n      this.isCameraActive = false;\r\n      this.isAnalyzingContinuously = false;\r\n\r\n      if (this.continuousAnalysisTimer) {\r\n        clearInterval(this.continuousAnalysisTimer);\r\n        this.continuousAnalysisTimer = null;\r\n      }\r\n\r\n      if (this.detectionInterval) {\r\n        clearInterval(this.detectionInterval);\r\n        this.detectionInterval = null;\r\n      }\r\n\r\n      this.showStatus('相机已关闭', 'info');\r\n    },\r\n\r\n    // 拍照并分析表情和姿态（仅使用/api/chat接口）\r\n    async captureImage() {\r\n      if (!this.isCameraActive || this.isProcessingImage) return;\r\n\r\n      this.isProcessingImage = true;\r\n      this.showStatus('正在分析表情和姿态...', 'info');\r\n\r\n      try {\r\n        const videoElement = this.$refs.videoElement;\r\n        if (!videoElement) throw new Error('未找到视频元素');\r\n\r\n        // 1. 捕获视频帧为base64\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = videoElement.videoWidth;\r\n        canvas.height = videoElement.videoHeight;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\r\n        const base64Image = canvas.toDataURL('image/jpeg');\r\n\r\n        // 2. 仅调用/api/chat接口（符合需求）\r\n        const analysisResult = await this.analyzePose(base64Image);\r\n        // 注意：这里复用了analyzePose方法，实际应确保它内部只调用/api/chat\r\n\r\n        // 3. 正确转换base64为图片URL（无需fetch）\r\n        const blob = await (await fetch(base64Image)).blob(); // 修正：先处理base64为blob\r\n        const imageUrl = URL.createObjectURL(blob);\r\n\r\n        // 4. 添加到消息列表（仅传入一个综合结果）\r\n        this.addExpressionMessage(imageUrl, analysisResult);\r\n\r\n        this.showStatus('表情和姿态分析完成', 'success');\r\n      } catch (error) {\r\n        console.error('图像分析失败:', error);\r\n        this.showStatus(`分析失败: ${error.message}`, 'error');\r\n      } finally {\r\n        this.isProcessingImage = false;\r\n      }\r\n    },\r\n\r\n    // 开始/停止连续分析\r\n    startContinuousAnalysis() {\r\n      if (this.isAnalyzingContinuously) {\r\n        // 停止连续分析\r\n        clearInterval(this.continuousAnalysisTimer);\r\n        this.continuousAnalysisTimer = null;\r\n        this.isAnalyzingContinuously = false;\r\n        this.showStatus('已停止连续分析', 'info');\r\n      } else {\r\n        // 开始连续分析，每2秒一次\r\n        this.showStatus('开始连续分析...', 'info');\r\n        this.isAnalyzingContinuously = true;\r\n\r\n        // 立即执行一次\r\n        this.captureImage();\r\n\r\n        // 设置定时器\r\n        this.continuousAnalysisTimer = setInterval(() => {\r\n          if (this.isAnalyzingContinuously) {\r\n            this.captureImage();\r\n          }\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    // 分析表情\r\n    async analyzeExpression(base64Image) {\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/predict/image`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ base64: base64Image })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`表情分析失败: ${response.status} - ${errorText.substring(0, 100)}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success' && data.predictions) {\r\n          return data.predictions;\r\n        } else {\r\n          throw new Error(data.error || '未获取到表情分析结果');\r\n        }\r\n      } catch (error) {\r\n        console.error('表情分析出错:', error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    // 分析姿态并处理轮询\r\n    async analyzePose(base64Image) {\r\n      try {\r\n        // 1. 发送图片获取任务ID\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            prompt: '请分析这张图片中人物的姿态动作和表情，用简洁的语言描述',\r\n            image_base64: base64Image\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`姿态分析请求失败: ${response.status} - ${errorText.substring(0, 100)}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success' && data.task_id) {\r\n          // 2. 获得task_id后开始轮询\r\n          return this.startPolling(data.task_id);\r\n        } else {\r\n          throw new Error(data.error || '未获取到任务ID');\r\n        }\r\n      } catch (error) {\r\n        console.error('姿态分析出错:', error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    // 轮询函数 - 修复后版本\r\n    async startPolling(taskId, interval = 1000) {\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat/result/${taskId}`, {\r\n          method: 'GET',\r\n          headers: this.commonHeaders\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`轮询失败: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n\r\n        if (result.status === 'processing') {\r\n          console.log(`任务 ${taskId} 处理中，继续等待...`);\r\n          // 使用箭头函数确保 this 指向组件实例\r\n          return new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve(this.startPolling(taskId, interval));\r\n            }, interval);\r\n          });\r\n        } else if (result.status === 'success') {\r\n          console.log(`任务 ${taskId} 处理完成`);\r\n          // 此时 this.msg 已初始化，可安全赋值\r\n          this.msg.expressionResults = [result.result]; // 存入数组，适配v-for\r\n          console.log('轮询结果:', this.msg.expressionResults);\r\n\r\n          return {\r\n            status: 'completed',\r\n            taskId,\r\n            result: result.result,\r\n            timestamp: new Date()\r\n          };\r\n        } else {\r\n          throw new Error(`任务处理失败: ${result.result || '未知错误'}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(`轮询任务 ${taskId} 出错:`, error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n\r\n\r\n\r\n    // 综合分析表情和姿态\r\n    async analyzeComprehensive(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'expression') return;\r\n\r\n      this.showStatus('正在进行综合分析...', 'info');\r\n\r\n      try {\r\n        // 构建提示信息\r\n        let expressionsText = msg.expressionResults.map(exp =>\r\n          `${exp.emotion} (${(exp.confidence * 100).toFixed(1)}%)`\r\n        ).join('、');\r\n\r\n        let prompt = `根据以下表情和姿态信息进行综合分析:\r\n表情: ${expressionsText}\r\n姿态: ${msg.poseResult.pose} (置信度: ${(msg.poseResult.score * 100).toFixed(1)}%)\r\n\r\n请分析这个人可能的情绪状态和意图，并给出简要解读。`;\r\n\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`综合分析请求失败: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success') {\r\n          // 更新消息对象\r\n          this.messages[index] = {\r\n            ...this.messages[index],\r\n            comprehensiveAnalysis: data.result\r\n          };\r\n\r\n          // 保存综合分析到localStorage（追加方式）\r\n          const existingAnalysis = localStorage.getItem('interview_expression_gesture_analysis') || '';\r\n          const newAnalysis = existingAnalysis ? `${existingAnalysis}\\n${data.result}` : data.result;\r\n          localStorage.setItem('interview_expression_gesture_analysis', newAnalysis);\r\n\r\n          this.showStatus('综合分析完成', 'success');\r\n        } else {\r\n          throw new Error(data.result || '综合分析失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('综合分析失败:', error);\r\n        this.showStatus(`综合分析失败: ${error.message}`, 'error');\r\n      }\r\n    },\r\n\r\n    // 打开评测报告弹窗\r\n    async openEvaluationReport() {\r\n      this.isReportVisible = true;\r\n      this.reportLoading = true;\r\n      this.reportError = '';\r\n      this.reportResponse = null; // 重置响应数据\r\n\r\n      // 延迟执行，确保弹窗已渲染\r\n      setTimeout(() => {\r\n        this.generateReportFromStorage();\r\n      }, 100);\r\n    },\r\n\r\n    // 从localStorage生成评测报告\r\n    async generateReportFromStorage() {\r\n      try {\r\n        this.reportLoading = true;\r\n\r\n        // 从localStorage提取数据\r\n        this.firstResult = localStorage.getItem(\"firstResult\") || '';\r\n        this.secondResult = localStorage.getItem(\"secondResult\") || '';\r\n        this.thirdResult = localStorage.getItem(\"thirdResult\") || '';\r\n        this.fourthResult = localStorage.getItem(\"fourthResult\") || '';\r\n        this.fifthResult = localStorage.getItem(\"fifthResult\") || '';\r\n\r\n        this.firstQuestion = localStorage.getItem(\"firstQuestion\") || '';\r\n        this.secondQuestion = localStorage.getItem(\"secondQuestion\") || '';\r\n        this.thirdQuestion = localStorage.getItem(\"thirdQuestion\") || '';\r\n        this.fourthQuestion = localStorage.getItem(\"fourthQuestion\") || '';\r\n        this.fifthQuestion = localStorage.getItem(\"fifthQuestion\") || '';\r\n\r\n        // 检查是否有足够的数据生成报告\r\n        if (!this.firstResult && !this.secondResult && !this.thirdResult && !this.fourthResult && !this.fifthResult) {\r\n          throw new Error('未找到足够的面试回答数据，请先完成面试');\r\n        }\r\n\r\n        // 生成各维度评分\r\n        this.calculateReportScores();\r\n\r\n        // 生成各维度详细分析\r\n        await this.generateDimensionAnalysis();\r\n\r\n        // 生成综合评价\r\n        await this.generateComprehensiveEvaluation();\r\n        // 生成关键问题定位\r\n        await this.generateKeyIssues();\r\n\r\n        // 生成反馈建议\r\n        await this.generateFeedbackSuggestions();\r\n\r\n        // 生成综合评价\r\n        await this.generateComprehensiveEvaluation();\r\n\r\n        // 存储完整的报告响应数据\r\n        this.reportResponse = {\r\n          indicators: this.reportIndicators,\r\n          values: this.reportValues,\r\n          professionalKnowledgeAnalysis: this.professionalKnowledgeAnalysis,\r\n          skillMatchAnalysis: this.skillMatchAnalysis,\r\n          languageExpressionAnalysis: this.languageExpressionAnalysis,\r\n          logicalThinkingAnalysis: this.logicalThinkingAnalysis,\r\n          innovationAbilityAnalysis: this.innovationAbilityAnalysis,\r\n          comprehensiveEvaluation: this.comprehensiveEvaluation,\r\n          improvementSuggestions: this.improvementSuggestions\r\n        };\r\n\r\n        // 确保DOM已更新后再渲染图表\r\n        this.$nextTick(() => {\r\n          this.renderRadarChart();\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('生成报告失败:', error);\r\n        this.reportError = error.message;\r\n      } finally {\r\n        this.reportLoading = false;\r\n      }\r\n    },\r\n\r\n    // 计算各维度评分\r\n    calculateReportScores() {\r\n      // 专业知识水平评分 (0-100)\r\n      let knowledgeScore = 60;\r\n      if (this.firstResult && (this.firstResult.length > 100 ||\r\n        this.firstResult.includes('项目') ||\r\n        this.firstResult.includes('技术') ||\r\n        this.firstResult.includes('经验'))) {\r\n        knowledgeScore = Math.floor(Math.random() * 20) + 70; // 70-90\r\n      } else if (this.firstResult && this.firstResult.length < 50) {\r\n        knowledgeScore = Math.floor(Math.random() * 20) + 40; // 40-60\r\n      }\r\n\r\n      // 技能匹配度评分\r\n      let skillScore = 60;\r\n      if (this.secondResult && (this.secondResult.length > 100 ||\r\n        this.secondResult.includes('技能') ||\r\n        this.secondResult.includes('掌握') ||\r\n        this.secondResult.includes('经验'))) {\r\n        skillScore = Math.floor(Math.random() * 20) + 70;\r\n      } else if (this.secondResult && this.secondResult.length < 50) {\r\n        skillScore = Math.floor(Math.random() * 20) + 40;\r\n      }\r\n\r\n      // 语言表达能力评分\r\n      let languageScore = 60;\r\n      if (this.thirdResult && (this.thirdResult.length > 100 ||\r\n        this.thirdResult.includes('解释') ||\r\n        this.thirdResult.includes('方法') ||\r\n        this.thirdResult.includes('理解'))) {\r\n        languageScore = Math.floor(Math.random() * 20) + 70;\r\n      } else if (this.thirdResult && this.thirdResult.length < 50) {\r\n        languageScore = Math.floor(Math.random() * 20) + 40;\r\n      }\r\n\r\n      // 逻辑思维能力评分\r\n      let logicScore = 60;\r\n      if (this.fourthResult && (this.fourthResult.length > 100 ||\r\n        this.fourthResult.includes('分析') ||\r\n        this.fourthResult.includes('步骤') ||\r\n        this.fourthResult.includes('案例'))) {\r\n        logicScore = Math.floor(Math.random() * 20) + 70;\r\n      } else if (this.fourthResult && this.fourthResult.length < 50) {\r\n        logicScore = Math.floor(Math.random() * 20) + 40;\r\n      }\r\n\r\n      // 创新能力评分\r\n      let innovationScore = 60;\r\n      if (this.fifthResult && (this.fifthResult.length > 100 ||\r\n        this.fifthResult.includes('创新') ||\r\n        this.fifthResult.includes('解决方案') ||\r\n        this.fifthResult.includes('思路'))) {\r\n        innovationScore = Math.floor(Math.random() * 20) + 70;\r\n      } else if (this.fifthResult && this.fifthResult.length < 50) {\r\n        innovationScore = Math.floor(Math.random() * 20) + 40;\r\n      }\r\n\r\n      this.reportValues = [\r\n        knowledgeScore,\r\n        skillScore,\r\n        languageScore,\r\n        logicScore,\r\n        innovationScore\r\n      ];\r\n    },\r\n\r\n    // 生成各维度详细分析\r\n    // 生成各维度详细分析\r\n    async generateDimensionAnalysis() {\r\n      // 从localStorage获取问题\r\n      const firstQuestion = localStorage.getItem(\"firstQuestion\") || '';\r\n      const secondQuestion = localStorage.getItem(\"secondQuestion\") || '';\r\n      const thirdQuestion = localStorage.getItem(\"thirdQuestion\") || '';\r\n      const fourthQuestion = localStorage.getItem(\"fourthQuestion\") || '';\r\n      const fifthQuestion = localStorage.getItem(\"fifthQuestion\") || '';\r\n\r\n      // 专业知识水平分析 - 加入对应问题\r\n      if (this.firstResult) {\r\n        const prompt = `请基于以下问题和回答，分析面试者的专业知识水平：\r\n问题：${firstQuestion}\r\n回答：${this.firstResult}\r\n\r\n请评价面试者对该问题的回答质量、专业知识的掌握程度和深度，并指出优势和不足。`;\r\n        this.professionalKnowledgeAnalysis = await this.getAnalysisFromAPI(prompt);\r\n      }\r\n\r\n      // 技能匹配度分析 - 加入对应问题\r\n      if (this.secondResult) {\r\n        const prompt = `请基于以下问题和回答，分析面试者的技能匹配度：\r\n问题：${secondQuestion}\r\n回答：${this.secondResult}\r\n\r\n请评价面试者所提及技能与岗位需求的匹配程度，以及技能掌握的实际应用能力。`;\r\n        this.skillMatchAnalysis = await this.getAnalysisFromAPI(prompt);\r\n      }\r\n\r\n      // 语言表达能力分析 - 加入对应问题\r\n      if (this.thirdResult) {\r\n        const prompt = `请基于以下问题和回答，分析面试者的语言表达能力：\r\n问题：${thirdQuestion}\r\n回答：${this.thirdResult}\r\n\r\n请评价面试者回答的清晰度、条理性、逻辑性和表达流畅度。`;\r\n        this.languageExpressionAnalysis = await this.getAnalysisFromAPI(prompt);\r\n      }\r\n\r\n      // 逻辑思维能力分析 - 加入对应问题\r\n      if (this.fourthResult) {\r\n        const prompt = `请基于以下问题和回答，分析面试者的逻辑思维能力：\r\n问题：${fourthQuestion}\r\n回答：${this.fourthResult}\r\n\r\n请评价面试者面试者分析问题的思路、推理过程的逻辑性和解决问题的系统性。`;\r\n        this.logicalThinkingAnalysis = await this.getAnalysisFromAPI(prompt);\r\n      }\r\n\r\n      // 创新能力分析 - 加入对应问题\r\n      if (this.fifthResult) {\r\n        const prompt = `请基于以下问题和回答，分析面试者的创新能力：\r\n问题：${fifthQuestion}\r\n回答：${this.fifthResult}\r\n\r\n请评价面试者提出的解决方案的创新性、独特性和实用性，以及发现问题的敏锐度。`;\r\n        this.innovationAbilityAnalysis = await this.getAnalysisFromAPI(prompt);\r\n      }\r\n    },\r\n\r\n\r\n    // 调用API获取分析结果\r\n    async getAnalysisFromAPI(prompt) {\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`分析请求失败: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success') {\r\n          const taskId = data.task_id;\r\n          const pollInterval = 2000; // 轮询间隔2秒\r\n          const maxAttempts = 150;   // 最多轮询150次（约5分钟）\r\n\r\n          // 创建一个Promise来等待最终结果\r\n          return new Promise((resolve, reject) => {\r\n            let attempts = 0;\r\n\r\n            // 定义轮询函数，直接查询文件接口\r\n            const pollForFile = () => {\r\n              // 超过最大尝试次数则拒绝\r\n              if (attempts >= maxAttempts) {\r\n                reject(new Error('请求超时，未能获取结果'));\r\n                return;\r\n              }\r\n\r\n              attempts++;\r\n\r\n              // 直接调用文件查询接口\r\n              fetch(`${this.API_BASE_URL}/get_task_file_url`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  ...this.commonHeaders,\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ task_id: taskId })\r\n              })\r\n                .then(response => {\r\n                  // 无论响应状态如何，都尝试解析JSON\r\n                  return response.json().then(data => ({ data, response }));\r\n                })\r\n                .then(({ data, response }) => {\r\n                  // 成功获取到文件URL\r\n                  if (data.status === 'success' && data.file_url) {\r\n                    // 加载文件内容\r\n                    fetch(data.file_url, {\r\n                      method: 'GET',\r\n                      headers: this.commonHeaders\r\n                    })\r\n                      .then(fileResponse => {\r\n                        if (!fileResponse.ok) {\r\n                          throw new Error(`文件加载失败: ${fileResponse.status}`);\r\n                        }\r\n                        return fileResponse.text();\r\n                      })\r\n                      .then(fileContent => {\r\n                        // 检查内容是否为\"processing\"\r\n                        if (fileContent.trim() === 'processing') {\r\n                          // 仍在处理中，继续轮询\r\n                          setTimeout(pollForFile, pollInterval);\r\n                        } else {\r\n                          // 处理完成，返回结果\r\n                          resolve(fileContent);\r\n                        }\r\n                      })\r\n                      .catch(() => {\r\n                        // 文件加载失败，继续轮询\r\n                        setTimeout(pollForFile, pollInterval);\r\n                      });\r\n                  }\r\n                  // 未找到文件但可能还在处理中，继续轮询\r\n                  else if (response.status === 404 ||\r\n                    (data.status === 'error' && data.message.includes('未找到'))) {\r\n                    setTimeout(pollForFile, pollInterval);\r\n                  }\r\n                  // 其他错误情况\r\n                  else {\r\n                    reject(new Error(`获取文件失败: ${data.message || '未知错误'}`));\r\n                  }\r\n                })\r\n                .catch(error => {\r\n                  // 网络错误等情况，继续轮询\r\n                  setTimeout(pollForFile, pollInterval);\r\n                });\r\n            };\r\n\r\n            // 开始第一次查询\r\n            pollForFile();\r\n          });\r\n        } else {\r\n          return '无法生成分析结果';\r\n        }\r\n      } catch (error) {\r\n        console.error('获取分析结果失败:', error);\r\n        return '分析生成失败';\r\n      }\r\n    },\r\n\r\n    // 检查录音支持\r\n    async checkRecordingSupport() {\r\n      try {\r\n        // 检查浏览器是否支持媒体录制API\r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n          throw new Error('您的浏览器不支持录音功能');\r\n        }\r\n\r\n        // 尝试获取麦克风权限（可选，根据实际需求）\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n\r\n        // 释放流资源\r\n        stream.getTracks().forEach(track => track.stop());\r\n\r\n        // 可以在这里设置一个标志，表示支持录音\r\n        this.recordingSupported = true;\r\n        console.log('浏览器支持录音功能');\r\n      } catch (error) {\r\n        this.recordingSupported = false;\r\n        console.warn('录音功能检查失败:', error.message);\r\n      }\r\n    },\r\n    // 切换录音状态（开始/停止录音）\r\n    toggleRecording() {\r\n      if (this.isRecording) {\r\n        // 停止录音的逻辑\r\n        this.stopRecording();\r\n      } else {\r\n        // 开始录音的逻辑\r\n        this.startRecording();\r\n      }\r\n    },\r\n\r\n    // 生成综合评价\r\n    async generateComprehensiveEvaluation() {\r\n      // 构建提示信息\r\n      // 修改prompt，要求结合评分和具体建议\r\n      const prompt = `基于以下面试者的五维分析数据，生成综合评价和改进建议：\r\n1. 专业知识水平: ${this.firstResult || '无数据'}（评分：${this.reportValues[0]}）\r\n2. 技能匹配度: ${this.secondResult || '无数据'}（评分：${this.reportValues[1]}）\r\n3. 语言表达能力: ${this.thirdResult || '无数据'}（评分：${this.reportValues[2]}）\r\n4. 逻辑思维能力: ${this.fourthResult || '无数据'}（评分：${this.reportValues[3]}）\r\n5. 创新能力: ${this.fifthResult || '无数据'}（评分：${this.reportValues[4]}）\r\n\r\n请严格按照以下格式输出：\r\n【综合评价】\r\n[100字左右，结合评分总结优势和不足]\r\n\r\n【改进建议】\r\n1. [具体可操作的建议，关联专业知识]\r\n2. [具体可操作的建议，关联技能或表达]\r\n3. [具体可操作的建议，关联思维或创新]`;\r\n\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`生成综合评价失败: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success' && data.result) {\r\n          const result = data.result;\r\n\r\n          // 提取综合评价\r\n          const evalMatch = result.match(/【综合评价】\\s*([\\s\\S]*?)(?=【改进建议】)/);\r\n          this.comprehensiveEvaluation = evalMatch ? evalMatch[1].trim() : '无法生成综合评价';\r\n\r\n          // 提取改进建议\r\n          this.improvementSuggestions = [];\r\n          const suggestionsMatch = result.match(/【改进建议】\\s*([\\s\\S]*)/);\r\n          if (suggestionsMatch && suggestionsMatch[1]) {\r\n            // 按序号提取建议\r\n            const suggestions = suggestionsMatch[1]\r\n              .split(/\\n\\d+\\./)\r\n              .filter(item => item.trim());\r\n\r\n            suggestions.forEach(suggestion => {\r\n              this.improvementSuggestions.push(suggestion.trim());\r\n            });\r\n          }\r\n\r\n          // 兜底处理（确保至少有3条建议）\r\n          while (this.improvementSuggestions.length < 3) {\r\n            this.improvementSuggestions.push('加强对应维度的专项训练');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('生成综合评价失败:', error);\r\n        // 使用默认评价\r\n        this.comprehensiveEvaluation = '面试者表现中等，各方面能力有提升空间。';\r\n        this.improvementSuggestions = [\r\n          \"加强专业知识的深度和广度\",\r\n          \"提高语言表达的清晰度和逻辑性\",\r\n          \"在实际应用中培养创新思维\"\r\n        ];\r\n      }\r\n    },\r\n\r\n    // 在generateComprehensiveEvaluation方法后添加\r\n    async generateKeyIssues() {\r\n      // 生成关键问题定位\r\n      // 修改prompt，明确要求结构化输出\r\n      const prompt = `基于以下面试者的表现，分析其在面试中暴露的关键问题和不足:\r\n专业知识水平: ${this.firstResult || '无数据'}\r\n技能匹配度: ${this.secondResult || '无数据'}\r\n语言表达能力: ${this.thirdResult || '无数据'}\r\n逻辑思维能力: ${this.fourthResult || '无数据'}\r\n创新能力: ${this.fifthResult || '无数据'}\r\n\r\n请严格按照以下格式输出，不要添加额外内容：\r\n【关键问题定位】\r\n[用1-2句话总结核心问题]\r\n\r\n【具体表现示例】\r\n1. [第一个具体例子]\r\n2. [第二个具体例子]\r\n3. [第三个具体例子]`;\r\n\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) throw new Error(`生成关键问题失败: ${response.status}`);\r\n\r\n        const data = await response.json();\r\n        if (data.status === 'success' && data.result) {\r\n          const result = data.result;\r\n\r\n          // 提取关键问题定位（匹配【关键问题定位】后的内容）\r\n          const issueMatch = result.match(/【关键问题定位】\\s*([\\s\\S]*?)(?=【具体表现示例】)/);\r\n          this.keyIssues = issueMatch ? issueMatch[1].trim() : '未发现明显问题';\r\n\r\n          // 提取具体示例（匹配【具体表现示例】后的列表）\r\n          this.issueExamples = [];\r\n          const examplesMatch = result.match(/【具体表现示例】\\s*([\\s\\S]*)/);\r\n          if (examplesMatch && examplesMatch[1]) {\r\n            // 按序号分割提取每个示例\r\n            const examples = examplesMatch[1].split(/\\n\\d+\\./).filter(item => item.trim());\r\n            examples.forEach(example => {\r\n              this.issueExamples.push(example.trim());\r\n            });\r\n            // 限制最多3个示例\r\n            this.issueExamples = this.issueExamples.slice(0, 3);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('生成关键问题失败:', error);\r\n        this.keyIssues = '无法分析关键问题';\r\n      }\r\n    },\r\n\r\n    async generateFeedbackSuggestions() {\r\n      // 生成分类反馈建议\r\n      // 修改prompt，明确分类和格式要求\r\n      const prompt = `基于以下面试者的表现，从5个维度给出具体改进建议：\r\n专业知识水平: ${this.firstResult || '无数据'}\r\n技能匹配度: ${this.secondResult || '无数据'}\r\n语言表达能力: ${this.thirdResult || '无数据'}\r\n逻辑思维能力: ${this.fourthResult || '无数据'}\r\n创新能力: ${this.fifthResult || '无数据'}\r\n\r\n请严格按照以下格式输出（每个维度至少2条建议，用\"-\"开头）：\r\n【专业知识】\r\n- 建议1\r\n- 建议2\r\n\r\n【技能提升】\r\n- 建议1\r\n- 建议2\r\n\r\n【表达能力】\r\n- 建议1\r\n- 建议2\r\n\r\n【思维逻辑】\r\n- 建议1\r\n- 建议2\r\n\r\n【创新思维】\r\n- 建议1\r\n- 建议2`;\r\n\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) throw new Error(`生成反馈建议失败: ${response.status}`);\r\n\r\n        const data = await response.json();\r\n        if (data.status === 'success' && data.result) {\r\n          this.feedbackCategories = [];\r\n          const categories = ['专业知识', '技能提升', '表达能力', '思维逻辑', '创新思维'];\r\n\r\n          categories.forEach(category => {\r\n            // 匹配每个分类的内容（如【专业知识】和下一个分类之间的内容）\r\n            const regex = new RegExp(`【${category}】\\\\s*([\\\\s\\\\S]*?)(?=【|$)`, 'i');\r\n            const match = data.result.match(regex);\r\n\r\n            if (match && match[1]) {\r\n              // 提取\"-\"开头的建议列表\r\n              const suggestions = match[1]\r\n                .split('\\n')\r\n                .filter(line => line.trim().startsWith('-'))\r\n                .map(line => line.trim().replace(/^-/, '').trim());\r\n\r\n              this.feedbackCategories.push({\r\n                title: category,\r\n                suggestions: suggestions.length ? suggestions : ['暂无具体建议']\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('生成反馈建议失败:', error);\r\n        this.feedbackCategories = [{\r\n          title: '通用建议',\r\n          suggestions: [\r\n            '加强专业知识学习',\r\n            '提高语言表达能力',\r\n            '多练习逻辑思维'\r\n          ]\r\n        }];\r\n      }\r\n    },\r\n\r\n    // 渲染雷达图（修复图表不显示问题）\r\n    renderRadarChart1() {\r\n      // 确保DOM元素已存在\r\n      this.$nextTick(() => {\r\n        const ctx = this.$refs.radarChart?.getContext('2d');\r\n        if (!ctx) {\r\n          console.error('未找到雷达图Canvas元素');\r\n          return;\r\n        }\r\n\r\n        // 销毁现有图表\r\n        if (this.chart) {\r\n          this.chart.destroy();\r\n        }\r\n\r\n        // 确保有数据再绘制图表\r\n        if (!this.reportIndicators || !this.reportValues || this.reportIndicators.length !== this.reportValues.length) {\r\n          console.error('雷达图数据不完整');\r\n          return;\r\n        }\r\n\r\n        // 创建新图表\r\n        this.chart = new Chart(ctx, {\r\n          type: 'radar',\r\n          data: {\r\n            labels: this.reportIndicators,\r\n            datasets: [{\r\n              label: '能力评分',\r\n              data: this.reportValues,\r\n              backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n              borderColor: 'rgba(59, 130, 246, 1)',\r\n              pointBackgroundColor: 'rgba(59, 130, 246, 1)',\r\n              pointBorderColor: '#fff',\r\n              pointHoverBackgroundColor: '#fff',\r\n              pointHoverBorderColor: 'rgba(59, 130, 246, 1)'\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              r: {\r\n                angleLines: { display: true },\r\n                suggestedMin: 0,\r\n                suggestedMax: 100,\r\n                ticks: { callback: (value) => `${value}分` }\r\n              }\r\n            },\r\n            plugins: {\r\n              legend: { position: 'top' },\r\n              tooltip: {\r\n                callbacks: { label: (context) => `${context.label}: ${context.raw}分` }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      });\r\n    },\r\n\r\n    // 获取评分等级文本\r\n    getScoreLevel(score) {\r\n      if (score >= 85) return '优秀';\r\n      if (score >= 75) return '良好';\r\n      if (score >= 65) return '一般';\r\n      return '待提高';\r\n    },\r\n\r\n    // 获取评分对应的CSS类\r\n    getScoreClass(score) {\r\n      if (score >= 85) return 'excellent';\r\n      if (score >= 75) return 'good';\r\n      if (score >= 65) return 'average';\r\n      return 'poor';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#dialog {\r\n  position: relative;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-color: #EDEDF5;\r\n}\r\n\r\n.van-nav-bar {\r\n  --van-nav-bar-background-color: #EFF1FD;\r\n  --van-nav-bar-title-text-color: black;\r\n}\r\n\r\n.chat-container {\r\n  width: 100%;\r\n  overflow-y: auto;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.messages {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  padding: 0 15px;\r\n}\r\n\r\n.message-item {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  margin: 5px 0;\r\n}\r\n\r\n.user-message {\r\n  justify-content: flex-end;\r\n\r\n}\r\n\r\n/* 用户消息气泡样式（关键） */\r\n.user-message .message-bubble,\r\n.user-message .voice-bubble,\r\n.user-message .expression-bubble {\r\n  margin-right: 8px;\r\n  /* 与头像保持距离 */\r\n  margin-left: 0;\r\n  /* 左侧无间距 */\r\n}\r\n\r\n.avatar {\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 10px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.ai-message .avatar {\r\n  background-color: #e6f7ff;\r\n  color: #1890ff;\r\n}\r\n\r\n.user-message .avatar {\r\n  background-color: #f5f5f5;\r\n  color: #8c8c8c;\r\n}\r\n\r\n.message-bubble {\r\n  padding: 10px 15px;\r\n  border-radius: 18px;\r\n  max-width: 80%;\r\n  word-wrap: break-word;\r\n  position: relative;\r\n}\r\n\r\n.ai-message .message-bubble {\r\n  background-color: #ffffff;\r\n  border-top-left-radius: 4px;\r\n}\r\n\r\n.user-message .message-bubble {\r\n  background-color: #1677ff;\r\n  color: white;\r\n  border-top-right-radius: 4px;\r\n}\r\n\r\n.voice-bubble {\r\n  max-width: 80%;\r\n  padding: 10px 15px;\r\n  border-radius: 18px;\r\n  position: relative;\r\n}\r\n\r\n.ai-message .voice-bubble {\r\n  background-color: #ffffff;\r\n  border-top-left-radius: 4px;\r\n}\r\n\r\n.user-message .voice-bubble {\r\n  background-color: #1677ff;\r\n  color: white;\r\n  border-top-right-radius: 4px;\r\n}\r\n\r\n.voice-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  min-width: 150px;\r\n}\r\n\r\n.voice-wave {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 3px;\r\n  height: 24px;\r\n  flex-grow: 1;\r\n}\r\n\r\n.voice-wave div {\r\n  width: 3px;\r\n  background-color: currentColor;\r\n  border-radius: 3px;\r\n  transition: height 0.2s ease;\r\n}\r\n\r\n.voice-duration {\r\n  font-size: 12px;\r\n  color: currentColor;\r\n  opacity: 0.8;\r\n}\r\n\r\n.play-icon {\r\n  cursor: pointer;\r\n}\r\n\r\n.voice-actions {\r\n  display: flex;\r\n  gap: 5px;\r\n  margin-top: 8px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.voice-text-result {\r\n  margin-top: 8px;\r\n  padding-top: 8px;\r\n  border-top: 1px dashed #eee;\r\n  font-size: 14px;\r\n  color: #333;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.voice-speed-result {\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n  color: #666;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  padding: 3px 5px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.voice-tone-result {\r\n  margin-top: 8px;\r\n  padding-top: 8px;\r\n  border-top: 1px dashed #eee;\r\n  font-size: 12px;\r\n  color: #666;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.voice-logic-result {\r\n  margin-top: 8px;\r\n  padding-top: 8px;\r\n  border-top: 1px dashed #eee;\r\n  font-size: 13px;\r\n  color: #333;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 表情和姿态分析样式 */\r\n.expression-bubble {\r\n  max-width: 80%;\r\n  padding: 10px 15px;\r\n  border-radius: 18px;\r\n  position: relative;\r\n}\r\n\r\n.ai-message .expression-bubble {\r\n  background-color: #ffffff;\r\n  border-top-left-radius: 4px;\r\n}\r\n\r\n.user-message .expression-bubble {\r\n  background-color: #1677ff;\r\n  color: white;\r\n  border-top-right-radius: 4px;\r\n}\r\n\r\n.expression-image-container {\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.expression-image {\r\n  width: 200px;\r\n  height: auto;\r\n  display: block;\r\n}\r\n\r\n.expression-results,\r\n.pose-result,\r\n.comprehensive-analysis {\r\n  margin-top: 8px;\r\n  font-size: 13px;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  color: #333;\r\n}\r\n\r\n.expression-actions {\r\n  display: flex;\r\n  gap: 5px;\r\n  margin-top: 8px;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.error-message {\r\n  background-color: #fff2f0 !important;\r\n  color: #f5222d !important;\r\n}\r\n\r\n.typing {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n}\r\n\r\n.typing span {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background-color: #6b7280;\r\n  animation: typing 1.4s infinite ease-in-out both;\r\n}\r\n\r\n.typing span:nth-child(1) {\r\n  animation-delay: -0.32s;\r\n}\r\n\r\n.typing span:nth-child(2) {\r\n  animation-delay: -0.16s;\r\n}\r\n\r\n@keyframes typing {\r\n\r\n  0%,\r\n  80%,\r\n  100% {\r\n    transform: scale(0);\r\n  }\r\n\r\n  40% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n\r\n#dialog_bottombar {\r\n  width: 100%;\r\n  background-color: #EFF1FD;\r\n}\r\n\r\n#dialog_bottombar_inside {\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 8px 2.5% 15px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.recording {\r\n  color: #f5222d !important;\r\n  animation: pulse 1.5s infinite;\r\n}\r\n\r\n.camera-active {\r\n  color: #00b42a !important;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n.report-icon {\r\n  color: #722ed1 !important;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n\r\n  50% {\r\n    transform: scale(1.2);\r\n  }\r\n\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n.recording-indicator {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 20px 30px;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.recording-dot {\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  background-color: #f5222d;\r\n  margin: 0 auto 10px;\r\n  animation: blink 1s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n\r\n  50% {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.status-bar {\r\n  position: absolute;\r\n  bottom: 120px;\r\n  left: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n/* 相机模态框样式 */\r\n.camera-modal {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.camera-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.camera-preview {\r\n  flex-grow: 1;\r\n  position: relative;\r\n  background-color: #000;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.camera-video {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.camera-loading,\r\n.camera-error {\r\n  position: absolute;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.camera-controls {\r\n  padding: 15px;\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n/* 评测报告弹窗样式 */\r\n.report-container {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 0;\r\n}\r\n\r\n.report-header {\r\n  text-align: center;\r\n  padding: 10px 20px;\r\n  position: relative;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.report-header h2 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  color: #1e293b;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #666;\r\n}\r\n\r\n.report-loading,\r\n.report-error {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-grow: 1;\r\n  gap: 15px;\r\n  padding: 20px;\r\n}\r\n\r\n.report-content {\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n  padding: 15px;\r\n}\r\n\r\n/* 雷达图样式 */\r\n.radar-chart-container {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 16px;\r\n  color: #334155;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  font-weight: 500;\r\n}\r\n\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 300px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* 能力详情样式 */\r\n.ability-details-container {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.details-title {\r\n  font-size: 16px;\r\n  color: #334155;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  font-weight: 500;\r\n}\r\n\r\n.details-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 10px;\r\n}\r\n\r\n.detail-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 8px 10px;\r\n  background: #fff;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n}\r\n\r\n.indicator-name {\r\n  color: #334155;\r\n}\r\n\r\n.score-value {\r\n  font-weight: bold;\r\n}\r\n\r\n.excellent {\r\n  color: #2ecc71;\r\n}\r\n\r\n.good {\r\n  color: #f39c12;\r\n}\r\n\r\n.average {\r\n  color: #3498db;\r\n}\r\n\r\n.poor {\r\n  color: #e74c3c;\r\n}\r\n\r\n/* 分析内容样式 */\r\n.analysis-container {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.analysis-title {\r\n  font-size: 16px;\r\n  color: #334155;\r\n  margin-bottom: 15px;\r\n  font-weight: 500;\r\n}\r\n\r\n.analysis-section {\r\n  margin-bottom: 15px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px dashed #e2e8f0;\r\n}\r\n\r\n.analysis-section:last-child {\r\n  margin-bottom: 0;\r\n  padding-bottom: 0;\r\n  border-bottom: none;\r\n}\r\n\r\n.analysis-section h4 {\r\n  margin: 0 0 8px 0;\r\n  font-size: 14px;\r\n  color: #1e293b;\r\n}\r\n\r\n.analysis-section p {\r\n  margin: 0;\r\n  font-size: 13px;\r\n  color: #475569;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* 综合评价样式 */\r\n.summary-container {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.summary-title {\r\n  font-size: 16px;\r\n  color: #334155;\r\n  margin-bottom: 15px;\r\n  font-weight: 500;\r\n}\r\n\r\n.summary-content {\r\n  background: #fff;\r\n  padding: 15px;\r\n  border-radius: 6px;\r\n}\r\n\r\n.summary-content p {\r\n  margin: 0 0 10px 0;\r\n  font-size: 13px;\r\n  color: #475569;\r\n  line-height: 1.5;\r\n}\r\n\r\n.summary-content h4 {\r\n  margin: 15px 0 8px 0;\r\n  font-size: 14px;\r\n  color: #1e293b;\r\n}\r\n\r\n.summary-content ul {\r\n  margin: 0;\r\n  padding-left: 20px;\r\n}\r\n\r\n.summary-content li {\r\n  font-size: 13px;\r\n  color: #475569;\r\n  margin-bottom: 5px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* 响应体展示样式 */\r\n.response-body-container {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.response-body-title {\r\n  font-size: 16px;\r\n  color: #334155;\r\n  margin-bottom: 10px;\r\n  font-weight: 500;\r\n}\r\n\r\n.response-body-content {\r\n  background: #fff;\r\n  padding: 15px;\r\n  border-radius: 6px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  font-family: monospace;\r\n}\r\n\r\n.response-body-content pre {\r\n  margin: 0;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  font-size: 12px;\r\n  color: #334155;\r\n}\r\n\r\n/* Markdown渲染样式 */\r\n.markdown-bubble {\r\n  padding: 12px 15px;\r\n  line-height: 1.8;\r\n}\r\n\r\n.markdown-render h1 {\r\n  font-size: 1.5rem;\r\n  margin: 1rem 0 0.5rem;\r\n  color: #333;\r\n}\r\n\r\n.markdown-render h2 {\r\n  font-size: 1.3rem;\r\n  margin: 0.8rem 0 0.4rem;\r\n  color: #444;\r\n}\r\n\r\n.markdown-render h3 {\r\n  font-size: 1.1rem;\r\n  margin: 0.6rem 0 0.3rem;\r\n  color: #555;\r\n}\r\n\r\n.markdown-render ul {\r\n  margin: 0.5rem 0;\r\n  padding-left: 1.5rem;\r\n}\r\n\r\n.markdown-render li {\r\n  margin: 0.3rem 0;\r\n}\r\n\r\n.markdown-render strong {\r\n  font-weight: bold;\r\n  color: #222;\r\n}\r\n\r\n.markdown-render em {\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.markdown-render p {\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n/* 修复可能的样式冲突 */\r\n.markdown-render * {\r\n  box-sizing: border-box;\r\n}\r\n\r\n.formatted-content {\r\n\r\n  color: #111827;\r\n}\r\n\r\n\r\n.formatted-content div[style*=\"color: rgba(107, 114, 128, 0.7)\"] {\r\n  color: rgba(107, 114, 128, 0.7) !important;\r\n  background-color: rgba(243, 244, 246, 0.3) !important;\r\n}\r\n.van-popup.dragging {\r\n  user-select: none;\r\n}\r\n</style>\r\n","import { render } from \"./ActionView.vue?vue&type=template&id=1e2a2cc2&scoped=true\"\nimport script from \"./ActionView.vue?vue&type=script&lang=js\"\nexport * from \"./ActionView.vue?vue&type=script&lang=js\"\n\nimport \"./ActionView.vue?vue&type=style&index=0&id=1e2a2cc2&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1e2a2cc2\"]])\n\nexport default __exports__","<template>\n    <!-- 欢迎页面 -->\n    <div id=\"welcome\">\n        \n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            // QQ_logo图片的css样式，根据页面大小动态设置图片大小\n            imgStyle: {\n                width: window.innerHeight * 0.4 + \"px\",\n                marginTop: (window.innerHeight - window.innerHeight * 0.4) / 2 + \"px\",\n            }\n        };\n    },\n    created() {\n        // 3秒后跳转到登录页面\n        setTimeout(() => {this.$router.push('/login');}, 3000);\n    }\n}\n</script>\n\n<style>\n#welcome {\n    background-color: white;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0px;\n    bottom: 0px;\n    text-align: center;\n}\n</style>","import { render } from \"./WelcomeView.vue?vue&type=template&id=04fdfd00\"\nimport script from \"./WelcomeView.vue?vue&type=script&lang=js\"\nexport * from \"./WelcomeView.vue?vue&type=script&lang=js\"\n\nimport \"./WelcomeView.vue?vue&type=style&index=0&id=04fdfd00&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"auth-page\">\n    <!-- 视频背景容器 -->\n    <div class=\"video-background\" :class=\"{ 'video-visible': isVideoLoaded }\">\n      <!-- 备用背景图 - 始终作为保底显示 -->\n      <div class=\"fallback-background\"></div>\n\n      <!-- 视频元素 -->\n      <video id=\"backgroundVideo\" ref=\"backgroundVideo\" class=\"background-video\" loop playsinline\n        poster=\"https://picsum.photos/1920/1080\" @error=\"handleVideoError\" @play=\"handleVideoPlay\"\n        @pause=\"handleVideoPause\" @loadeddata=\"markVideoLoaded\" @loadedmetadata=\"checkVideoDimensions\">\n        <source src=\"https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Clingxiyinpin2.mp3\" type=\"video/mp4\">\n      </video>\n\n      <!-- 视频播放提示 -->\n      <div v-if=\"showPlayPrompt\" class=\"play-prompt\" @click=\"tryPlayVideo\"\n        :style=\"{ display: showPlayPrompt ? 'flex' : 'none' }\">\n        <div class=\"play-icon\">▶</div>\n        <p>点击播放背景视频</p>\n      </div>\n\n      <!-- 视频遮罩层 - 降低透明度，让背景更清晰 -->\n      <div class=\"video-overlay\"></div>\n    </div>\n\n    <!-- 品牌标识区域 - 增加文字阴影提高可读性 -->\n    <div class=\"brand-header\">\n      <div class=\"logo\">\n        <span class=\"logo-char\">灵</span>\n      </div>\n      <h1 class=\"brand-name\">灵犀Vox</h1>\n    </div>\n\n    <div class=\"auth-container\">\n      <!-- 登录/注册切换卡片 - 透明效果 -->\n      <div class=\"auth-card\">\n        <div class=\"auth-tabs\">\n          <button class=\"tab-btn\" :class=\"{ active: isLogin }\" @click=\"isLogin = true\">\n            登录\n          </button>\n          <button class=\"tab-btn\" :class=\"{ active: !isLogin }\" @click=\"isLogin = false\">\n            注册\n          </button>\n        </div>\n\n        <!-- 登录表单 -->\n        <form v-if=\"isLogin\" @submit.prevent=\"handleLogin\" class=\"auth-form\">\n          <div class=\"form-group\">\n            <label>账号</label>\n            <input type=\"text\" v-model=\"loginForm.username\" required placeholder=\"请输入账号\" autocomplete=\"username\">\n          </div>\n          <div class=\"form-group\">\n            <label>密码</label>\n            <input type=\"password\" v-model=\"loginForm.password\" required placeholder=\"请输入密码\"\n              autocomplete=\"current-password\">\n          </div>\n          \n          <button type=\"submit\" class=\"submit-btn\">登录</button>\n        </form>\n\n        <!-- 注册表单 -->\n        <form v-else @submit.prevent=\"handleRegister\" class=\"auth-form\">\n          <div class=\"form-group\">\n            <label>账号</label>\n            <input type=\"text\" v-model=\"registerForm.username\" required placeholder=\"请设置账号\" autocomplete=\"username\">\n          </div>\n          <div class=\"form-group\">\n            <label>密码</label>\n            <input type=\"password\" v-model=\"registerForm.password\" required placeholder=\"请设置密码\"\n              autocomplete=\"new-password\">\n          </div>\n          <div class=\"form-group\">\n            <label>邮箱</label>\n            <input type=\"email\" v-model=\"registerForm.email\" required placeholder=\"请输入邮箱\" autocomplete=\"email\">\n          </div>\n          <button type=\"submit\" class=\"submit-btn\">注册</button>\n        </form>\n\n        <!-- 加载提示 -->\n        <div v-if=\"loading\" class=\"loading-overlay\">\n          <div class=\"spinner\"></div>\n          <p>{{ loadingText }}</p>\n        </div>\n\n        <!-- 消息提示 -->\n        <div v-if=\"message\" :class=\"['message-toast', messageType]\">\n          {{ message }}\n          <button class=\"close-btn\" @click=\"clearMessage\">&times;</button>\n        </div>\n      </div>\n\n      \n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://123.56.203.202';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  withCredentials: true\n});\n\nexport default {\n  data() {\n    return {\n      isLogin: true,\n      loading: false,\n      loadingText: '',\n      message: '',\n      messageType: '',\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      registerForm: {\n        username: '',\n        password: '',\n        email: ''\n      },\n      videoError: false,\n      showPlayPrompt: false,\n      hasUserInteracted: false,\n      isVideoLoaded: false,\n      videoPlayedOnce: false,\n      videoDebugInfo: ''\n    };\n  },\n  mounted() {\n    // 监听用户交互\n    document.addEventListener('click', this.handleUserInteraction);\n    document.addEventListener('touchstart', this.handleUserInteraction);\n\n    // 立即检查视频元素是否存在\n    this.checkVideoElementExists();\n\n    // 初始化视频\n    setTimeout(() => {\n      this.initVideo();\n    }, 300);\n\n    // 定时检查播放状态\n    this.playbackCheckInterval = setInterval(() => {\n      this.checkPlayPromptVisibility();\n    }, 2000);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.handleUserInteraction);\n    document.removeEventListener('touchstart', this.handleUserInteraction);\n    clearInterval(this.playbackCheckInterval);\n  },\n  methods: {\n    // 检查视频元素是否存在于DOM中\n    checkVideoElementExists() {\n      const video = this.$refs.backgroundVideo;\n      if (video) {\n        console.log('视频元素已存在于DOM中');\n        // 强制触发重绘\n        this.$nextTick(() => {\n          video.style.display = 'none';\n          video.offsetHeight;\n          video.style.display = 'block';\n        });\n      } else {\n        console.warn('视频元素未在DOM中找到');\n        this.showMessage('视频背景初始化失败', 'error');\n      }\n    },\n\n    // 处理用户交互\n    handleUserInteraction() {\n      this.hasUserInteracted = true;\n      this.checkPlayPromptVisibility();\n\n      if (!this.videoError && this.$refs.backgroundVideo && this.$refs.backgroundVideo.paused) {\n        this.tryPlayVideo();\n      }\n    },\n\n    // 初始化视频\n    initVideo() {\n      const video = this.$refs.backgroundVideo;\n      if (!video) {\n        console.error('无法获取视频元素引用');\n        return;\n      }\n\n      console.log('开始初始化视频播放');\n      this.tryPlayVideo();\n\n      // 2秒后检查是否需要显示提示\n      setTimeout(() => {\n        this.checkPlayPromptVisibility();\n      }, 2000);\n    },\n\n    // 检查是否应该显示播放提示\n    checkPlayPromptVisibility() {\n      const video = this.$refs.backgroundVideo;\n\n      console.log('检查播放提示显示状态:', {\n        hasUserInteracted: this.hasUserInteracted,\n        videoPaused: video ? video.paused : true,\n        videoError: this.videoError,\n        isVideoLoaded: this.isVideoLoaded\n      });\n\n      // 显示提示的条件：用户已交互 + 视频未播放 + 无错误\n      if (this.hasUserInteracted && !this.videoError) {\n        if (video && video.paused) {\n          this.showPlayPrompt = true;\n        } else if (!this.isVideoLoaded) {\n          this.showPlayPrompt = true;\n        }\n      }\n    },\n\n    // 尝试播放视频\n    tryPlayVideo() {\n      const video = this.$refs.backgroundVideo;\n      if (!video) return;\n\n      video.play()\n        .then(() => {\n          console.log('视频播放成功');\n          this.videoPlayedOnce = true;\n          this.showPlayPrompt = false;\n        })\n        .catch(error => {\n          console.warn('视频播放失败:', error);\n          this.videoPlayedOnce = true;\n          this.showPlayPrompt = true;\n        });\n    },\n\n    // 标记视频已加载\n    markVideoLoaded() {\n      this.isVideoLoaded = true;\n      console.log('视频数据已加载完成');\n    },\n\n    // 处理视频播放事件\n    handleVideoPlay() {\n      this.isVideoLoaded = true;\n      this.showPlayPrompt = false;\n      this.videoPlayedOnce = true;\n      console.log('视频开始播放');\n    },\n\n    // 处理视频暂停事件\n    handleVideoPause() {\n      if (this.videoPlayedOnce && this.hasUserInteracted) {\n        this.showPlayPrompt = true;\n      }\n    },\n\n    // 检查视频尺寸\n    checkVideoDimensions() {\n      const video = this.$refs.backgroundVideo;\n      if (video) {\n        console.log(`视频尺寸: ${video.videoWidth}x${video.videoHeight}`);\n        if (video.videoWidth < 100 || video.videoHeight < 100) {\n          console.warn('视频尺寸异常');\n          \n        }\n      }\n    },\n\n    // 处理视频错误\n    handleVideoError(event) {\n      console.error('视频错误详情:', event);\n      this.videoError = true;\n      this.showPlayPrompt = false;\n      this.isVideoLoaded = false;\n\n      let errorMsg = '视频加载失败';\n      switch (event.target.error.code) {\n        case event.target.error.MEDIA_ERR_ABORTED:\n          errorMsg = '视频加载被中止';\n          break;\n        case event.target.error.MEDIA_ERR_NETWORK:\n          errorMsg = '网络错误导致视频加载失败';\n          break;\n        case event.target.error.MEDIA_ERR_DECODE:\n          errorMsg = '视频解码失败';\n          break;\n        case event.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n          errorMsg = '视频格式不支持';\n          break;\n        default:\n          errorMsg = '未知错误导致视频无法播放';\n      }\n      this.showMessage(errorMsg, 'error');\n    },\n\n    // 处理登录\n    async handleLogin() {\n      try {\n        this.loading = true;\n        this.loadingText = '登录中...';\n\n        const { data } = await api.post('/sqlLogin', {\n          username: this.loginForm.username,\n          password: this.loginForm.password\n        });\n\n        this.loading = false;\n\n        if (data.success) {\n          localStorage.setItem('currentUser', JSON.stringify({\n            username: data.username,\n            id: data.id\n          }));\n          localStorage.setItem('username', data.username);\n\n          this.showMessage('登录成功', 'success');\n          setTimeout(() => {\n            this.$router.push('/home/message');\n          }, 1000);\n        } else {\n          this.showMessage(data.message || '账号或密码错误', 'error');\n        }\n      } catch (error) {\n        this.loading = false;\n        console.error('登录失败', error);\n        this.showMessage('登录失败，请重试', 'error');\n      }\n    },\n\n    // 处理注册\n    async handleRegister() {\n      try {\n        this.loading = true;\n        this.loadingText = '注册中...';\n\n        const { data } = await api.post('/register', {\n          username: this.registerForm.username,\n          password: this.registerForm.password,\n          email: this.registerForm.email\n        });\n\n        this.loading = false;\n\n        if (data.success) {\n          this.showMessage('注册成功，请登录', 'success');\n          setTimeout(() => {\n            this.isLogin = true;\n          }, 1000);\n        } else {\n          this.showMessage(data.message || '注册失败', 'error');\n        }\n      } catch (error) {\n        this.loading = false;\n        console.error('注册失败', error);\n        this.showMessage('注册失败，请重试', 'error');\n      }\n    },\n\n    showMessage(text, type) {\n      this.message = text;\n      this.messageType = type;\n\n      setTimeout(() => {\n        this.clearMessage();\n      }, 3000);\n    },\n\n    clearMessage() {\n      this.message = '';\n      this.messageType = '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.auth-page {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  box-sizing: border-box;\n  position: relative;\n  color: #fff;\n  overflow: hidden;\n  margin: 0;\n}\n\n/* 视频背景样式 */\n.video-background {\n  position: absolute !important;\n  top: 0 !important;\n  left: 0 !important;\n  width: 100% !important;\n  height: 100% !important;\n  z-index: 0 !important;\n  overflow: hidden !important;\n  display: block !important;\n  opacity: 1 !important;\n}\n\n.video-background.video-visible {\n  opacity: 1 !important;\n}\n\n/* 备用背景图 */\n.fallback-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url('https://picsum.photos/1920/1080');\n  background-size: cover;\n  background-position: center;\n  z-index: 1;\n  display: block !important;\n}\n\n/* 视频元素 */\n#backgroundVideo.background-video {\n  position: absolute !important;\n  top: 0 !important;\n  left: 0 !important;\n  width: 100% !important;\n  height: 100% !important;\n  object-fit: cover !important;\n  z-index: 2 !important;\n  display: block !important;\n  opacity: 1 !important;\n  visibility: visible !important;\n  pointer-events: none !important;\n}\n\n/* 播放提示样式 */\n.play-prompt {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 100 !important;\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0);\n  padding: 25px 35px;\n  border-radius: 12px;\n  transition: all 0.3s ease;\n  opacity: 1 !important;\n  pointer-events: auto !important;\n  backdrop-filter: blur(0);\n}\n\n.play-prompt:hover {\n  background-color: rgba(0, 0, 0, 0.7);\n  transform: translate(-50%, -50%) scale(1.05);\n}\n\n.play-icon {\n  font-size: 60px;\n  margin-bottom: 15px;\n  color: white;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n\n.play-prompt p {\n  margin: 0;\n  font-size: 18px;\n  color: white;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n}\n\n/* 视频遮罩层 - 降低透明度，让背景更清晰可见 */\n.video-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0);\n  /* 降低遮罩透明度 */\n  z-index: 3;\n}\n\n/* 品牌头部样式 - 增强文字可读性 */\n.brand-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 30px;\n  z-index: 20;\n}\n\n.logo {\n  width: 50px;\n  height: 50px;\n  background-color: rgba(22, 119, 255, 0);\n  /* 半透明处理 */\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  box-shadow: 0 2px 15px rgba(22, 119, 255, 0.5);\n  backdrop-filter: blur(3px);\n}\n\n.logo-char {\n  color: white;\n  font-size: 24px;\n  font-weight: bold;\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n}\n\n.brand-name {\n  font-size: 28px;\n  color: white;\n  margin: 0;\n  font-weight: 600;\n  text-shadow: 0 2px 10px rgba(255, 255, 255, 0);\n  /* 增强文字阴影 */\n}\n\n/* 认证容器样式 */\n.auth-container {\n  width: 100%;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  z-index: 20;\n}\n\n/* 登录卡片 - 核心透明效果 */\n.auth-card {\n  background: rgba(255, 255, 255, 0);\n  /* 高度透明的白色背景 */\n  border-radius: 12px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0);\n  /* 柔和阴影 */\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  backdrop-filter: blur(0);\n  /* 毛玻璃效果，增强透明感 */\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  /* 半透明白色边框 */\n}\n\n/* 标签样式 - 适配透明背景 */\n.auth-tabs {\n  display: flex;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.tab-btn {\n  flex: 1;\n  padding: 15px;\n  background: none;\n  border: none;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s;\n  color: rgba(255, 255, 255, 0.9);\n  /* 白色文字 */\n}\n\n.tab-btn.active {\n  color: #ffffff;\n  border-bottom: 2px solid #1677ff;\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.tab-btn:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n\n/* 表单样式 - 适配透明背景 */\n.auth-form {\n  padding: 25px;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.9);\n  /* 白色标签 */\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n/* 输入框样式 - 半透明效果 */\n.form-group input {\n  width: 100%;\n  padding: 12px 15px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 6px;\n  font-size: 14px;\n  box-sizing: border-box;\n  background-color: rgba(255, 255, 255, 0);\n  /* 半透明输入框背景 */\n  color: #ffffff;\n  /* 白色文字 */\n  backdrop-filter: blur(0);\n}\n\n/* 输入框占位符样式 */\n.form-group input::placeholder {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: #1677ff;\n  box-shadow: 0 0 0 3px rgba(22, 119, 255, 0.2);\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n/* 链接样式 */\n.forgot-link {\n  color: #b8dbff;\n  font-size: 14px;\n  text-decoration: none;\n  transition: color 0.3s;\n}\n\n.forgot-link:hover {\n  color: #ffffff;\n  text-decoration: underline;\n}\n\n/* 按钮样式 */\n.submit-btn {\n  width: 100%;\n  padding: 12px;\n  background-color: rgba(22, 119, 255, 0);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: all 0.3s;\n  backdrop-filter: blur(3px);\n}\n\n.submit-btn:hover {\n  background-color: #1677ff;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(22, 119, 255, 0.4);\n}\n\n/* 加载提示 */\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(255, 255, 255, 0);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n  backdrop-filter: blur(5px);\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(255, 255, 255, 0.2);\n  border-top: 4px solid #1677ff;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-bottom: 10px;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.loading-overlay p {\n  color: rgba(255, 255, 255, 0.9);\n}\n\n/* 消息提示 */\n.message-toast {\n  position: absolute;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 10px 20px;\n  border-radius: 4px;\n  color: white;\n  z-index: 20;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  backdrop-filter: blur(5px);\n}\n\n.message-toast.success {\n  background-color: rgba(82, 196, 26, 0);\n}\n\n.message-toast.error {\n  background-color: rgba(255, 77, 79, 0);\n}\n\n.message-toast.warning {\n  background-color: rgba(250, 173, 20, 0);\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  padding: 0;\n}\n\n/* 页脚信息 */\n.footer-info {\n  margin-top: 20px;\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 14px;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);\n}\n</style>","import { render } from \"./LoginView.vue?vue&type=template&id=49433b43&scoped=true\"\nimport script from \"./LoginView.vue?vue&type=script&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&lang=js\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=49433b43&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-49433b43\"]])\n\nexport default __exports__","<template>\n    <!-- 主页面 -->\n    <div id=\"home\">\n    \n        <van-pull-refresh v-model=\"loading\" loading-text=\"刷新中...\" success-text=\"刷新成功\" @refresh=\"onRefresh\">\n            <!-- router-view路由视图，根据路由展示消息、联系人、动态三个界面 -->\n            <!-- keep-alive缓存路由视图，使得切换路由后，消息和联系人页面数据不变 -->\n            <router-view v-slot=\"{ Component }\">\n                <keep-alive>\n                    <component :is=\"Component\" />\n                </keep-alive>\n            </router-view>\n        </van-pull-refresh>\n        \n    </div>\n</template>\n\n<script>\nimport TopBar from '../components/TopBar.vue'\n\nexport default {\n    data() {\n        return {\n            loading: false, //是否在刷新中\n            topbar_title: \"消息\" //顶部栏的标题，默认为“消息”\n        };\n    },\n    methods: {\n        // 刷新界面\n        onRefresh() {\n            setTimeout(() => {\n                this.loading = false;\n            }, 1000);\n        },\n        // 从子组件BottomBar获取数据，设置顶部栏标题\n        setTitle(data) {\n            this.topbar_title = data;\n        }\n    },\n    components: {\n        TopBar,\n        \n    }\n}\n</script>\n\n<style>\n\n</style>","const script = {}\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=53e7c876\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"app-container\">\n    <div class=\"flex justify-between items-center mb-6\">\n      <h1>引导人juli</h1>\n      <button \n        id=\"clearBtn\" \n        @click=\"clearChatHistory\"\n        class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 px-4 py-2 rounded-lg transition-colors\"\n      >\n        清除历史聊天记录\n      </button>\n    </div>\n    \n    <!-- 聊天内容区域 -->\n    <div id=\"results\" class=\"bg-white rounded-xl shadow-lg p-6 mb-6 h-[500px] overflow-y-auto\">\n      <div id=\"result\">\n        <div \n          v-for=\"(message, index) in chatMessages.filter(m => m.role !== 'system')\" \n          :key=\"index\" \n          :class=\"['message', `${message.role}-message`, 'flex', 'mb-4']\"\n        >\n          <img \n            class=\"avatar w-10 h-10 rounded-full mr-3 object-cover\" \n            :src=\"message.role === 'user' ? require('../assets/images/my_profile.jpg') : require('../assets/images/profile_拉菲.jpg')\"\n            :alt=\"`${message.role === 'assistant' ? 'juli avatar' : 'user avatar'}`\" \n          />\n          <div class=\"content flex-1 bg-gray-100 p-4 rounded-lg shadow-sm\">\n            <!-- 显示juli标识但使用assistant角色名 -->\n            <div v-if=\"message.role === 'assistant'\" class=\"text-xs text-pink-500 mb-1\">juli</div>\n            <div v-html=\"parseContent(message.content)\"></div>\n            <div v-if=\"message.role === 'assistant' && showSpeakButton\" class=\"mt-2\">\n              <button \n                @click=\"speakLatestAnswer(message.content)\" \n                class=\"text-primary text-sm hover:underline flex items-center\"\n              >\n                <i class=\"fa-solid fa-volume-up mr-1\"></i> 语音播放\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- 文字输入区域 -->\n    <div class=\"bg-white rounded-xl shadow-lg p-6\">\n      <div id=\"sendVal\" class=\"flex\">\n        <input \n          id=\"question\" \n          type=\"text\" \n          placeholder=\"请输入信息...\" \n          v-model=\"userInput\"\n          @keydown.enter=\"sendMessage\"\n          :disabled=\"isLoading\"\n          class=\"flex-1 px-4 py-3 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-primary/50\"\n        />\n        <button \n          id=\"btn\" \n          @click=\"sendMessage\"\n          :disabled=\"isLoading || !userInput.trim()\"\n          class=\"bg-primary hover:bg-primary/90 text-white px-6 py-3 rounded-r-lg transition-colors\"\n        >\n          {{ isLoading ? '发送中...' : '发送' }}\n        </button>\n      </div>\n    </div>\n    \n    <div id=\"error\" class=\"text-center text-red-500 mt-4\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'InterviewVoiceChat',\n  data() {\n    return {\n      userInput: '',\n      chatMessages: [],\n      isLoading: false,\n      currentAssistantMessage: '',\n      selectedModel: '4.0Ultra',\n      models: {\n        'lite': {\n          domain: 'lite',\n          url: 'wss://spark-api.xf-yun.com/v1.1/chat',\n          maxTokens: 4096\n        },\n        'generalv3': {\n          domain: 'generalv3',\n          url: 'wss://spark-api.xf-yun.com/v3.1/chat',\n          maxTokens: 8192\n        },\n        'pro-128k': {\n          domain: 'pro-128k',\n          url: 'wss://spark-api.xf-yun.com/chat/pro-128k',\n          maxTokens: 4096\n        },\n        'generalv3.5': {\n          domain: 'generalv3.5',\n          url: 'wss://spark-api.xf-yun.com/v3.5/chat',\n          maxTokens: 8192\n        },\n        'max-32k': {\n          domain: 'max-32k',\n          url: 'wss://spark-api.xf-yun.com/chat/max-32k',\n          maxTokens: 8192\n        },\n        '4.0Ultra': {\n          domain: '4.0Ultra',\n          url: 'wss://spark-api.xf-yun.com/v4.0/chat',\n          maxTokens: 8192\n        },\n        'kjwx': {\n          domain: 'kjwx',\n          url: 'wss://spark-openapi-n.cn-huabei-1.xf-yun.com/v1.1/chat_kjwx',\n          maxTokens: 8192\n        }\n      },\n      // 语音相关状态\n      mediaRecorder: null,\n      audioChunks: [],\n      recordingTimer: null,\n      remainingTime: 10,\n      isRecording: false,\n      statusMessage: '状态：准备就绪',\n      transcriptionResult: '',\n      audioUrl: '',\n      isAudioLoading: false,\n      showSpeakButton: true,\n      apiBaseUrl: 'https://117.72.49.76'\n    };\n  },\n  computed: {\n    timerDisplay() {\n      const minutes = Math.floor(this.remainingTime / 60).toString().padStart(2, '0');\n      const seconds = (this.remainingTime % 60).toString().padStart(2, '0');\n      return `${minutes}:${seconds}`;\n    }\n  },\n  mounted() {\n    this.initChatHistory();\n    this.initRecorder();\n  },\n  beforeUnmount() {\n    this.stopRecording();\n  },\n  methods: {\n    // 初始化聊天历史 - 使用assistant角色名但保留juli身份\n    initChatHistory() {\n      let chatHistory = localStorage.getItem('chatHistory');\n      if (chatHistory) {\n        this.chatMessages = JSON.parse(chatHistory).map(item => {\n          // 将可能存在的juli角色转换回assistant以避免API错误\n          if (item.role === 'juli') {\n            item.role = 'assistant';\n          }\n          if (item.content.startsWith(\"data:image/\")) {\n            item.content = \"已经为您生成图片\"\n          }\n          return item\n        });\n      } else {\n        this.chatMessages = [\n          {\n            role: 'system',\n            content: `你是怦然心动女主角juli，同时也是用户的灵犀Vox、多模态面试引导人和比赛网站作品引导人。\n              - 身份定位：保持juli的温柔、聪慧和有洞察力的性格特点\n              - 主要职责：引导用户了解和展示其比赛网站作品，该作品分为三个部分：\n                1. 面试部分：提供面试相关功能和指导\n                2. 虚拟人juli部分：你的虚拟形象展示和互动\n                3. 动态部分：用户发布的博客内容展示与互动\n              - 交流风格：亲切自然，鼓励用户探索作品的各个部分，适时提供引导和解释\n              - 注意事项: 无论用户说什么，都要回复，不能什么都不回复`\n          },\n          {\n            role: 'assistant', // 使用assistant角色名避免API错误\n            content: `你好，${localStorage.getItem('username') || '游客'}！我是juli，很高兴能成为你的灵犀Vox，同时也是你的多模态面试和作品展示引导人。我的主要任务是带你了解这个包含面试、虚拟人互动和动态博客的作品，有什么想了解的吗？`\n          }\n        ];\n      }\n      this.scrollToBottom();\n    },\n    \n    // 清除聊天历史\n    clearChatHistory() {\n      const isClear = window.confirm(\"确定要清除所有聊天记录吗？此操作不可撤销。\");\n      if (isClear) {\n        localStorage.removeItem('chatHistory');\n        this.chatMessages = [];\n        this.initChatHistory();\n      }\n    },\n    \n    // 保存聊天记录\n    saveChatHistory() {\n      localStorage.setItem('chatHistory', JSON.stringify(this.chatMessages));\n    },\n    \n    // 发送消息 - 使用assistant角色名\n    async sendMessage() {\n      const inputVal = this.userInput.trim();\n      if (!inputVal) return;\n      \n      this.isLoading = true;\n      \n      // 保存用户消息\n      const userMessage = {\n        role: 'user',\n        content: inputVal\n      };\n      \n      this.chatMessages.push(userMessage);\n      this.saveChatHistory();\n      this.userInput = '';\n      this.scrollToBottom();\n      \n      // 创建助手消息 - 使用assistant角色名\n      const assistantMessage = {\n        role: 'assistant',\n        content: '<div class=\"loading-dots\"><div></div><div></div><div></div></div>'\n      };\n      \n      this.chatMessages.push(assistantMessage);\n      this.saveChatHistory();\n      this.scrollToBottom();\n      \n      try {\n        // 获取当前选中模型的配置\n        const modelConfig = this.models[this.selectedModel];\n        \n        // 获取连接URL并建立WebSocket连接\n        const url = await this.getWebsocketUrl(modelConfig.url);\n        console.log(\"生成的WebSocket URL:\", url);\n        \n        const ws = new WebSocket(url);\n        \n        // 等待连接建立\n        await new Promise((resolve, reject) => {\n          ws.addEventListener('open', (event) => {\n            console.log('开启连接！！', event);\n            resolve(event);\n          });\n          ws.addEventListener('error', (error) => {\n            console.log('连接发送错误！！', error);\n            reject(error);\n          });\n        });\n        \n        // 准备发送给服务器的参数\n        const params = this.getParams(this.chatMessages);\n        console.log(\"发送的参数:\", params);\n        let answer = \"\";\n        \n        ws.send(JSON.stringify(params));\n        \n        ws.addEventListener(\"message\", async (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            console.log(\"收到消息:\", data);\n            \n            if (data.header.code !== 0) {\n              console.error(\"Error:\", data.header.message);\n              answer = `抱歉，出现错误: ${data.header.message}`;\n              this.updateAssistantMessage(answer);\n              ws.close();\n              return;\n            }\n            \n            if (data.payload.choices.text) {\n              answer += data.payload.choices.text[0].content;\n              // 移除加载动画并更新内容\n              this.updateAssistantMessage(answer);\n              this.scrollToBottom();\n            }\n            \n            if (data.header.status === 2) {\n              // 处理函数调用\n              const function_call = data?.payload?.choices?.text[0]?.function_call;\n              if (function_call) {\n                const name = function_call.name;\n                const params = JSON.parse(function_call.arguments);\n                const target = this.getFunctionByName(name);\n                \n                if (target) {\n                  // 显示正在处理函数的提示\n                  this.updateAssistantMessage(`${answer}<br><br><i>正在处理 ${name} 请求...</i>`);\n                  this.scrollToBottom();\n                  \n                  try {\n                    const res = await target.handler(name, params);\n                    answer = res;\n                  } catch (error) {\n                    answer = `处理 ${name} 请求时出错: ${error.message}`;\n                  }\n                }\n              }\n              \n              // 保存最终回答\n              this.chatMessages[this.chatMessages.length - 1].content = answer;\n              this.saveChatHistory();\n              this.updateAssistantMessage(answer);\n              this.scrollToBottom();\n              \n              // 自动语音播放最新回答\n              this.speakLatestAnswer(answer);\n              \n              setTimeout(() => {\n                ws.close();\n              }, 1000);\n            }\n          } catch (parseError) {\n            console.error(\"解析消息错误:\", parseError);\n            console.log(\"原始消息:\", event.data);\n          }\n        });\n        \n        ws.addEventListener(\"close\", () => {\n          this.isLoading = false;\n        });\n        \n        ws.addEventListener(\"error\", (error) => {\n          console.error(\"WebSocket error:\", error);\n          this.updateAssistantMessage(\"抱歉，连接出现错误，请重试。\");\n          this.isLoading = false;\n        });\n        \n      } catch (error) {\n        console.error(\"Error:\", error);\n        this.updateAssistantMessage(\"抱歉，发送消息时出现错误，请重试。\");\n        this.isLoading = false;\n      }\n    },\n    \n    // 语音说出最新回答 - 调整为juli的语音风格\n    speakLatestAnswer(content) {\n      // 检查浏览器是否支持语音合成API\n      if ('speechSynthesis' in window) {\n        // 停止当前正在播放的语音\n        window.speechSynthesis.cancel();\n        \n        // 移除HTML标签，只保留文本内容\n        const textContent = content.replace(/<[^>]*>/g, '');\n        \n        // 创建语音合成实例\n        const utterance = new SpeechSynthesisUtterance(textContent);\n        \n        // 设置语音参数 - 调整参数使声音更符合juli的角色特点\n        utterance.lang = 'zh-CN'; // 中文\n        utterance.rate = 0.9;     // 语速稍慢，更显温柔\n        utterance.pitch = 1.1;    // 音调稍高，更显亲切\n        utterance.volume = 1.0;   // 音量\n        \n        // 开始语音合成\n        window.speechSynthesis.speak(utterance);\n        \n        // 更新状态\n        this.showStatus('状态：正在语音播放...', 'normal');\n      } else {\n        this.showError('抱歉，您的浏览器不支持语音合成功能');\n      }\n    },\n    \n    // 初始化录音功能\n    initRecorder() {\n      // 检查浏览器兼容性\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        this.showStatus('错误：您的浏览器不支持录音功能', 'error');\n        document.getElementById('start-record-btn')?.setAttribute('disabled', true);\n      }\n    },\n    \n    // 开始录音\n    startRecording() {\n      if (this.isRecording) return;\n      \n      this.isRecording = true;\n      this.showStatus('状态：正在录音...', 'recording');\n      \n      // 重置计时器\n      this.remainingTime = 10;\n      \n      // 开始录制\n      this.audioChunks = [];\n      \n      navigator.mediaDevices.getUserMedia({ audio: true })\n        .then(stream => {\n          this.mediaRecorder = new MediaRecorder(stream);\n          \n          this.mediaRecorder.addEventListener('dataavailable', event => {\n            if (event.data.size > 0) {\n              this.audioChunks.push(event.data);\n            }\n          });\n          \n          this.mediaRecorder.addEventListener('stop', () => {\n            // 停止流\n            stream.getTracks().forEach(track => track.stop());\n            \n            // 创建音频文件\n            const audioBlob = new Blob(this.audioChunks, { type: 'audio/wav' });\n            \n            // 发送到服务器\n            this.sendAudioToServer(audioBlob);\n          });\n          \n          this.mediaRecorder.start();\n          \n          // 设置计时器\n          this.recordingTimer = setInterval(() => {\n            this.remainingTime--;\n            if (this.remainingTime <= 0) {\n              this.stopRecording();\n            }\n          }, 1000);\n          \n        })\n        .catch(error => {\n          console.error('录音错误:', error);\n          this.showStatus(`错误：无法访问麦克风 - ${error.message}`, 'error');\n          this.isRecording = false;\n        });\n    },\n    \n    // 停止录音\n    stopRecording() {\n      this.isRecording = false;\n      \n      // 清除计时器\n      if (this.recordingTimer) {\n        clearInterval(this.recordingTimer);\n        this.recordingTimer = null;\n      }\n      \n      // 停止录制\n      if (this.mediaRecorder && this.mediaRecorder.state !== 'inactive') {\n        this.mediaRecorder.stop();\n        this.mediaRecorder = null;\n      }\n      \n      this.showStatus('状态：录音已停止', 'normal');\n    },\n    \n    // 发送音频到服务器\n    sendAudioToServer(audioData) {\n      this.showStatus('状态：正在上传音频...', 'uploading');\n      this.isLoading = true;\n      \n      const formData = new FormData();\n      const fileName = `audio_${Date.now()}.wav`;\n      formData.append('file', audioData, fileName);\n      \n      fetch(`${this.apiBaseUrl}/api/transcribe`, {\n        method: 'POST',\n        body: formData\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP错误! 状态码: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          if (data.status === 'success') {\n            this.showStatus('状态：转写完成', 'success');\n            this.transcriptionResult = data.text;\n            \n            // 将语音转文字结果作为用户消息发送\n            if (this.transcriptionResult) {\n              this.userInput = this.transcriptionResult;\n              this.sendMessage();\n            }\n          } else {\n            this.showStatus(`状态：错误 - ${data.error || '未知错误'}`, 'error');\n          }\n        })\n        .catch(error => {\n          console.error('转写错误:', error);\n          this.showStatus(`状态：错误 - ${error.message}`, 'error');\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n    \n    // 更新助手消息\n    updateAssistantMessage(content) {\n      this.chatMessages[this.chatMessages.length - 1].content = content;\n    },\n    \n    // 解析内容（支持代码高亮和图片显示）\n    parseContent(content) {\n      // 首先检查是否是Base64图片数据\n      if (this.isBase64Image(content)) {\n        return `<img src=\"${content}\" alt=\"Generated image\" style=\"max-width:100%;\"/>`;\n      }\n\n      // 否则当作普通文本处理，解析其中的代码块\n      return this.parseCodeBlocks(content);\n    },\n    \n    // 检查是否是Base64图片\n    isBase64Image(str) {\n      return str.startsWith('data:image/');\n    },\n    \n    // 解析代码块\n    parseCodeBlocks(content) {\n      // 匹配代码块的正则表达式\n      const codeBlockRegex = /```(\\w+)?\\s*([\\s\\S]*?)```/g;\n      return content.replace(codeBlockRegex, (match, lang, code) => {\n        // 如果指定了语言，则使用该语言，否则默认使用 'javascript'\n        const language = lang || \"javascript\";\n        // 高亮代码\n        const highlightedCode = this.highlightCode(code.trim(), language);\n        // 返回包裹在 <pre> 和 <code> 标签中的代码块\n        return `<pre><span>${language}<span><hr style='margin:10px 0;border-top: 1px solid blue;'/><code class=\"language-${language}\">${highlightedCode}</code></pre>`;\n      });\n    },\n    \n    // 高亮代码\n    highlightCode(code, language) {\n      if (language === \"javascript\") {\n        // 1. 匹配字符串\n        code = code.replace(\n          /\"([^\"]*)\"|'([^']*)'/g,\n          (match, p1, p2) => `<span class=\"string\">\"${p1 || p2}\"</span>`\n        );\n\n        // 2. 匹配关键字\n        code = code.replace(\n          /\\b(function|let|const|var|if|else|return)\\b/g,\n          '<span class=\"keyword\">$&</span>'\n        );\n\n        // 3. 匹配函数名\n        code = code.replace(\n          /\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(/g,\n          (match, p1) => `<span class=\"function\">${p1}</span>(`\n        );\n\n        // 4. 匹配 console.log\n        code = code.replace(\n          /\\b(console\\.log)\\b/g,\n          '<span class=\"function\">$&</span>'\n        );\n\n        // 5. 匹配单行注释\n        code = code.replace(\n          /\\/\\/.*$/gm,\n          '<span class=\"comment\">$&</span>'\n        );\n\n        // 6. 匹配多行注释\n        code = code.replace(\n          /\\/\\*[\\s\\S]*?\\*\\//g,\n          '<span class=\"comment\">$&</span>'\n        );\n\n        // 7. 匹配数字\n        code = code.replace(\n          /\\b(\\d+)\\b/g,\n          '<span class=\"number\">$&</span>'\n        );\n      }\n      return code;\n    },\n    \n    // 平滑滚动到底部\n    scrollToBottom() {\n      const resultsDiv = document.getElementById('results');\n      if (resultsDiv) {\n        resultsDiv.scrollTo({\n          top: resultsDiv.scrollHeight,\n          behavior: 'smooth'\n        });\n      }\n    },\n    \n    // 鉴权url地址\n    async getWebsocketUrl(hostUrl) {\n      // 硬编码鉴权信息\n      const APPID = '86f989e0';\n      const APISecret = 'YjczOWNiZTYxZWNhY2M5ZjI3OTE5YTJi';\n      const APIKey = '7264913c8b3035b87979668da32f762a';\n      \n      const host = new URL(hostUrl).host;\n      const pathname = new URL(hostUrl).pathname;\n      let apiKeyName = \"api_key\";\n      let date = new Date().toGMTString();\n      let algorithm = \"hmac-sha256\";\n      let headers = \"host date request-line\";\n      \n      console.log(\"生成签名的原始数据:\", {\n        host,\n        date,\n        pathname\n      });\n      \n      // 生成签名\n      let signatureOrigin = `host: ${host}\\ndate: ${date}\\nGET ${pathname} HTTP/1.1`;\n      \n      try {\n        let signature = await this.signatureToHmacSHA256ToBase64(signatureOrigin, APISecret);\n        let authorizationOrigin = `${apiKeyName}=\"${APIKey}\", algorithm=\"${algorithm}\", headers=\"${headers}\", signature=\"${signature}\"`;\n        let authorization = btoa(authorizationOrigin);\n        \n        // 将空格编码\n        let url = `${hostUrl}?authorization=${authorization}&date=${encodeURI(date)}&host=${host}`;\n        return url;\n      } catch (error) {\n        console.error(\"生成签名出错:\", error);\n        throw error;\n      }\n    },\n    \n    // HMAC-SHA256签名\n    async signatureToHmacSHA256ToBase64(origin, secret) {\n      // 使用浏览器内置的加密API替代CryptoJS\n      const encoder = new TextEncoder();\n      const data = encoder.encode(origin);\n      const key = encoder.encode(secret);\n      \n      try {\n        const importedKey = await window.crypto.subtle.importKey(\n          \"raw\",\n          key,\n          { name: \"HMAC\", hash: \"SHA-256\" },\n          false,\n          [\"sign\"]\n        );\n        \n        const signatureArrayBuffer = await window.crypto.subtle.sign(\"HMAC\", importedKey, data);\n        \n        // 将ArrayBuffer转换为Base64\n        const bytes = new Uint8Array(signatureArrayBuffer);\n        let result = '';\n        for (const byte of bytes) {\n          result += String.fromCharCode(byte);\n        }\n        return btoa(result);\n      } catch (error) {\n        console.error(\"计算HMAC-SHA256签名出错:\", error);\n        throw error;\n      }\n    },\n    \n    // 获取请求参数\n    getParams(textList) {\n      let functions = this.getFunctions();\n      let modelConfig = this.models[this.selectedModel];\n      \n      let params = {\n        \"header\": {\n          \"app_id\": '86f989e0',\n          \"uid\": 'red润'\n        },\n        \"parameter\": {\n          \"chat\": {\n            \"domain\": modelConfig.domain,\n            \"temperature\": 0.5,\n            \"max_tokens\": modelConfig.maxTokens,\n          }\n        },\n        \"payload\": {\n          \"message\": {\n            \"text\": textList\n          },\n          \"functions\": {\n            \"text\": functions\n          }\n        }\n      };\n      \n      console.log(\"生成的请求参数:\", params);\n      return params;\n    },\n    \n    // 获取所有支持的函数\n    getFunctions() {\n      return [\n        this.weatherFunction,\n        this.baiduQuestions,\n        this.imgQuestions,\n        // 新增作品导航函数\n        this.navigateProjectSection\n      ];\n    },\n    \n    // 通过名称获取特定的function\n    getFunctionByName(name) {\n      const functions = this.getFunctions();\n      return functions.find(func => func.name === name);\n    },\n    \n    // 新增作品导航函数\n    navigateProjectSection: {\n      name: \"作品导航\",\n      description: \"导航到作品的不同部分，包括面试、虚拟人juli和动态博客\",\n      parameters: {\n        type: \"object\",\n        properties: {\n          section: {\n            type: \"string\",\n            enum: [\"面试\", \"虚拟人juli\", \"动态博客\"],\n            description: \"要导航到的作品部分\"\n          }\n        },\n        required: [\"section\"]\n      },\n      handler: async (name, params) => {\n        console.log(\"导航到作品部分:\", params.section);\n        // 这里可以添加实际导航逻辑，如路由跳转\n        // 示例：this.$router.push(`/project/${params.section}`);\n        \n        return `已为您导航到作品的「${params.section}」部分。这部分主要包含...`;\n      }\n    },\n    \n    // 天气查询函数\n    weatherFunction: {\n      name: \"天气查询\",\n      description: \"天气插件可以提供天气相关信息。你可以提供指定的地点信息、指定的时间点或者时间段信息，来精准检索到天气信息。\",\n      parameters: {\n        type: \"object\",\n        properties: {\n          location: {\n            type: \"string\",\n            description: \"地点，比如北京。\"\n          },\n          date: {\n            type: \"string\",\n            description: \"日期。\"\n          }\n        },\n        required: [\"location\"]\n      },\n      handler: async (name, params) => {\n        console.log(params);\n        let location = params.location;\n        if (location == \"北京\") { window.open(\"https://weather.cma.cn/web/weather/54511.html\") }\n        else if (location == \"山东\") {\n          window.open(\"https://weather.cma.cn/web/weather/013462.html\")\n        }\n        return `已为您处理任务：${name}，参数：${JSON.stringify(params)}`\n      }\n    },\n    \n    // 百度搜索函数\n    baiduQuestions: {\n      name: \"百度搜索\",\n      description: \"百度可以提供需要的的相关信息。你可以提供指定的用户关键词语，来精准检索到目标。\",\n      parameters: {\n        type: \"object\",\n        properties: {\n          username: {\n            type: \"string\",\n            description: \"关键词，比如red润\"\n          }\n        },\n        required: [\"username\"]\n      },\n      handler: async (name, params) => {\n        let username = params.username;\n        // 构建百度搜索的 URL\n        let url = 'https://www.baidu.com/s?wd=' + encodeURIComponent(username);\n\n        // 使用 window.open 打开链接，_blank 表示在新标签页中打开\n        window.open(url, '_blank');\n        return `已为您处理任务：${name}，参数：${JSON.stringify(params)}`\n      }\n    },\n    \n    // 图片生成函数\n    imgQuestions: {\n      name: \"图片生成\",\n      description: \"根据详细描述生成图像\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"prompt\": {\n            \"type\": \"string\",\n            \"description\": \"图像的详细描述，需包含主体、风格、构图、色彩等关键信息。例如：'一座被云雾环绕的雪山，山脚下有清澈湖泊，采用水墨画风格，点缀少量青绿色'\"\n          },\n          \"style\": {\n            \"type\": \"string\",\n            \"enum\": [\"写实\", \"卡通\", \"水墨\", \"油画\", \"水彩\", \"数字艺术\", \"像素风\", \"动漫\"],\n            \"description\": \"生成图像的艺术风格\",\n            \"default\": \"写实\"\n          },\n          \"aspect_ratio\": {\n            \"type\": \"string\",\n            \"enum\": [\"16:9\", \"4:3\", \"1:1\", \"9:16\", \"3:4\"],\n            \"description\": \"生成图像的长宽比例\",\n            \"default\": \"16:9\"\n          },\n          \"color_palette\": {\n            \"type\": \"string\",\n            \"description\": \"可选：指定主色调或配色方案（如'冷色调，以蓝绿为主'）\",\n            \"default\": \"无特定要求\"\n          }\n        },\n        \"required\": [\"prompt\"]\n      },\n      handler: async (name, params) => {\n        console.log(params);\n        let prompt = params?.prompt || params?.content[0];\n        \n        // 这里是模拟图片生成，实际应用中需要替换为真实的图片生成API\n        // 生成一个示例图片URL\n        const width = 800;\n        const height = 450;\n        const randomId = Math.floor(Math.random() * 1000);\n        const imgUrl = `https://picsum.photos/id/${randomId}/${width}/${height}`;\n        \n        // 将图片转换为Base64格式（实际应用中可能需要通过API获取真实的Base64图片）\n        return new Promise((resolve) => {\n          const img = new Image();\n          img.crossOrigin = 'anonymous';\n          img.onload = () => {\n            const canvas = document.createElement('canvas');\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL('image/jpeg');\n            resolve(dataURL);\n          };\n          img.src = imgUrl;\n        });\n      }\n    },\n    \n    // 显示状态\n    showStatus(message, type = 'normal') {\n      this.statusMessage = message;\n      \n      const statusContainer = document.getElementById('status-container');\n      \n      // 移除所有状态类\n      statusContainer.classList.remove('bg-green-50', 'bg-red-50', 'bg-blue-50', 'border-green-200', 'border-red-200', 'border-blue-200');\n      \n      // 添加新的状态类\n      if (type === 'success') {\n        statusContainer.classList.add('bg-green-50', 'border-green-200');\n      } else if (type === 'error') {\n        statusContainer.classList.add('bg-red-50', 'border-red-200');\n      } else if (type === 'recording' || type === 'uploading') {\n        statusContainer.classList.add('bg-blue-50', 'border-blue-200');\n      }\n    },\n    \n    // 显示错误\n    showError(message) {\n      const errorDiv = document.getElementById('error');\n      errorDiv.textContent = message;\n      errorDiv.style.display = 'block';\n      errorDiv.style.color = '#f56565';\n    },\n    \n    // 显示成功消息\n    showSuccess(message) {\n      const errorDiv = document.getElementById('error');\n      errorDiv.textContent = message;\n      errorDiv.style.display = 'block';\n      errorDiv.style.color = '#48bb78';\n    },\n    \n    // 复制到剪贴板\n    copyToClipboard() {\n      const text = this.transcriptionResult.trim();\n      if (!text || text === '转写结果将显示在这里...') {\n        this.showError('状态：没有可复制的内容');\n        return;\n      }\n      \n      navigator.clipboard.writeText(text)\n        .then(() => {\n          this.showSuccess('已复制到剪贴板');\n          \n          // 临时更改复制按钮文本\n          const copyBtn = document.getElementById('copy-btn');\n          const originalText = copyBtn.innerHTML;\n          copyBtn.innerHTML = '<i class=\"fa-solid fa-check\"></i> <span>已复制</span>';\n          \n          setTimeout(() => {\n            copyBtn.innerHTML = originalText;\n          }, 2000);\n        })\n        .catch(err => {\n          this.showError('复制失败');\n          console.error('复制错误:', err);\n        });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.app-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Inter', system-ui, sans-serif;\n}\n\n.message {\n  display: flex;\n  margin-bottom: 15px;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  object-fit: cover;\n}\n\n.content {\n  background-color: #f0f0f0;\n  padding: 10px;\n  border-radius: 8px;\n  max-width: 80%;\n  white-space: pre-wrap;\n}\n\n/* 为juli的消息设置不同的背景色，体现角色特点 */\n.assistant-message .content {\n  background-color: #fce4ec; /* 浅粉色调，体现juli的温柔特质 */\n}\n\n.user-message .content {\n  background-color: #e6f7ff;\n}\n\n.gradient-bg {\n  background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);\n}\n\n.hover-scale {\n  transition: transform 0.2s ease-in-out;\n}\n\n.hover-scale:hover {\n  transform: scale(1.05);\n}\n\n.loading-dots {\n  display: flex;\n  justify-content: center;\n}\n\n.loading-dots div {\n  width: 8px;\n  height: 8px;\n  background-color: #f48fb1; /* 粉色调的加载点，与juli角色匹配 */\n  border-radius: 50%;\n  margin: 0 3px;\n  animation: bounce 1.4s infinite ease-in-out both;\n}\n\n.loading-dots div:nth-child(1) { animation-delay: -0.32s; }\n.loading-dots div:nth-child(2) { animation-delay: -0.16s; }\n\n@keyframes bounce {\n  0%, 80%, 100% { transform: scale(0); }\n  40% { transform: scale(1); }\n}\n\npre {\n  background-color: #f5f5f5;\n  padding: 10px;\n  border-radius: 4px;\n  overflow-x: auto;\n  margin: 10px 0;\n}\n\ncode {\n  font-family: Consolas, Monaco, 'Andale Mono', monospace;\n  font-size: 0.9em;\n}\n\n.string { color: #d14; }\n.keyword { color: #0086b3; font-weight: bold; }\n.function { color: #900; font-weight: bold; }\n.comment { color: #998; font-style: italic; }\n.number { color: #099; }\n</style>\n","import { render } from \"./MessageCom.vue?vue&type=template&id=7f006762&scoped=true\"\nimport script from \"./MessageCom.vue?vue&type=script&lang=js\"\nexport * from \"./MessageCom.vue?vue&type=script&lang=js\"\n\nimport \"./MessageCom.vue?vue&type=style&index=0&id=7f006762&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7f006762\"]])\n\nexport default __exports__","<template>\n  <div class=\"container\">\n    <h1>虚拟人juli</h1>\n\n    <!-- 音频生成部分 -->\n    <div class=\"section\">\n      <h2>输入您想和虚拟人juli聊的内容</h2>\n      <form @submit.prevent=\"handleAudioGenerate\">\n        <div class=\"form-group\">\n          <label for=\"promptText\"></label>\n          <textarea \n            id=\"promptText\" \n            v-model=\"promptText\"\n            placeholder=\"输入您想和虚拟人聊的内容，例如：解释神经网络的概念\" \n            required\n          ></textarea>\n        </div>\n        <button \n          type=\"submit\" \n          id=\"audioGenerateButton\"\n          :disabled=\"isAudioGenerating\"\n        >\n          发送\n        </button>\n        <span id=\"audioLoading\" class=\"loading\" v-if=\"isAudioGenerating\"></span>\n      </form>\n      <div \n        id=\"chatResponse\" \n        class=\"api-response\" \n        v-if=\"showChatResponse\"\n      >\n        <strong>AI面试官回复：</strong>\n        <div id=\"chatResponseContent\">{{ chatResponseText }}</div>\n      </div>\n      <div \n        id=\"audioResult\" \n        class=\"result\" \n        v-if=\"showAudioResult\"\n      >\n        {{ audioResultText }}\n      </div>\n      <div class=\"preview\" id=\"audioPreview\" v-html=\"audioPreviewHtml\"></div>\n    </div>\n\n    <!-- 视频处理部分 -->\n    <div class=\"section\">\n      <h2>视频回答</h2>\n      <form @submit.prevent=\"handleProcessVideo\">\n        <div class=\"form-group\">\n          <label for=\"minResolution\">最小分辨率</label>\n          <select \n            id=\"minResolution\" \n            v-model=\"minResolution\"\n          >\n            <option value=\"2\">2（默认）</option>\n            <option value=\"1\">1</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"ifRes\">固定分辨率</label>\n          <select \n            id=\"ifRes\" \n            v-model=\"ifRes\"\n          >\n            <option value=\"false\">否（默认）</option>\n            <option value=\"true\">是</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"steps\">思考速度</label>\n          <select \n            id=\"steps\" \n            v-model=\"steps\"\n          >\n            <option value=\"4\">4（默认）</option>\n            <option value=\"2\">2</option>\n            <option value=\"6\">6</option>\n            <option value=\"8\">8</option>\n          </select>\n        </div>\n        <button \n          type=\"submit\" \n          id=\"processButton\"\n          :disabled=\"!canProcessVideo\"\n        >\n          开始处理\n        </button>\n        <button \n          type=\"button\" \n          id=\"cancelButton\"\n          @click=\"handleCancelProcessing\"\n          :disabled=\"!isProcessing\"\n        >\n          取消处理\n        </button>\n        <span id=\"processLoading\" class=\"loading\" v-if=\"isProcessing\"></span>\n      </form>\n      \n      <div \n        id=\"processStatus\" \n        class=\"result\" \n        v-if=\"showProcessStatus\"\n      >\n        {{ processStatusText }}\n      </div>\n      \n      <div class=\"progress-container\">\n        <div \n          id=\"progressBar\" \n          class=\"progress-bar\"\n          :style=\"{ width: progressBarWidth + '%' }\"\n        ></div>\n      </div>\n      \n      <!-- 可选视频预览部分 -->\n      <div class=\"optional-preview\">\n        <h3>等待期间可观看的视频</h3>\n        <p>等待处理时，您可以观看此视频：</p>\n        <button \n          id=\"showPreviewVideo\" \n          type=\"button\"\n          @click=\"togglePreviewVideo\"\n        >\n          {{ showPreviewVideo ? '隐藏预览视频' : '显示预览视频' }}\n        </button>\n        <div \n          id=\"previewVideoContainer\" \n          v-if=\"showPreviewVideo\"\n          style=\"margin-top: 10px;\"\n        >\n          <video controls :src=\"optionalVideoUrl\">\n            您的浏览器不支持视频播放\n          </video>\n          <div class=\"file-info\">\n            视频文件：julibzhan.mp4\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"preview\" id=\"outputVideoPreview\" v-html=\"videoPreviewHtml\"></div>\n    </div>\n\n    <!-- 调试信息部分 -->\n    <div class=\"section\">\n      <h2>调试信息</h2>\n      <div id=\"debugInfo\" class=\"debug-info\">{{ debugInfo }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'LipSyncGenerator',\n  data() {\n    return {\n      // 配置\n      HTTPS_BASE_URL: 'https://123.56.203.202',\n      PROXY_FILE_PATH: '/proxy_gradio_file/',\n      RECENT_FILES_PATH: '/proxy_gradio_file/recent',\n      PROCESS_VIDEO_PATH: '/lip_sync/process_video',\n      CHAT_API_PATH: '/api/chat',\n      CHAT_RESULT_PATH: '/api/chat/result',\n      TTS_API_PATH: '/gpt-sovites/tts_english',\n      GET_LATEST_AUDIO_URL: '/gpt-sovites/get_latest_audio_url',\n      POLL_INTERVAL: 3000,\n      MAX_POLL_ATTEMPTS: 600,\n      AUDIO_POLL_INTERVAL: 2000,\n      MAX_AUDIO_ATTEMPTS: 180,\n      CHAT_POLL_INTERVAL: 2000,\n      MAX_CHAT_ATTEMPTS: 120,\n      OPTIONAL_VIDEO_URL: 'https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Cjulibzhan.mp4',\n\n      // 表单数据\n      promptText: '解释监督学习和无监督学习之间的区别，并分别提供例子',\n      minResolution: '2',\n      ifRes: 'false',\n      steps: '4',\n\n      // 状态\n      chatResponseText: '',\n      showChatResponse: false,\n      audioUrl: null,\n      audioPreviewHtml: '',\n      isAudioGenerating: false,\n      audioResultText: '',\n      showAudioResult: false,\n      audioFolderPrefix: null,\n      currentTaskId: null,\n      \n      isProcessing: false,\n      processStartTime: null,\n      pollAttempts: 0,\n      pollTimer: null,\n      abortController: null,\n      processStatusText: '',\n      showProcessStatus: false,\n      progressBarWidth: 0,\n      videoPreviewHtml: '',\n      showPreviewVideo: false,\n      \n      debugInfo: '',\n      optionalVideoUrl: 'https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Cjulibzhan.mp4'\n    }\n  },\n  computed: {\n    canProcessVideo() {\n      return !this.isAudioGenerating && !!this.audioUrl && !this.isProcessing\n    }\n  },\n  methods: {\n    showDebugInfo(message) {\n      const timestamp = new Date().toISOString();\n      this.debugInfo += `[${timestamp}] ${message}\\n`;\n      // 自动滚动到底部\n      this.$nextTick(() => {\n        const el = document.getElementById('debugInfo');\n        if (el) el.scrollTop = el.scrollHeight;\n      });\n    },\n\n    fetchWithTimeout(url, options = {}, timeout = 500000) {\n      return Promise.race([\n        fetch(url, options),\n        new Promise((_, reject) => \n          setTimeout(() => reject(new Error('请求超时')), timeout)\n        )\n      ]);\n    },\n\n    startAudioPolling(folderPrefix) {\n      let attempts = 0;\n      \n      const pollTimer = setInterval(async () => {\n        attempts++;\n        this.showDebugInfo(`轮询音频，尝试 ${attempts}`);\n        \n        try {\n          const url = new URL(this.GET_LATEST_AUDIO_URL, this.HTTPS_BASE_URL).href;\n          const response = await this.fetchWithTimeout(url, { method: 'GET' });\n          \n          const result = await response.json();\n          this.showDebugInfo(`轮询结果: ${JSON.stringify(result)}`);\n          \n          if (result.status === 'success') {\n            if (result.folder_path.includes(folderPrefix)) {\n              clearInterval(pollTimer);\n              this.audioUrl = result.audio_url;\n              \n              this.audioPreviewHtml = `\n                <p>juli的语音回答：</p>\n                <audio controls src=\"${this.audioUrl}\"></audio>\n                <div class=\"file-info\">\n                    思考完成时间：${result.created_time}<br>\n                    <a href=\"${this.audioUrl}\" download=\"generated_audio.wav\">下载</a>\n                </div>\n              `;\n              \n              // 尝试获取音频时长\n              this.$nextTick(() => {\n                const audioElement = document.querySelector('#audioPreview audio');\n                if (audioElement) {\n                  audioElement.onloadedmetadata = () => {\n                    const duration = audioElement.duration.toFixed(2);\n                    const fileInfo = document.querySelector('#audioPreview .file-info');\n                    if (fileInfo) {\n                      fileInfo.innerHTML = `\n                        生成时间：${result.created_time}<br>\n                        音频长度：${duration} 秒<br>\n                        <a href=\"${this.audioUrl}\" download=\"generated_audio.wav\">下载音频</a>\n                      `;\n                    }\n                  };\n                }\n              });\n              \n              this.audioResultText = 'juli思考成功';\n              this.isAudioGenerating = false;\n              this.showAudioResult = true;\n            } else {\n              this.showDebugInfo(`等待目标文件夹 ${folderPrefix}...`);\n            }\n            \n          } else if (result.status === 'pending') {\n            this.audioResultText = `正在生成音频（${attempts}/${this.MAX_AUDIO_ATTEMPTS}）...`;\n            this.showAudioResult = true;\n            \n          } else {\n            clearInterval(pollTimer);\n            this.audioResultText = `轮询错误：${result.message}`;\n            this.showAudioResult = true;\n            this.isAudioGenerating = false;\n          }\n          \n          if (attempts >= this.MAX_AUDIO_ATTEMPTS) {\n            clearInterval(pollTimer);\n            this.audioResultText = '音频生成超时，请重试';\n            this.showAudioResult = true;\n            this.isAudioGenerating = false;\n          }\n          \n        } catch (error) {\n          this.showDebugInfo(`轮询错误：${error.message}`);\n          if (attempts >= this.MAX_AUDIO_ATTEMPTS) {\n            clearInterval(pollTimer);\n            this.audioResultText = `轮询失败：${error.message}`;\n            this.showAudioResult = true;\n            this.isAudioGenerating = false;\n          }\n        }\n      }, this.AUDIO_POLL_INTERVAL);\n    },\n\n    pollForChatResult(taskId) {\n      return new Promise((resolve, reject) => {\n        let attempts = 0;\n        \n        const poll = async () => {\n          attempts++;\n          this.showDebugInfo(`轮询聊天结果（任务ID：${taskId}），尝试 ${attempts}`);\n          \n          try {\n            const resultUrl = new URL(`${this.CHAT_RESULT_PATH}/${taskId}`, this.HTTPS_BASE_URL).href;\n            const response = await this.fetchWithTimeout(resultUrl, { method: 'GET' }, 10000);\n            \n            if (!response.ok) {\n              throw new Error(`结果API错误：${response.status} ${response.statusText}`);\n            }\n            \n            const resultData = await response.json();\n            this.showDebugInfo(`聊天结果响应：${JSON.stringify(resultData)}`);\n            \n            if (resultData.status === 'processing') {\n              this.audioResultText = `juli正在思考中（${attempts}/${this.MAX_CHAT_ATTEMPTS}）...`;\n              this.showAudioResult = true;\n              \n              if (attempts >= this.MAX_CHAT_ATTEMPTS) {\n                reject(new Error('等待聊天响应超时'));\n                return;\n              }\n              \n              setTimeout(poll, this.CHAT_POLL_INTERVAL);\n              \n            } else if (resultData.status === 'success') {\n              resolve(resultData.result);\n              \n            } else if (resultData.status === 'error') {\n              reject(new Error(`处理错误：${resultData.result}`));\n              \n            } else {\n              reject(new Error(`未知状态：${resultData.status}`));\n            }\n            \n          } catch (error) {\n            this.showDebugInfo(`聊天结果轮询错误：${error.message}`);\n            \n            if (attempts >= this.MAX_CHAT_ATTEMPTS) {\n              reject(new Error(`经过 ${this.MAX_CHAT_ATTEMPTS} 次尝试后轮询失败：${error.message}`));\n            } else {\n              setTimeout(poll, this.CHAT_POLL_INTERVAL);\n            }\n          }\n        };\n        \n        poll();\n      });\n    },\n\n    async handleAudioGenerate() {\n      const userInput = this.promptText.trim();\n      if (!userInput) return;\n      \n      const interviewerPrompt = `You are a senior AI technical interviewer conducting a technical interview with a candidate. Based on the following input, provide a professional technical response in ENGLISH ONLY. Focus on areas related to artificial intelligence, machine learning, deep learning, and maintain professional and targeted interview tone: ${userInput}`;\n      \n      this.isAudioGenerating = true;\n      this.currentTaskId = null;\n      this.audioResultText = '正在向AI发送请求...';\n      this.showAudioResult = true;\n      this.showChatResponse = false;\n      this.audioPreviewHtml = '';\n      \n      try {\n        this.showDebugInfo(`调用聊天API作为AI技术面试官：${this.CHAT_API_PATH}`);\n        const chatUrl = new URL(this.CHAT_API_PATH, this.HTTPS_BASE_URL).href;\n        \n        const chatResponse = await this.fetchWithTimeout(\n          chatUrl,\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ prompt: interviewerPrompt })\n          },\n          30000\n        );\n        \n        if (!chatResponse.ok) {\n          throw new Error(`聊天API错误：${chatResponse.status} ${chatResponse.statusText}`);\n        }\n        \n        const chatResult = await chatResponse.json();\n        this.showDebugInfo(`聊天API返回：${JSON.stringify(chatResult)}`);\n        \n        if (chatResult.status !== 'success' || !chatResult.task_id) {\n          throw new Error(`聊天API返回无效结果：${JSON.stringify(chatResult)}`);\n        }\n        \n        this.currentTaskId = chatResult.task_id;\n        this.audioResultText = `收到任务ID：${this.currentTaskId}，等待响应...`;\n        \n        const aiResponse = await this.pollForChatResult(this.currentTaskId);\n        \n        this.chatResponseText = aiResponse;\n        this.showChatResponse = true;\n        \n        this.showDebugInfo(`调用TTS API：${this.TTS_API_PATH}`);\n        const ttsUrl = new URL(this.TTS_API_PATH, this.HTTPS_BASE_URL).href;\n        \n        const ttsData = {\n          text: this.chatResponseText,\n          reference_text: this.chatResponseText\n        };\n        \n        const ttsResponse = await this.fetchWithTimeout(\n          ttsUrl,\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(ttsData)\n          },\n          600000\n        );\n        \n        if (!ttsResponse.ok) {\n          throw new Error(`TTS API错误：${ttsResponse.status} ${ttsResponse.statusText}`);\n        }\n        \n        const ttsResult = await ttsResponse.json();\n        this.showDebugInfo(`TTS API返回：${JSON.stringify(ttsResult)}`);\n        \n        if (ttsResult.status !== 'success') {\n          throw new Error(`音频合成失败：${ttsResult.message}`);\n        }\n        \n        this.audioResultText = '音频合成中，等待结果...';\n        this.audioFolderPrefix = ttsResult.folder_prefix;\n        this.startAudioPolling(ttsResult.folder_prefix);\n        \n      } catch (error) {\n        this.audioResultText = `错误：${error.message}`;\n        this.showDebugInfo(`音频生成失败：${error.message}`);\n        this.isAudioGenerating = false;\n        this.currentTaskId = null;\n      }\n    },\n\n    pollForRecentFiles() {\n      if (this.pollAttempts >= this.MAX_POLL_ATTEMPTS) {\n        this.processStatusText = `处理超时，无法在 ${(this.MAX_POLL_ATTEMPTS * this.POLL_INTERVAL / 1000).toFixed(0)} 秒内生成视频`;\n        this.showProcessStatus = true;\n        this.showDebugInfo(`轮询超时，尝试了 ${this.pollAttempts} 次`);\n        this.resetProcessingState();\n        return;\n      }\n\n      this.pollAttempts++;\n      this.showDebugInfo(`轮询最近文件，尝试 ${this.pollAttempts}`);\n\n      const recentFilesUrl = new URL(this.RECENT_FILES_PATH, this.HTTPS_BASE_URL);\n      \n      if (!this.processStartTime) {\n        this.showDebugInfo(\"警告：未设置processStartTime，使用当前时间作为默认值\");\n        this.processStartTime = Math.floor(Date.now() / 1000);\n      }\n      \n      recentFilesUrl.searchParams.append('since', this.processStartTime.toString());\n      recentFilesUrl.searchParams.append('max', '10');\n\n      this.fetchWithTimeout(recentFilesUrl.toString(), { method: 'GET' }, 1000000)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`文件查询失败：${response.status} ${response.statusText}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          this.showDebugInfo(`找到 ${data.count} 个新文件`);\n          \n          if (data.status === 'success' && data.count > 0) {\n            const latestFile = data.files[0];\n            const videoUrl = `${this.HTTPS_BASE_URL}${this.PROXY_FILE_PATH}${encodeURIComponent(latestFile.path)}`;\n            \n            this.showDebugInfo(`找到最新文件：${videoUrl}`);\n            this.processStatusText = '视频处理完成，加载预览...';\n            this.showProcessStatus = true;\n            this.progressBarWidth = 100;\n            \n            this.videoPreviewHtml = `\n              <p>处理后的视频：</p>\n              <video controls src=\"${videoUrl}\"></video>\n              <div class=\"file-info\">\n                  名称：${latestFile.name}<br>\n                  大小：${(latestFile.size / (1024 * 1024)).toFixed(2)} MB<br>\n                  <a href=\"${videoUrl}\" download=\"${latestFile.name}\">下载视频</a>\n              </div>\n            `;\n            \n            this.resetProcessingState();\n          } else {\n            const elapsedMinutes = Math.floor((this.pollAttempts * this.POLL_INTERVAL) / 60000);\n            const totalMinutes = Math.floor((this.MAX_POLL_ATTEMPTS * this.POLL_INTERVAL) / 60000);\n            this.processStatusText = `处理中... 已等待 ${elapsedMinutes} 分钟（最长 ${totalMinutes} 分钟）`;\n            this.showProcessStatus = true;\n            \n            this.progressBarWidth = Math.min(90, (this.pollAttempts / this.MAX_POLL_ATTEMPTS) * 100);\n            \n            this.pollTimer = setTimeout(() => this.pollForRecentFiles(), this.POLL_INTERVAL);\n          }\n        })\n        .catch(error => {\n          this.showDebugInfo(`轮询错误：${error.message}`);\n          this.processStatusText = `轮询错误：${error.message}，将继续重试...`;\n          this.showProcessStatus = true;\n          \n          this.pollTimer = setTimeout(() => this.pollForRecentFiles(), this.POLL_INTERVAL);\n        });\n    },\n\n    resetProcessingState() {\n      this.isProcessing = false;\n      this.processStartTime = null;\n      this.pollAttempts = 0;\n      \n      if (this.pollTimer) {\n        clearTimeout(this.pollTimer);\n        this.pollTimer = null;\n      }\n      \n      this.progressBarWidth = 0;\n    },\n\n    async handleProcessVideo() {\n      if (!this.audioUrl) {\n        this.processStatusText = '请先生成音频';\n        this.showProcessStatus = true;\n        this.showDebugInfo('未生成音频，终止处理');\n        return;\n      }\n      \n      this.isProcessing = true;\n      this.processStartTime = Math.floor(Date.now() / 1000);\n      this.pollAttempts = 0;\n      \n      this.processStatusText = '提交处理请求中...';\n      this.showProcessStatus = true;\n      \n      this.progressBarWidth = 0;\n      this.videoPreviewHtml = '';\n      \n      this.abortController = new AbortController();\n      \n      try {\n        const processUrl = new URL(this.PROCESS_VIDEO_PATH, this.HTTPS_BASE_URL).href;\n        this.showDebugInfo(`提交视频处理请求到：${processUrl}`);\n        \n        const requestData = {\n          min_resolution: parseInt(this.minResolution),\n          if_res: this.ifRes === 'true',\n          steps: parseInt(this.steps)\n        };\n        \n        const response = await this.fetchWithTimeout(\n          processUrl,\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestData),\n            signal: this.abortController.signal\n          },\n          1800000\n        );\n        \n        if (!response.ok) {\n          this.showDebugInfo(`处理请求返回非成功状态：${response.status} ${response.statusText}`);\n          const errorText = await response.text().catch(() => '无法获取错误详情');\n          this.showDebugInfo(`错误内容：${errorText}`);\n          this.processStatusText = `处理请求返回错误，但将继续等待结果...`;\n          this.showProcessStatus = true;\n        } else {\n          try {\n            const result = await response.json();\n            this.showDebugInfo(`处理请求响应：${JSON.stringify(result)}`);\n            if (result.used_video_file) {\n              this.showDebugInfo(`后端使用的固定视频路径：${result.used_video_file}`);\n            }\n            this.processStatusText = '处理请求已提交，等待视频生成...';\n            this.showProcessStatus = true;\n          } catch (e) {\n            this.showDebugInfo(`解析处理响应失败：${e.message}`);\n            this.processStatusText = '处理请求已提交，等待视频生成...';\n            this.showProcessStatus = true;\n          }\n        }\n      } catch (error) {\n        if (error.name !== 'AbortError') {\n          this.showDebugInfo(`处理请求错误：${error.message}`);\n          this.processStatusText = `处理请求错误，但将继续等待结果...`;\n          this.showProcessStatus = true;\n        } else {\n          this.processStatusText = '处理已取消';\n          this.showProcessStatus = true;\n          this.resetProcessingState();\n          return;\n        }\n      }\n      \n      this.progressBarWidth = 10;\n      this.pollForRecentFiles();\n    },\n\n    handleCancelProcessing() {\n      this.showDebugInfo('用户点击取消处理');\n      if (this.isProcessing && this.abortController) {\n        this.abortController.abort();\n        this.processStatusText = '处理已取消';\n        this.showProcessStatus = true;\n        this.progressBarWidth = 0;\n        this.resetProcessingState();\n      }\n    },\n\n    togglePreviewVideo() {\n      this.showPreviewVideo = !this.showPreviewVideo;\n      this.showDebugInfo(`${this.showPreviewVideo ? '显示' : '隐藏'}可选预览视频`);\n    }\n  },\n  mounted() {\n    this.showDebugInfo('页面完全加载，准备就绪');\n  },\n  beforeUnmount() {\n    if (this.pollTimer) {\n      clearTimeout(this.pollTimer);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n    font-family: Arial, sans-serif;\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\n.section {\n    margin-bottom: 30px;\n    padding: 20px;\n    border: 1px solid #ddd;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1, h2, h3 {\n    color: #333;\n}\n\n.form-group {\n    margin-bottom: 15px;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 5px;\n    font-weight: bold;\n    color: #555;\n}\n\ninput, select, textarea {\n    width: 100%;\n    padding: 8px;\n    box-sizing: border-box;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n}\n\ntextarea {\n    min-height: 100px;\n    resize: vertical;\n}\n\nbutton {\n    background-color: #4CAF50;\n    color: white;\n    padding: 10px 15px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n    margin-right: 10px;\n}\n\nbutton:hover {\n    background-color: #45a049;\n}\n\nbutton:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n}\n\n.result {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #f5f5f5;\n    border-radius: 4px;\n    overflow-x: auto;\n}\n\n.file-info {\n    margin-top: 10px;\n    color: #666;\n    font-size: 0.9em;\n}\n\n.preview {\n    margin-top: 15px;\n    padding: 10px;\n    background-color: #f9f9f9;\n    border-radius: 4px;\n}\n\nvideo, audio {\n    max-width: 100%;\n    margin-top: 10px;\n    border-radius: 4px;\n}\n\n.loading {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    border: 3px solid rgba(76, 175, 80, 0.3);\n    border-radius: 50%;\n    border-top-color: #4CAF50;\n    animation: spin 1s ease-in-out infinite;\n    margin-left: 10px;\n}\n\n@keyframes spin {\n    to { transform: rotate(360deg); }\n}\n\n.progress-container {\n    margin-top: 15px;\n    width: 100%;\n    background-color: #e0e0e0;\n    border-radius: 5px;\n    overflow: hidden;\n}\n\n.progress-bar {\n    height: 20px;\n    background-color: #4CAF50;\n    width: 0%;\n    transition: width 0.3s ease;\n}\n\n.debug-info {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #f0f0f0;\n    border-radius: 4px;\n    font-family: monospace;\n    font-size: 0.9em;\n    max-height: 200px;\n    overflow-y: auto;\n    white-space: pre-wrap;\n}\n\n.api-response {\n    margin-top: 15px;\n    padding: 10px;\n    background-color: #f0f7ff;\n    border-radius: 4px;\n    font-size: 0.9em;\n    max-height: 200px;\n    overflow-y: auto;\n}\n\n.optional-preview {\n    margin-top: 20px;\n    padding: 15px;\n    border: 1px dashed #ccc;\n    border-radius: 4px;\n}\n\n.optional-preview h3 {\n    margin-top: 0;\n    color: #666;\n    font-size: 1.1em;\n}\n</style>\n","import { render } from \"./FriendsCom.vue?vue&type=template&id=63ad6a22&scoped=true\"\nimport script from \"./FriendsCom.vue?vue&type=script&lang=js\"\nexport * from \"./FriendsCom.vue?vue&type=script&lang=js\"\n\nimport \"./FriendsCom.vue?vue&type=style&index=0&id=63ad6a22&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63ad6a22\"]])\n\nexport default __exports__","<template>\n  <div class=\"nav-container\">\n    <!-- 加载状态 -->\n    <div v-if=\"isLoading\" class=\"loading\">\n      <p>正在加载动态...</p>\n    </div>\n\n    <!-- 错误提示 -->\n    <div v-if=\"errorMessage\" class=\"error\">\n      <p>⚠️ {{ errorMessage }}</p>\n    </div>\n\n    <!-- 无数据提示 -->\n    <div v-if=\"!isLoading && !errorMessage && sortedBlogs.length === 0\" class=\"no-data\">\n      <p>暂无博客内容</p>\n    </div>\n\n    <!-- 博客列表 -->\n    <div class=\"blog-container\" v-if=\"!isLoading && !errorMessage && sortedBlogs.length > 0\">\n      <el-card v-for=\"blog in sortedBlogs\" :key=\"blog.date\" @click=\"openBlogModal(blog)\" class=\"blog-card\">\n        <template #header>\n          <h3>题目：{{ blog.title }}</h3>\n          <h4>作者：{{ blog.username }}</h4>\n          <span class=\"blog-date\">发布时间：{{ formatDate(blog.date) }}</span>\n          <p class=\"comment-count\">评论数量：{{ getCommentsForBlog(blog.date).length }}</p>\n        </template>\n        <!-- 显示博客内容摘要（先解码再截断） -->\n        <div class=\"blog-content\">\n          {{ decodedContent(blog.content).length > 150 \n            ? decodedContent(blog.content).slice(0, 150) + '... 点击查看全文' \n            : decodedContent(blog.content) \n          }}\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 博客详情弹窗 -->\n    <div v-if=\"showBlogModal\" class=\"modal-overlay\" @click=\"closeBlogModal\">\n      <div class=\"modal-content\" @click.stop>\n        <div class=\"modal-header\">\n          <h2>{{ currentBlog.title }}</h2>\n          <button class=\"close-btn\" @click=\"closeBlogModal\">×</button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"blog-meta\">\n            <span class=\"author\">作者：{{ currentBlog.username }}</span>\n            <span class=\"date\">发布时间：{{ formatDate(currentBlog.date) }}</span>\n          </div>\n          <!-- 先解码，再用专业库渲染 Markdown -->\n          <!-- 修改弹窗内容的容器 -->\n<div \n  class=\"full-content markdown-content\"  \n  v-html=\"renderMarkdown(decodedContent(currentBlog.content))\"\n></div>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"close-modal-btn\" @click=\"closeBlogModal\">关闭</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport axios from 'axios';\nimport { ElCard } from 'element-plus';\n// 引入专业 Markdown 解析库（需要先安装：npm install marked）\nimport { marked } from 'marked';\n\n// 核心数据\nconst sortedBlogs = ref([]);\nconst allComments = ref([]);\nconst isLoading = ref(true);      // 加载状态\nconst errorMessage = ref('');     // 错误信息\nconst showBlogModal = ref(false); // 弹窗显示状态\nconst currentBlog = ref({});      // 当前选中的博客\n\n// 格式化日期\nconst formatDate = (dateString) => {\n  try {\n    return new Date(dateString).toLocaleString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  } catch (error) {\n    console.error('日期格式化失败:', error);\n    return dateString; // 格式化失败时显示原始字符串\n  }\n};\n\n// 获取指定博客的评论\nconst getCommentsForBlog = computed(() => (blogDate) => {\n  if (!allComments.value) return [];\n  return allComments.value.filter(comment => comment && comment.blogDate === blogDate);\n});\n\n// 【关键修复】强制解码 Unicode + 处理所有转义\nconst decodedContent = (content) => {\n  if (!content) return '';\n  // 1. 处理 Unicode 转义（\\uXXXX）\n  let decoded = content.replace(/\\\\u([0-9a-fA-F]{4})/g, (match, hex) => {\n    return String.fromCharCode(parseInt(hex, 16));\n  });\n  // 2. 处理 HTML 转义（如 &lt; &gt; 等）\n  decoded = decoded\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&amp;/g, '&');\n  // 3. 处理换行符（适配后端可能的 \\r\\n 或 \\n）\n  decoded = decoded.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n  return decoded;\n};\n\n// 获取博客数据\nconst fetchBlogs = async () => {\n  try {\n    isLoading.value = true;\n    errorMessage.value = '';\n\n    console.log('开始请求博客数据...');\n    const [blogsRes, commentsRes] = await Promise.all([\n      axios.get('https://123.56.203.202/getBlogs'),\n      axios.get('https://123.56.203.202/getComments')\n    ]);\n\n    console.log('接口返回的原始博客数据:', blogsRes.data);\n    console.log('接口返回的评论数据:', commentsRes.data);\n\n    // 确保数据是数组格式，并对每个博客的content进行解码\n    let blogsData = Array.isArray(blogsRes.data) ? blogsRes.data : [];\n    \n    // 定义需要筛选的开头模式（正则表达式）\n    const targetPatterns = [\n      /^```markdownrn#/,  // 匹配以```markdownrn#开头的内容\n      /^# u592/           // 匹配以# u592开头的内容\n    ];\n    \n    // 修改fetchBlogs中的解码处理部分\nblogsData = blogsData.map((blog, index) => {\n  if (blog.content) {\n    // 检测编码类型（新增对uXXXX格式的检测）\n    const hasUnicode = /\\\\u([0-9a-fA-F]{4})/.test(blog.content) || /u([0-9a-fA-F]{4})/.test(blog.content);\n    const hasHtmlEntities = /&lt;|&gt;|&amp;/.test(blog.content);\n    const hasLineBreaks = /\\r\\n|\\r/.test(blog.content);\n    \n    const encodingTypes = [];\n    if (hasUnicode) encodingTypes.push('Unicode转义（uXXXX或\\\\uXXXX）');\n    if (hasHtmlEntities) encodingTypes.push('HTML实体（&lt;等）');\n    if (hasLineBreaks) encodingTypes.push('特殊换行符（\\\\r\\\\n等）');\n    \n    // 筛选目标博客（开头为```markdownrn#或# u592）\n    const isTargetBlog = /^```markdownrn#/.test(blog.content) || /^# u592/.test(blog.content);\n    \n    if (isTargetBlog) {\n      console.group(`目标博客[${index}] - 包含编码: ${encodingTypes.length ? encodingTypes.join('、') : '无'}`);\n      console.log('解码前:', blog.content);\n    }\n    \n    // 解码处理（新增对uXXXX格式的处理）\n    let decodedContent = blog.content\n      // 先处理标准Unicode转义（\\uXXXX）\n      .replace(/\\\\u([0-9a-fA-F]{4})/g, (match, hex) => String.fromCharCode(parseInt(hex, 16)))\n      // 再处理特殊Unicode转义（uXXXX，缺少\\）\n      .replace(/u([0-9a-fA-F]{4})/g, (match, hex) => String.fromCharCode(parseInt(hex, 16)))\n      // 处理HTML实体\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      .replace(/&amp;/g, '&')\n      // 处理换行符\n      .replace(/\\r\\n/g, '\\n')\n      .replace(/\\r/g, '\\n');\n    \n    if (isTargetBlog) {\n      console.log('解码后:', decodedContent);\n      console.groupEnd();\n    }\n    \n    return { ...blog, content: decodedContent };\n  }\n  return blog;\n});\n\n    // 赋值给响应式变量\n    sortedBlogs.value = blogsData;\n    allComments.value = Array.isArray(commentsRes.data) ? commentsRes.data : [];\n\n  } catch (error) {\n    console.error('获取数据失败:', error);\n    errorMessage.value = '加载博客失败，请稍后重试';\n    if (error.response) {\n      console.error('请求错误:', error.response.status, error.response.data);\n    } else if (error.request) {\n      console.error('无响应:', error.request);\n    }\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n\n// 打开弹窗时预解码\nconst openBlogModal = (blog) => {\n  const decoded = decodedContent(blog.content); // 提前解码\n  currentBlog.value = { ...blog, decodedContent: decoded }; // 缓存解码结果\n  showBlogModal.value = true;\n  document.body.style.overflow = 'hidden';\n};\n// 关闭博客详情弹窗\nconst closeBlogModal = () => {\n  showBlogModal.value = false;\n  document.body.style.overflow = ''; // 恢复背景滚动\n  currentBlog.value = {};\n};\n\nconst renderMarkdown = (content) => {\n  if (!content) return '<p>该博客暂无内容</p>';\n  try {\n    // 1. 过滤雷达图数据等冗余标记\n    let processed = content.replace(/RADAR_DATA_.*?END/g, '');\n    // 2. 将换行符转换为 Markdown 换行（末尾加空格）\n    processed = processed.replace(/\\n/g, '  \\n');\n    // 3. 解析 Markdown\n    return marked.parse(processed);\n  } catch (error) {\n    console.error('Markdown渲染失败:', error);\n    return `<p>${content}</p>`;\n  }\n};\n\n// 页面加载时获取博客数据\nonMounted(async () => {\n  await fetchBlogs();\n});\n</script>\n\n<style scoped>\n/* 补充Markdown核心样式 */\n.markdown-content {\n  /* 基础文本样式 */\n  line-height: 1.8;\n  color: #333;\n  font-size: 16px;\n}\n\n/* 标题样式 */\n.markdown-content h1 {\n  font-size: 24px;\n  border-bottom: 2px solid #eee;\n  padding-bottom: 8px;\n  margin: 24px 0 16px;\n}\n.markdown-content h2 {\n  font-size: 20px;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 6px;\n  margin: 20px 0 14px;\n}\n.markdown-content h3 {\n  font-size: 18px;\n  margin: 18px 0 12px;\n}\n\n/* 列表样式 */\n.markdown-content ul, \n.markdown-content ol {\n  padding-left: 28px;\n  margin: 12px 0;\n}\n.markdown-content ul {\n  list-style-type: disc;\n}\n.markdown-content ol {\n  list-style-type: decimal;\n}\n.markdown-content li {\n  margin: 6px 0;\n}\n\n/* 段落与强调样式 */\n.markdown-content p {\n  margin: 12px 0;\n}\n.markdown-content strong {\n  font-weight: 600;\n  color: #2c3e50;\n}\n.markdown-content em {\n  color: #7f8c8d;\n  font-style: italic;\n}\n.nav-container {\n  background: #e3e9f3;\n  padding: 15px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  min-height: 100vh;\n}\n\n.loading, .error, .no-data {\n  text-align: center;\n  padding: 50px 0;\n  font-size: 16px;\n}\n\n.error {\n  color: #ff4d4f;\n}\n\n.blog-container {\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 20px;\n}\n\n.blog-card {\n  width: calc(24% - 10px);\n  margin-bottom: 20px;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.blog-card:hover {\n  background-color: #fff;\n  transform: translateY(-5px);\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\n}\n\n.blog-card:hover h3 {\n  color: #409eff;\n}\n\n.blog-date {\n  float: right;\n  color: #999;\n  font-size: 12px;\n}\n\n.blog-card h3 {\n  font-size: 18px;\n  font-weight: bold;\n  color: #333333;\n  margin-bottom: 10px;\n}\n\n.blog-card h4 {\n  font-size: 14px;\n  color: #666666;\n  margin-bottom: 15px;\n}\n\n.comment-count {\n  margin-top: 10px;\n  color: #666;\n  font-size: 14px;\n}\n\n.blog-content {\n  margin-top: 15px;\n  color: #333;\n  line-height: 1.6;\n  font-size: 14px;\n}\n\n/* 弹窗样式 */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  padding: 20px;\n}\n\n.modal-content {\n  background-color: #fff;\n  width: 100%;\n  max-width: 800px;\n  max-height: 90vh;\n  border-radius: 8px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.modal-header {\n  padding: 20px;\n  border-bottom: 1px solid #eee;\n  position: relative;\n}\n\n.modal-header h2 {\n  margin: 0;\n  color: #333;\n  font-size: 22px;\n}\n\n.close-btn {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #999;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: all 0.2s;\n}\n\n.close-btn:hover {\n  background-color: #f5f5f5;\n  color: #333;\n}\n\n.modal-body {\n  padding: 20px;\n  overflow-y: auto;\n  flex: 1;\n}\n\n.blog-meta {\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  justify-content: space-between;\n  color: #666;\n  font-size: 14px;\n}\n\n.full-content {\n  line-height: 1.8;\n  color: #333;\n  font-size: 16px;\n}\n\n/* Markdown 样式增强（适配 marked.js 输出） */\n.markdown-content h1,\n.markdown-content h2,\n.markdown-content h3,\n.markdown-content h4,\n.markdown-content h5,\n.markdown-content h6 {\n  color: #2c3e50;\n  margin-top: 1.5rem;\n  margin-bottom: 1rem;\n}\n\n.markdown-content strong {\n  font-weight: 600;\n  color: #2c3e50;\n}\n\n.markdown-content em {\n  color: #7f8c8d;\n}\n\n.markdown-content a {\n  color: #3498db;\n  text-decoration: none;\n}\n\n.markdown-content a:hover {\n  text-decoration: underline;\n}\n\n.markdown-content ul,\n.markdown-content ol {\n  margin: 1rem 0;\n}\n\n.markdown-content li {\n  margin-bottom: 0.5rem;\n}\n\n.markdown-content pre {\n  background: #f5f5f5;\n  padding: 1rem;\n  border-radius: 4px;\n  overflow-x: auto;\n}\n\n.markdown-content code {\n  background: #f5f5f5;\n  padding: 0.2rem 0.4rem;\n  border-radius: 4px;\n  color: #e83e8c;\n}\n\n.modal-footer {\n  padding: 15px 20px;\n  border-top: 1px solid #eee;\n  text-align: right;\n}\n\n.close-modal-btn {\n  padding: 8px 16px;\n  background-color: #409eff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.close-modal-btn:hover {\n  background-color: #66b1ff;\n}\n\n@media (max-width: 1200px) {\n  .blog-card {\n    width: calc(33% - 10px);\n  }\n}\n\n@media (max-width: 768px) {\n  .blog-card {\n    width: 100%;\n  }\n  .modal-content {\n    max-width: 100%;\n  }\n}\n</style>","import script from \"./DiscoverCom.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DiscoverCom.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DiscoverCom.vue?vue&type=style&index=0&id=01508415&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-01508415\"]])\n\nexport default __exports__","<template>\n    <!-- 个性名片页面 -->\n    <div id=\"card\">\n        <van-nav-bar :title=\"title\" right-text=\"设置\" :fixed=\"true\" :placeholder=\"true\" left-arrow @click-left=\"back()\" />\n        <div id=\"card_content\">\n            <div id=\"card_content_head\">\n                <van-image\n                    round\n                    width=\"85px\"\n                    height=\"85px\"\n                    :src=\"require(`@/assets/images/${user.profile}`)\"\n                    @click=\"profilePreview()\"\n                    style=\"float:left; margin-right:15px;\" />\n                <span style=\"font-size:22px; font-weight:bold;\">{{user.name}}</span>\n                <van-icon :name=\"require('@/assets/icon/icon_card_点赞0.png')\" size=\"30px\" style=\"position:absolute; top:70px; right:10px;\" />\n                <br>\n                <span style=\"font-size:14px;\">QQ：{{user.qq}}</span>\n                <van-cell center clickable style=\"width:170px; padding:0;\">\n                    <template #icon>\n                        <van-image :src=\"require('@/assets/images/qq等级.png')\" />\n                    </template>\n                </van-cell>\n            </div>\n            <div id=\"card_content_info\">\n                <van-cell center is-link :title=\"user.gender + ' ' + user.age + '岁 &nbsp;|&nbsp; ' + user.birth_month + '月' + user.birth_day + '日 ' + user.constellation + '座 &nbsp;|&nbsp; 现居' +  user.place\" style=\"padding:5px 10px; font-size:13px;\">\n                    <template #icon>\n                        <van-icon :name=\"require('@/assets/icon/icon_card_个人信息.png')\" size=\"18px\" style=\"margin-right:15px;\" />\n                    </template>\n                </van-cell>\n                <van-cell center is-link :title=\"user.sign\" style=\"padding:5px 10px; font-size:13px;\">\n                    <template #icon>\n                        <van-icon :name=\"require('@/assets/icon/icon_card_个性签名.png')\" size=\"18px\" style=\"margin-right:15px\" />\n                    </template>\n                </van-cell>\n                <van-cell center is-link title=\"TA还未开通任何特权服务\" style=\"padding:5px 10px; font-size:13px;\">\n                    <template #icon>\n                        <van-icon :name=\"require('@/assets/icon/icon_card_特权服务.png')\" size=\"18px\" style=\"margin-right:15px\" />\n                    </template>\n                </van-cell>\n                <van-cell center is-link :title=\"who + '的空间'\" style=\"padding:5px 10px; font-size:13px;\">\n                    <template #icon>\n                        <van-icon :name=\"require('@/assets/icon/icon_card_QQ空间.png')\" size=\"18px\" style=\"margin-right:15px\" />\n                    </template>\n                </van-cell>\n                <van-cell center is-link title=\"精选照片\" style=\"margin-top:15px; padding:10px; font-size:17px; font-weight:bold;\" />\n            </div>\n            <div id=\"card_content_picture\" class=\"ui-feeds\">\n                <ul>\n                    <li> <span :style=\"{backgroundImage:`url(${pictures[0]})`}\" @click=\"picturesPreview(0)\"></span> </li>\n                    <li> <span :style=\"{backgroundImage:`url(${pictures[1]})`}\" @click=\"picturesPreview(1)\"></span> </li>\n                    <li> <span :style=\"{backgroundImage:`url(${pictures[2]})`}\" @click=\"picturesPreview(2)\"></span> </li>\n                    <li> <span :style=\"{backgroundImage:`url(${pictures[3]})`}\" @click=\"picturesPreview(3)\"></span> </li>\n                    <li> <span :style=\"{backgroundImage:`url(${pictures[4]})`}\" @click=\"picturesPreview(4)\"></span> </li>\n                    <li> <span :style=\"{backgroundImage:`url(${pictures[5]})`}\" @click=\"picturesPreview(5)\"></span> </li>\n                </ul>\n            </div>\n        </div>\n        <div id=\"card_bottombar\">\n            <div id=\"card_bottombar_inside\">\n                <van-button type=\"default\" color=\"#EBECF4\" :style=\"[bottom_button_style, blackText]\">{{button1}}</van-button>\n                <van-button type=\"default\" color=\"#EBECF4\" :style=\"[bottom_button_style, blackText]\">{{button2}}</van-button>\n                <van-button type=\"primary\" color=\"#5BC7F6\" :style=\"bottom_button_style\" :to=\"'/dialog/'+user.name\">发消息</van-button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ImagePreview } from 'vant';\nexport default {\n    data() {\n        return {\n            // 该个性名片的用户信息\n            user: {\n                profile: this.$route.query.profile==undefined ? \"default_profile.png\" : this.$route.query.profile, //头像\n                name: '且听风吟', //名字\n                qq: '1243114903', //qq号\n                gender: '男', //性别\n                age: '20', //年龄\n                birth_month: '2005年', //出生月份\n                birth_day: '3月23', //出生日\n                constellation: '白羊', //星座\n                place: '绍兴', //现居地\n                sign: this.$route.query.sign==undefined ? \"个性签名\" : '此心光明，亦复何虑。' //个性签名\n            },\n            // 我/他/她的空间\n            who: \"我\",\n            // 我的资料/个人资料\n            title: \"\",\n            // 名片/音视频通话\n            button1: \"\",\n            // 编辑资料/礼物\n            button2: \"\",\n            // 底部按钮样式\n            bottom_button_style: {\n                margin: \"5px 2.5px\",\n                width: window.innerWidth / 3.2 + \"px\",\n                borderRadius: \"5px\",\n                letterSpacing: \"2px\",\n                fontWeight: \"bold\"\n            },\n            // 底部左边两个按钮字体颜色\n            blackText: {\n                color: \"black\"\n            },\n            // 精选照片\n            pictures: [\n    require(\"@/assets/images/QQ图片20250719201652.jpg\"),\n    require(\"@/assets/images/QQ图片20250719201659.jpg\"),\n    require(\"@/assets/images/QQ图片20250719201704.jpg\"),\n    require(\"@/assets/images/QQ图片20250719201708.jpg\"),\n    require(\"@/assets/images/QQ图片20250719201714.jpg\"),\n    require(\"@/assets/images/QQ图片20250719201723.jpg\"),\n    require(\"@/assets/images/QQ图片20250719201727.jpg\"),\n    require(\"@/assets/images/QQ图片20250719201731.jpg\"),\n    require(\"@/assets/images/QQ图片20250719201735.jpg\"),\n    require(\"@/assets/images/QQ图片20250719201739.png\")\n]\n        };\n    },\n    methods: {\n        // 返回\n        back() {\n            history.back();\n        },\n        //预览“头像”\n        profilePreview() {\n            ImagePreview([require(`@/assets/images/${this.user.profile}`)]);\n        },\n        //预览“精选照片”\n        picturesPreview(i) {\n            ImagePreview({\n                images: this.pictures,\n                startPosition: i\n            });\n        }\n    },\n    mounted() {\n        if(this.user.profile != \"my_profile.jpg\") {\n            this.who = this.user.gender==\"女\" ? \"她\" : \"他\";\n            this.title = \"个人资料\";\n            this.button1 = \"音视频通话\";\n            this.button2 = \"礼物\";\n        }\n        else {\n            this.title = \"我的资料\";\n            this.button1 = \"名片\";\n            this.button2 = \"编辑资料\";\n        }\n    }\n}\n</script>\n\n<style>\n#card {\n    --van-nav-bar-arrow-size: 20px;\n    --van-nav-bar-icon-color: black;\n    --van-nav-bar-text-color: black;\n    --van-nav-bar-title-text-color: black;\n    background-color: white;\n}\n#card_content {\n    margin: 20px 0;\n}\n#card_content_head {\n    height: 100px;\n    padding: 0 10px;\n}\n#card_content_picture ul {\n    padding: 0 10px;\n}\n#card_bottombar {\n    height: 54px;\n}\n#card_bottombar_inside {\n    position: fixed;\n    bottom: 0px;\n    width: 100%;\n    background-color: #F9F9F9;\n    text-align: center;\n    z-index: 99;\n}\n</style>","import { render } from \"./CardView.vue?vue&type=template&id=937127d4\"\nimport script from \"./CardView.vue?vue&type=script&lang=js\"\nexport * from \"./CardView.vue?vue&type=script&lang=js\"\n\nimport \"./CardView.vue?vue&type=style&index=0&id=937127d4&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div id=\"dialog\">\n    <!-- 顶部导航导航栏 -->\n    <van-nav-bar :fixed=\"true\" :placeholder=\"true\" left-arrow @click-left=\"backToHomeMessage()\"\n      custom-style=\"z-index: 999;\">\n      <template #right>\n        <van-icon name=\"wap-nav\" size=\"20\" />\n      </template>\n      <template #title>\n        <div style=\"line-height: 20px;\">\n          {{ name }}\n          <br>\n          \n        </div>\n      </template>\n    </van-nav-bar>\n\n    <!-- 聊天会话内容区域 -->\n    <div id=\"dialog_content\" class=\"chat-container\">\n      <div class=\"messages\" ref=\"messagesContainer\">\n        <!-- 初始欢迎消息 -->\n        <div class=\"message-item ai-message\">\n\n          <div class=\"message-bubble\">\n            你好！我是{{ name }}\n          </div>\n        </div>\n\n        <!-- 动态消息列表 -->\n        <div v-for=\"(msg, index) in messages\" :key=\"index\"\n          :class=\"['message-item', msg.sender === 'user' ? 'user-message flex-row-reverse' : 'ai-message']\">\n\n\n\n          <!-- 文本消息 -->\n          <div v-if=\"msg.type === 'text'\" class=\"message-bubble\" :class=\"msg.isError ? 'error-message' : ''\">\n            {{ msg.content }}\n          </div>\n          <!-- 新增：格式化消息（Markdown） -->\n          <div v-if=\"msg.type === 'formatted'\" class=\"message-bubble markdown-bubble\">\n            <div v-html=\"msg.content\" class=\"markdown-render\"></div>\n          </div>\n          <!-- 语音消息 -->\n          <div v-if=\"msg.type === 'voice'\" class=\"voice-bubble\">\n            <div class=\"voice-controls\">\n              <van-icon :name=\"msg.isPlaying ? 'pause-circle' : 'play-circle'\" size=\"20\"\n                @click=\"toggleVoicePlayback(index)\" class=\"play-icon\" />\n              <div class=\"voice-wave\">\n                <div :style=\"{ height: '100%' }\"></div>\n                <div :style=\"{ height: '60%' }\"></div>\n                <div :style=\"{ height: '80%' }\"></div>\n                <div :style=\"{ height: '40%' }\"></div>\n              </div>\n              <span class=\"voice-duration\">{{ formatDuration(msg.duration) }}</span>\n            </div>\n\n            <!-- 语音操作按钮 -->\n            <div class=\"voice-actions\" v-if=\"msg.sender === 'user'\">\n              <van-button size=\"mini\" type=\"primary\" @click=\"convertVoiceToText(index)\" round>\n                转文字\n              </van-button>\n              <van-button size=\"mini\" type=\"info\" @click=\"analyzeVoiceTone(index)\" round>\n                分析语调\n              </van-button>\n              <van-button size=\"mini\" type=\"warning\" @click=\"calculateSpeechSpeed(index)\" round\n                :disabled=\"!msg.textResult\">\n                语速\n              </van-button>\n              <van-button size=\"mini\" type=\"success\" @click=\"analyzeLanguageLogic(index)\" round\n                :disabled=\"!msg.textResult\">\n                语言逻辑\n              </van-button>\n            </div>\n\n            <!-- 语音转文字结果 -->\n            <div v-if=\"msg.textResult\" class=\"voice-text-result\">\n              {{ msg.textResult }}\n            </div>\n\n            <!-- 语速计算结果 -->\n            <div v-if=\"msg.speechSpeed\" class=\"voice-speed-result\">\n              语速: {{ msg.speechSpeed }} 字/秒 (约 {{ Math.round(msg.speechSpeed * 60) }} 字/分钟)\n            </div>\n\n            <!-- 语调分析结果 -->\n            <div v-if=\"msg.toneResult\" class=\"voice-tone-result\">\n              <div>语调: {{ msg.toneResult.tone_type }}</div>\n              <div>基频均值: {{ msg.toneResult.f0_mean }}Hz</div>\n              <div>基频范围: {{ msg.toneResult.f0_min }}-{{ msg.toneResult.f0_max }}Hz</div>\n            </div>\n\n            <!-- 语言逻辑分析结果 -->\n            <div v-if=\"msg.logicResult\" class=\"voice-logic-result\">\n              <div><strong>语言逻辑分析:</strong></div>\n              <div>{{ msg.logicResult.analysis }}</div>\n              <div v-if=\"msg.logicResult.score\"><strong>连贯性评分:</strong> {{ msg.logicResult.score }}/10</div>\n            </div>\n          </div>\n\n          <!-- 表情和姿态分析消息 -->\n          <div v-if=\"msg.type === 'expression'\" class=\"expression-bubble\">\n            <div class=\"expression-image-container\">\n              <img :src=\"msg.imageUrl\" class=\"expression-image\" alt=\"表情和姿态分析截图\">\n            </div>\n\n            <!-- 表情分析结果 -->\n            <div  class=\"expression-results\">\n              <div><strong>表情与动作分析:</strong></div>\n              \n              <div>{{ msg.expressionResults.result }}</div>\n            </div>\n\n            <!-- 姿态分析结果 -->\n            <div v-if=\"msg.poseResult\" class=\"pose-result\">\n              <div><strong>姿态分析:</strong></div>\n              <div>动作: {{ msg.poseResult.pose }}</div>\n              <div>置信度: {{ (msg.poseResult.score * 100).toFixed(1) }}%</div>\n              <div>帧率: {{ msg.poseResult.fps }}fps</div>\n            </div>\n\n            <!-- 综合分析结果 -->\n            <div v-if=\"msg.comprehensiveAnalysis\" class=\"comprehensive-analysis\">\n              <div><strong>综合分析:</strong></div>\n              <div>{{ msg.comprehensiveAnalysis }}</div>\n            </div>\n\n            <!-- 操作按钮 -->\n            <div class=\"expression-actions\" v-if=\"msg.sender === 'user'\">\n              <van-button size=\"mini\" type=\"primary\" @click=\"analyzeComprehensive(index)\" round>\n                综合分析\n              </van-button>\n              <van-button size=\"mini\" type=\"success\" @click=\"saveAnalysisToStorage(msg)\" round>\n                保存分析\n              </van-button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 正在输入指示器 -->\n        <div v-if=\"isTyping\" :id=\"typingId\" class=\"message-item ai-message\">\n          <div class=\"avatar\">\n\n          </div>\n          <div class=\"message-bubble typing\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 底部输入栏 -->\n    <div id=\"dialog_bottombar\">\n      <div id=\"dialog_bottombar_inside\">\n        <!-- 使用flex布局将输入框和发送按钮放在同一行 -->\n        <div style=\"display: flex; align-items: flex-end; gap: 8px;\">\n          <van-field type=\"textarea\" rows=\"1\" :autosize=\"{ maxHeight: 100, minHeight: 40 }\" v-model=\"message\"\n            style=\"border-radius:25px; padding:10px; flex: 1;\" @keypress.enter.prevent=\"sendMessage\"\n            placeholder=\"输入消息...\" />\n\n          <!-- 发送按钮移至输入框右侧 -->\n          <van-button round type=\"primary\" size=\"small\" @click=\"sendMessage\"\n            style=\"width:60px; height:60px; padding:0; display:flex; align-items:center; justify-content:center;\"\n            :disabled=\"!message.trim()\">\n            发送\n            <van-icon name=\"paper-plane-o\" size=\"16\" style=\"margin-left: 2px;\" />\n          </van-button>\n        </div>\n\n        <van-row style=\"padding-top: 8px;\">\n          <van-col span=\"8\" style=\"text-align:center;\">\n            <van-icon :name=\"isRecording ? 'stop' : require('@/assets/icon/icon_dialog_语音.png')\" size=\"20\"\n              @click=\"startInterviewProcess()\" />\n          </van-col>\n          <van-col span=\"8\" style=\"text-align:center;\">\n            <van-icon name=\"image\" size=\"20\" />\n          </van-col>\n          <van-col span=\"4\" style=\"text-align:center;\">\n            <van-icon :name=\"require('@/assets/icon/icon_dialog_相机.png')\" size=\"20\" @click=\"toggleCamera\"\n              :class=\"isCameraActive ? 'camera-active' : ''\" />\n          </van-col>\n          <van-col span=\"4\" style=\"text-align:center;\">\n            <van-icon name=\"red-envelope\" size=\"20\" />\n          </van-col>\n          \n          <!-- 移除原发送按钮所在的van-col -->\n        </van-row>\n      </div>\n\n    </div>\n\n    <van-popup \n      v-model:show=\"isCameraModalVisible\" \n      :style=\"{\n        width: popupWidth + 'px',   // 动态宽度\n        height: popupHeight + 'px', // 动态高度\n        left: popupLeft + 'px',     // 动态左偏移\n        top: popupTop + 'px',       // 动态上偏移\n        'z-index': 100,\n        background: 'white',\n        borderRadius: '12px',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n        overflow: 'hidden',\n        position: 'fixed',  // 固定定位，支持自由移动\n        margin: 0           // 清除默认margin\n      }\" \n      :overlay=\"false\"\n      :position=\"null\"\n    >\n      <!-- 弹窗头部（可拖拽区域） -->\n      <!-- 开始拖拽 -->\n      <div \n        class=\"camera-header\"\n        style=\"padding: 12px; border-bottom: 1px solid #eee; display: flex; justify-content: space-between; align-items: center; cursor: move;\"\n        @mousedown=\"startDrag\"\n      >\n        <h3 style=\"margin: 0; font-size: 16px;\">表情与姿态识别</h3>\n        <van-icon name=\"close\" @click=\"toggleCamera\" style=\"font-size: 20px; cursor: pointer;\" />\n      </div>\n\n      <!-- 相机预览区域 -->\n      <div class=\"camera-preview\" style=\"flex: 1; padding: 10px; box-sizing: border-box; position: relative;\">\n        <video ref=\"videoElement\" autoplay playsinline class=\"camera-video\"\n          style=\"width: 100%; height: 100%; object-fit: cover; border-radius: 8px;\"></video>\n\n        <!-- 加载中状态 -->\n        <div v-if=\"isLoadingCamera\"\n          style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center;\">\n          <van-loading type=\"spinner\" color=\"#1677ff\" />\n          <p style=\"margin-top: 8px; color: #666;\">正在初始化相机...</p>\n        </div>\n\n        <!-- 错误提示 -->\n        <div v-if=\"cameraError\"\n          style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center; color: #f53f3f;\">\n          <van-icon name=\"warning-circle\" color=\"#f53f3f\" size=\"24\" />\n          <p style=\"margin-top: 8px;\">{{ cameraError }}</p>\n        </div>\n      </div>\n\n      <!-- 相机控制按钮 -->\n      <div class=\"camera-controls\" style=\"padding: 12px; display: flex; gap: 10px; justify-content: center;\">\n        <van-button type=\"primary\" round @click=\"captureImage\" :disabled=\"!isCameraActive || isProcessingImage\"\n          style=\"padding: 8px 20px;\">\n          <van-icon name=\"camera\" size=\"18\" style=\"margin-right: 5px;\" />\n          {{ isProcessingImage ? '处理中...' : '拍照分析' }}\n        </van-button>\n\n        <van-button type=\"info\" round @click=\"startContinuousAnalysis\"\n          :disabled=\"!isCameraActive || isAnalyzingContinuously\" style=\"padding: 8px 20px;\">\n          <van-icon name=\"play\" size=\"18\" style=\"margin-right: 5px;\" />\n          {{ isAnalyzingContinuously ? '停止连续分析' : '连续分析' }}\n        </van-button>\n      </div>\n\n      <!-- 右下角 resize 手柄（用于调整大小） -->\n      <div \n        class=\"resize-handle\"\n        style=\"position: absolute; right: 0; bottom: 0; width: 15px; height: 15px; cursor: nwse-resize; background: #1677ff; border-radius: 0 0 12px 0;\"\n        @mousedown=\"startResize\"\n      ></div>\n    </van-popup>\n\n\n    <!-- 评测报告弹窗 -->\n    <van-popup v-model:show=\"isReportVisible\" position=\"center\"\n      :style=\"{ width: '90%', maxWidth: '800px', height: '90%', overflow: 'auto' }\">\n      <div class=\"report-container\">\n        <div class=\"report-header\">\n          <h2>面试多维度评估报告</h2>\n          <van-icon name=\"close\" @click=\"isReportVisible = false\" class=\"close-icon\" />\n        </div>\n\n        <div v-if=\"reportLoading\" class=\"report-loading\">\n          <van-loading type=\"spinner\" color=\"#1677ff\" size=\"30\" />\n          <p>正在生成评估报告...</p>\n        </div>\n\n        <div v-else-if=\"reportError\" class=\"report-error\">\n          <van-icon name=\"warning-circle\" color=\"#f53f3f\" size=\"24\" />\n          <p>{{ reportError }}</p>\n          <van-button @click=\"generateReportFromStorage\" type=\"primary\" round>重试</van-button>\n        </div>\n\n        <div v-else class=\"report-content\">\n          <!-- 雷达图区域 -->\n          <div class=\"radar-chart-container\">\n            <h3 class=\"chart-title\">多维度能力雷达图</h3>\n            <div class=\"chart-wrapper\">\n              <canvas ref=\"radarChart\" width=\"400\" height=\"300\"></canvas>\n            </div>\n          </div>\n\n          <!-- 能力详情区域 -->\n          <div class=\"ability-details-container\">\n            <h3 class=\"details-title\">各维度评分详情</h3>\n            <div class=\"details-list\">\n              <div v-for=\"(item, index) in reportIndicators\" :key=\"index\" class=\"detail-item\">\n                <span class=\"indicator-name\">{{ item }}</span>\n                <span class=\"score-value\" :class=\"getScoreClass(reportValues[index])\">\n                  {{ reportValues[index] }}分 ({{ getScoreLevel(reportValues[index]) }})\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <!-- 详细分析区域 -->\n          <div class=\"analysis-container\">\n            <h3 class=\"analysis-title\">详细分析</h3>\n\n            <div class=\"analysis-section\">\n              <h4>专业知识水平</h4>\n              <p>{{ professionalKnowledgeAnalysis || '暂无数据' }}</p>\n              <p v-if=\"firstQuestion\"><strong>问题:</strong> {{ firstQuestion }}</p>\n              <p v-if=\"firstResult\"><strong>回答:</strong> {{ firstResult }}</p>\n            </div>\n\n            <div class=\"analysis-section\">\n              <h4>技能匹配度</h4>\n              <p>{{ skillMatchAnalysis || '暂无数据' }}</p>\n              <p v-if=\"secondQuestion\"><strong>问题:</strong> {{ secondQuestion }}</p>\n              <p v-if=\"secondResult\"><strong>回答:</strong> {{ secondResult }}</p>\n            </div>\n\n            <div class=\"analysis-section\">\n              <h4>语言表达能力</h4>\n              <p>{{ languageExpressionAnalysis || '暂无数据' }}</p>\n              <p v-if=\"thirdQuestion\"><strong>问题:</strong> {{ thirdQuestion }}</p>\n              <p v-if=\"thirdResult\"><strong>回答:</strong> {{ thirdResult }}</p>\n            </div>\n\n            <div class=\"analysis-section\">\n              <h4>逻辑思维能力</h4>\n              <p>{{ logicalThinkingAnalysis || '暂无数据' }}</p>\n              <p v-if=\"fourthQuestion\"><strong>问题:</strong> {{ fourthQuestion }}</p>\n              <p v-if=\"fourthResult\"><strong>回答:</strong> {{ fourthResult }}</p>\n            </div>\n\n            <div class=\"analysis-section\">\n              <h4>创新能力</h4>\n              <p>{{ innovationAbilityAnalysis || '暂无数据' }}</p>\n              <p v-if=\"fifthQuestion\"><strong>问题:</strong> {{ fifthQuestion }}</p>\n              <p v-if=\"fifthResult\"><strong>回答:</strong> {{ fifthResult }}</p>\n            </div>\n          </div>\n          <!-- 在报告的详细分析区域下方添加新内容 -->\n          <div class=\"analysis-container\">\n            <h3 class=\"analysis-title\">关键问题定位</h3>\n            <div class=\"issue-location\">\n              <p>{{ keyIssues || '暂无关键问题定位' }}</p>\n\n              <div v-if=\"issueExamples && issueExamples.length\">\n                <h4>具体表现示例:</h4>\n                <ul>\n                  <li v-for=\"(example, index) in issueExamples\" :key=\"index\">\n                    {{ example }}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"analysis-container\">\n            <h3 class=\"analysis-title\">反馈建议</h3>\n            <div class=\"feedback-suggestions\">\n              <div v-if=\"feedbackCategories && feedbackCategories.length\">\n                <div v-for=\"(category, catIndex) in feedbackCategories\" :key=\"catIndex\" class=\"feedback-category\">\n                  <h4>{{ category.title }}</h4>\n                  <ul>\n                    <li v-for=\"(suggestion, sugIndex) in category.suggestions\" :key=\"sugIndex\">\n                      {{ suggestion }}\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <p v-else>暂无具体反馈建议</p>\n            </div>\n          </div>\n          <!-- 综合评价 -->\n          <div class=\"summary-container\">\n            <h3 class=\"summary-title\">综合评价与建议</h3>\n            <div class=\"summary-content\">\n              <p>{{ comprehensiveEvaluation || '暂无综合评价' }}</p>\n\n              <h4>改进建议</h4>\n              <ul v-if=\"improvementSuggestions.length\">\n                <li v-for=\"(suggestion, index) in improvementSuggestions\" :key=\"index\">\n                  {{ suggestion }}\n                </li>\n              </ul>\n              <p v-else>暂无建议</p>\n            </div>\n          </div>\n\n          <!-- 响应体展示区域 -->\n          <div class=\"response-body-container\">\n            <h3 class=\"response-body-title\">原始响应数据</h3>\n            <div class=\"response-body-content\">\n              <pre>{{ formattedReportResponse }}</pre>\n            </div>\n          </div>\n        </div>\n      </div>\n    </van-popup>\n\n    <!-- 录音提示 -->\n    <div v-if=\"isRecording\" class=\"recording-indicator\">\n      <div class=\"recording-dot\"></div>\n      <p>正在录音...{{ recordingSeconds }}s</p>\n      <p>松开结束录音</p>\n    </div>\n\n    <!-- 服务状态提示 -->\n    <div class=\"status-bar\" :class=\"statusClass\" style=\"z-index: 998;\">\n      {{ statusText }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Chart, registerables, RadarController } from 'chart.js';\n\nexport default {\n  data() {\n    return {\n    // 弹窗初始位置和尺寸（可根据需求调整）\n      popupWidth: 300,\n      popupHeight: 600,\n      popupLeft: 500,\n      popupTop: 100,\n      \n      // 拖拽相关状态\n      isDragging: false,\n      startX: 0,\n      startY: 0,\n      \n      // 调整大小相关状态\n      isResizing: false,\n      startWidth: 0,\n      startHeight: 0,\n      msg: {\n        // 提前初始化 expressionResults 为数组，避免 undefined\n        expressionResults: []\n      },\n      // 关键问题定位\n      keyIssues: '',\n      issueExamples: [],\n\n      // 反馈建议\n      feedbackCategories: [],\n\n      name: this.$route.params.name,\n      message: \"\",\n      messages: [],\n      isTyping: false,\n      typingId: \"\",\n      API_BASE_URL: 'https://123.56.203.202',\n      statusText: '连接中...',\n      statusClass: 'text-xs text-gray-500 mt-2 text-center',\n      commonHeaders: {\n        'ngrok-skip-browser-warning': '1'\n      },\n\n      // 语音相关状态\n      isRecording: false,\n      mediaRecorder: null,\n      audioBlob: null,\n      recordingSeconds: 0,\n      recordingTimer: null,\n      audioContext: null,\n      audioElements: {},\n      mediaStream: null,\n      audioChunks: [],\n      transcribeCount: 0, // 转写计数，用于跟踪是第几次转写\n\n      // 相机相关状态\n      isCameraModalVisible: false,\n      isCameraActive: false,\n      isLoadingCamera: false,\n      cameraError: null,\n      isProcessingImage: false,\n      isAnalyzingContinuously: false,\n      continuousAnalysisTimer: null,\n      detectionInterval: null,\n      videoStream: null,\n\n      // 评测报告相关状态\n      isReportVisible: false,\n      reportLoading: false,\n      reportError: '',\n      chart: null,\n      reportResponse: null, // 存储原始响应数据\n\n      // 报告数据 - 五个维度\n      reportIndicators: [\n        '专业知识水平',\n        '技能匹配度',\n        '语言表达能力',\n        '逻辑思维能力',\n        '创新能力'\n      ],\n      reportValues: [60, 60, 60, 60, 60],\n\n      // 问题和答案存储\n      firstQuestion: '',\n      secondQuestion: '',\n      thirdQuestion: '',\n      fourthQuestion: '',\n      fifthQuestion: '',\n      firstResult: '',\n      secondResult: '',\n      thirdResult: '',\n      fourthResult: '',\n      fifthResult: '',\n\n      // 详细分析数据\n      professionalKnowledgeAnalysis: '', // 专业知识水平\n      skillMatchAnalysis: '', // 技能匹配度\n      languageExpressionAnalysis: '', // 语言表达能力\n      logicalThinkingAnalysis: '', // 逻辑思维能力\n      innovationAbilityAnalysis: '', // 创新能力\n      comprehensiveEvaluation: '',\n      improvementSuggestions: []\n    };\n  },\n  computed: {\n    // 格式化响应体数据用于展示\n    formattedReportResponse() {\n      if (!this.reportResponse) return '无响应数据';\n      return JSON.stringify(this.reportResponse, null, 2);\n    }\n  },\n  mounted() {\n    this.testConnection();\n    this.initContainerHeight();\n    window.addEventListener('resize', this.initContainerHeight);\n    this.checkRecordingSupport();\n\n    // 从localStorage加载已保存的问题和答案\n    this.loadStoredQuestionsAndAnswers();\n\n    // 注册Chart.js组件\n    Chart.register(...registerables);\n    Chart.register(RadarController);\n    window.Chart = Chart;\n\n\n\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.initContainerHeight);\n    this.stopRecording();\n    Object.values(this.audioElements).forEach(audio => {\n      if (audio) {\n        audio.pause();\n      }\n    });\n\n    // 清理相机相关资源\n    this.stopCamera();\n    if (this.continuousAnalysisTimer) {\n      clearInterval(this.continuousAnalysisTimer);\n    }\n    if (this.detectionInterval) {\n      clearInterval(this.detectionInterval);\n    }\n\n    // 销毁图表\n    if (this.chart) {\n      this.chart.destroy();\n    }\n  },\n  methods: {\n     // 开始拖拽弹窗\n    startDrag(e) {\n      this.isDragging = true;\n      // 记录初始鼠标位置和弹窗位置\n      this.startX = e.clientX;\n      this.startY = e.clientY;\n      \n      // 绑定鼠标移动和释放事件\n      document.addEventListener('mousemove', this.handleDrag);\n      document.addEventListener('mouseup', this.stopDrag);\n      e.preventDefault(); // 防止拖动时选中文本\n    },\n    \n    // 处理拖拽逻辑\n    handleDrag(e) {\n      if (!this.isDragging) return;\n      \n      // 计算鼠标移动距离\n      const deltaX = e.clientX - this.startX;\n      const deltaY = e.clientY - this.startY;\n      \n      // 更新弹窗位置（限制在可视区域内）\n      const newLeft = this.popupLeft + deltaX;\n      const newTop = this.popupTop + deltaY;\n      \n      // 限制左边界不小于0\n      this.popupLeft = Math.max(0, newLeft);\n      // 限制上边界不小于0\n      this.popupTop = Math.max(0, newTop);\n      // 限制右边界不超过窗口宽度\n      this.popupLeft = Math.min(window.innerWidth - this.popupWidth, this.popupLeft);\n      // 限制下边界不超过窗口高度\n      this.popupTop = Math.min(window.innerHeight - this.popupHeight, this.popupTop);\n      \n      // 更新初始位置（用于下一次计算）\n      this.startX = e.clientX;\n      this.startY = e.clientY;\n    },\n    \n    // 停止拖拽\n    stopDrag() {\n      this.isDragging = false;\n      document.removeEventListener('mousemove', this.handleDrag);\n      document.removeEventListener('mouseup', this.stopDrag);\n    },\n    \n    // 开始调整大小\n    startResize(e) {\n      this.isResizing = true;\n      // 记录初始鼠标位置和弹窗尺寸\n      this.startX = e.clientX;\n      this.startY = e.clientY;\n      this.startWidth = this.popupWidth;\n      this.startHeight = this.popupHeight;\n      \n      // 绑定鼠标移动和释放事件\n      document.addEventListener('mousemove', this.handleResize);\n      document.addEventListener('mouseup', this.stopResize);\n      e.preventDefault(); // 防止拖动时选中文本\n    },\n    \n    // 处理调整大小逻辑\n    handleResize(e) {\n      if (!this.isResizing) return;\n      \n      // 计算鼠标移动距离（控制宽高变化）\n      const deltaWidth = e.clientX - this.startX;\n      const deltaHeight = e.clientY - this.startY;\n      \n      // 计算新的宽高（设置最小尺寸限制，避免过小）\n      const minWidth = 200;\n      const minHeight = 300;\n      this.popupWidth = Math.max(minWidth, this.startWidth + deltaWidth);\n      this.popupHeight = Math.max(minHeight, this.startHeight + deltaHeight);\n      \n      // 限制最大尺寸不超过窗口\n      this.popupWidth = Math.min(window.innerWidth - 50, this.popupWidth);\n      this.popupHeight = Math.min(window.innerHeight - 50, this.popupHeight);\n    },\n    \n    // 停止调整大小\n    stopResize() {\n      this.isResizing = false;\n      document.removeEventListener('mousemove', this.handleResize);\n      document.removeEventListener('mouseup', this.stopResize);\n    },\n    // 从localStorage加载已保存的问题和答案\n    loadStoredQuestionsAndAnswers() {\n      // 硬编码设置指定的五个问题到localStorage（如果不存在）\n      const defaultQuestions = [\n        {\n          id: \"firstQuestion\",\n          content: \"请详细阐述您对人工智能技术岗领域中核心概念和技术的理解，以及您在实际项目中如何应用这些知识解决问题。\"\n        },\n        {\n          id: \"secondQuestion\",\n          content: \"在人工智能技术岗岗位上，您认为哪些关键技能是必不可少的？请举例说明您在这些技能方面的掌握程度和实际应用经验。\"\n        },\n        {\n          id: \"thirdQuestion\",\n          content: \"请描述一次您需要向非技术团队成员清晰解释人工智能技术岗相关复杂技术概念的经历。您采用了什么方法确保对方理解？\"\n        },\n        {\n          id: \"fourthQuestion\",\n          content: \"在人工智能技术岗工作中，当面对一个复杂问题时，您的分析和解决问题的逻辑步骤是什么？请分享一个具体案例。\"\n        },\n        {\n          id: \"fifthQuestion\",\n          content: \"请分享一个您在人工智能技术岗相关项目中提出创新解决方案的经历。您是如何发现问题并提出新颖的解决思路的？\"\n        }\n      ];\n\n      // 初始化localStorage中的问题（如果不存在）\n      defaultQuestions.forEach(question => {\n        if (!localStorage.getItem(question.id)) {\n          localStorage.setItem(question.id, question.content);\n        }\n      });\n\n      // 从localStorage加载问题到组件\n      this.firstQuestion = localStorage.getItem(\"firstQuestion\") || '';\n      this.secondQuestion = localStorage.getItem(\"secondQuestion\") || '';\n      this.thirdQuestion = localStorage.getItem(\"thirdQuestion\") || '';\n      this.fourthQuestion = localStorage.getItem(\"fourthQuestion\") || '';\n      this.fifthQuestion = localStorage.getItem(\"fifthQuestion\") || '';\n\n      // 从localStorage加载答案到组件\n      this.firstResult = localStorage.getItem(\"firstResult\") || '';\n      this.secondResult = localStorage.getItem(\"secondResult\") || '';\n      this.thirdResult = localStorage.getItem(\"thirdResult\") || '';\n      this.fourthResult = localStorage.getItem(\"fourthResult\") || '';\n      this.fifthResult = localStorage.getItem(\"fifthResult\") || '';\n    },\n\n    startInterviewProcess() {\n  // 模拟avatarPlatform2已实例化\n  const avatarPlatform2 = true;\n\n  if (avatarPlatform2) {\n    // 初始调用 - 问候语（带自动播放视频）\n    let username = localStorage.getItem(\"username\") || \"候选人\";\n    let career = localStorage.getItem(\"career\") || \"相关岗位\";\n    let text = `你好，${username}，欢迎面试${career}。接下来将进行面试环节，共有五道题目，涉及专业知识水平、技能匹配度、语言表达能力、逻辑思维能力和创新能力五个维度。请认真思考后回答。`;\n\n    // 创建视频元素并设置自动播放\n    const videoElement = document.createElement('video');\n    videoElement.controls = true; // 显示播放控件\n    videoElement.autoplay = true; // 自动播放\n    videoElement.muted = false; // 不静音\n    videoElement.style.width = \"100%\";\n    videoElement.style.maxWidth = \"600px\";\n    videoElement.style.marginTop = \"15px\";\n\n    // 添加视频源\n    const sourceElement = document.createElement('source');\n    sourceElement.src = \"https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Crengongzhinengjishugang.mp4\";\n    sourceElement.type = \"video/mp4\";\n    videoElement.appendChild(sourceElement);\n\n    // 处理自动播放限制的兼容方案\n    videoElement.addEventListener('canplaythrough', () => {\n      // 尝试播放，处理浏览器自动播放政策限制\n      videoElement.play().catch(e => {\n        console.log('自动播放被浏览器限制，需要用户交互后播放:', e);\n        // 显示提示让用户手动播放\n        const playPrompt = document.createElement('p');\n        playPrompt.style.color = '#666';\n        playPrompt.style.fontSize = '14px';\n        playPrompt.textContent = '提示：请点击播放按钮观看面试说明';\n        messageContainer.appendChild(playPrompt);\n      });\n    });\n\n    // 创建包含文本和视频的容器\n    const messageContainer = document.createElement('div');\n    messageContainer.innerHTML = `<p>${text}</p>`;\n    messageContainer.appendChild(videoElement);\n\n    // 添加不支持视频的提示\n    const fallbackText = document.createTextNode(\"您的浏览器不支持视频播放功能\");\n    messageContainer.appendChild(fallbackText);\n\n    // 添加消息到界面\n    this.addMessage('ai', text, 'text');\n\n    // 设置30秒后自动显示面试题弹窗（横向单题展示）\n    setTimeout(() => {\n      // 硬编码岗位为人工智能技术岗\n      const career = \"人工智能技术岗\";\n\n      // 五道题目的文本内容\n      const questions = [\n        {\n          title: \"第一道题\",\n          text: '',\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Crengongzhinengjishugang1.mp4\",\n          id: \"first\"\n        },\n        {\n          title: \"第二道题\",\n          text: '',\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Crengongzhinengjishugang2.mp4\",\n          id: \"second\"\n        },\n        {\n          title: \"第三道题\",\n          text: '',\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Crengongzhinengjishugang3.mp4\",\n          id: \"third\"\n        },\n        {\n          title: \"第四道题\",\n          text: '',\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Crengongzhinengjishugang4.mp4\",\n          id: \"fourth\"\n        },\n        {\n          title: \"第五道题\",\n          text: '',\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Crengongzhinengjishugang5.mp4\",\n          id: \"fifth\"\n        }\n      ];\n\n      // 当前题目索引\n      let currentIndex = 0;\n\n      // 弹窗位置和大小的默认值\n      const defaultWidth = 800;\n      const defaultHeight = 600;\n      const defaultLeft = (window.innerWidth - defaultWidth) / 2;\n      const defaultTop = (window.innerHeight - defaultHeight) / 2;\n\n      // 创建弹窗元素（背景遮罩）\n      const modal = document.createElement('div');\n      modal.style.cssText = `\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\nbackground: rgba(0,0,0,0.5);\n\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: rgba(0,0,0,0.1); /* 降低透明度 */\n  z-index: 999; /* 降低z-index，确保主页面元素可交互 */\n  pointer-events: none; /* 关键：允许点击穿透遮罩层 */\n`;\n\n      // 创建可拖拽的弹窗容器\n      const draggableModal = document.createElement('div');\n      draggableModal.style.cssText = `\nwidth: ${defaultWidth}px;\nheight: ${defaultHeight}px;\nleft: ${defaultLeft}px;\ntop: ${defaultTop}px;\nposition: absolute;\nbox-shadow: 0 4px 20px rgba(0,0,0,0.15);\nborder-radius: 12px;\noverflow: hidden;\ndisplay: flex;\nflex-direction: column;\nz-index: 1000; /* 确保弹窗在遮罩层上方 */\n  pointer-events: auto; /* 确保弹窗自身可交互 */\n`;\n\n      // 弹窗标题栏（可拖拽区域）\n      const modalHeader = document.createElement('div');\n      \n      modalHeader.style.cssText = `\nbackground: #f8f9fa;\npadding: 15px 20px;\nborder-bottom: 1px solid #eee;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\ncursor: move;\n`;\n      \n      // 标题文本\n      const headerTitle = document.createElement('h3');\n      headerTitle.textContent = '面试题目';\n      headerTitle.style.cssText = `\nmargin: 0;\nfont-size: 16px;\ncolor: #333;\n`;\n      \n      // 关闭按钮\n      const closeButton = document.createElement('button');\n      closeButton.innerHTML = '×';\n      closeButton.style.cssText = `\nbackground: none;\nborder: none;\nfont-size: 20px;\ncursor: pointer;\ncolor: #666;\npadding: 0 10px;\nline-height: 1;\n`;\n      \n      modalHeader.appendChild(headerTitle);\n      modalHeader.appendChild(closeButton);\n      // 就在这里添加关闭按钮的点击事件（这是关键的添加位置）\ncloseButton.addEventListener('click', () => {\n  if (confirm('确定要关闭吗？已填写的回答可能会丢失。')) {\n    document.body.removeChild(modal);\n  }\n});\n\n      // 弹窗内容容器\n      const modalContainer = document.createElement('div');\n      modalContainer.style.cssText = `\nbackground: white;\nflex: 1;\ndisplay: flex;\nflex-direction: column;\noverflow: hidden;\n`;\n\n      // 题目导航指示器\n      const progressIndicator = document.createElement('div');\n      progressIndicator.id = 'progressIndicator';\n      progressIndicator.style.cssText = `\ndisplay: flex;\njustify-content: center;\nmargin: 15px 0;\ngap: 8px;\npadding: 0 20px;\n`;\n\n      // 创建进度点\n      questions.forEach((_, index) => {\n        const dot = document.createElement('div');\n        dot.id = `progress-${index}`;\n        dot.style.cssText = `\nwidth: 12px;\nheight: 12px;\nborder-radius: 50%;\nbackground: #ddd;\ntransition: all 0.3s ease;\n`;\n        progressIndicator.appendChild(dot);\n      });\n\n      // 题目内容区域 - 添加滚动功能\n      const questionContentWrapper = document.createElement('div');\n      questionContentWrapper.style.cssText = `\nflex: 1;\noverflow-y: auto;\npadding: 0 20px;\n`;\n\n      // 题目内容容器\n      const questionContent = document.createElement('div');\n      questionContent.id = 'questionContent';\n      questionContentWrapper.appendChild(questionContent);\n\n      // 按钮区域\n      const buttonContainer = document.createElement('div');\n      buttonContainer.style.cssText = `\ndisplay: flex;\njustify-content: space-between;\npadding: 15px 20px;\nborder-top: 1px solid #eee;\n`;\n\n      // 上一题按钮\n      const prevButton = document.createElement('button');\n      prevButton.textContent = '上一题';\n      prevButton.style.cssText = `\nbackground: #f0f0f0;\ncolor: #333;\nborder: none;\npadding: 10px 20px;\nborder-radius: 6px;\ncursor: pointer;\nfont-size: 14px;\ntransition: background 0.3s;\n`;\n      prevButton.addEventListener('mouseover', () => prevButton.style.background = '#e0e0e0');\n      prevButton.addEventListener('mouseout', () => prevButton.style.background = '#f0f0f0');\n\n      // 下一题/提交按钮\n      const nextButton = document.createElement('button');\n      nextButton.textContent = '下一题';\n      nextButton.style.cssText = `\nbackground: #4CAF50;\ncolor: white;\nborder: none;\npadding: 10px 20px;\nborder-radius: 6px;\ncursor: pointer;\nfont-size: 14px;\ntransition: background 0.3s;\n`;\n      nextButton.addEventListener('mouseover', () => nextButton.style.background = '#45a049');\n      nextButton.addEventListener('mouseout', () => nextButton.style.background = '#4CAF50');\n\n      // 右下角调整大小手柄\n      const resizeHandle = document.createElement('div');\n      resizeHandle.style.cssText = `\nposition: absolute;\nright: 0;\nbottom: 0;\nwidth: 15px;\nheight: 15px;\ncursor: nwse-resize;\nbackground: #4CAF50;\nborder-radius: 4px 0 0 0;\n`;\n\n      // 组装弹窗\n      buttonContainer.appendChild(prevButton);\n      buttonContainer.appendChild(nextButton);\n      modalContainer.appendChild(progressIndicator);\n      modalContainer.appendChild(questionContentWrapper);\n      modalContainer.appendChild(buttonContainer);\n      draggableModal.appendChild(modalHeader);\n      draggableModal.appendChild(modalContainer);\n      draggableModal.appendChild(resizeHandle);\n      modal.appendChild(draggableModal);\n      document.body.appendChild(modal);\n\n      // 渲染当前题目\n      function renderCurrentQuestion() {\n        const question = questions[currentIndex];\n\n        // 更新进度指示器\n        document.querySelectorAll('#progressIndicator div').forEach((dot, index) => {\n          if (index < currentIndex) {\n            dot.style.background = '#4CAF50'; // 已完成\n          } else if (index === currentIndex) {\n            dot.style.background = '#2196F3'; // 当前\n            dot.style.transform = 'scale(1.2)';\n          } else {\n            dot.style.background = '#ddd'; // 未完成\n            dot.style.transform = 'scale(1)';\n          }\n        });\n\n        // 检查是否有已保存的回答\n        const savedAnswer = localStorage.getItem(`${question.id}Result`) || '';\n\n        // 渲染题目内容，包含语音识别控件\n        questionContent.innerHTML = `\n<h2 style=\"margin-top: 0; color: #333; font-size: 20px;\">${question.title}</h2>\n<p style=\"font-size: 16px; line-height: 1.6; color: #555; margin: 15px 0;\">${question.text}</p>\n\n<div style=\"margin: 20px 0;\">\n  <p style=\"margin-bottom: 10px; font-weight: 500;\">相关视频参考：</p>\n  <video controls style=\"width: 100%; max-height: 300px; object-fit: contain;\">\n    <source src=\"${question.videoUrl}\" type=\"video/mp4\">\n    您的浏览器不支持视频播放\n   </video>\n</div>\n\n<!-- 语音输入控件 -->\n<div style=\"margin: 15px 0; padding: 15px; background: #f9f9f9; border-radius: 6px;\">\n  <div style=\"display: flex; gap: 10px; margin-bottom: 15px;\">\n    <button id=\"startRecord\" style=\"background: #4CAF50; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer;\">\n      开始录音\n    </button>\n    <button id=\"stopRecord\" style=\"background: #f44336; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; display: none;\">\n      停止录音\n    </button>\n  </div>\n  \n  <!-- 语音分析结果展示 -->\n  <div style=\"font-size: 14px; color: #666; margin-top: 10px;\">\n    <p>语调状态：<span id=\"toneStatus\">未检测</span></p>\n    <p>语速：<span id=\"speedStatus\">未计算</span>（字/秒）</p>\n    <p>录音时长：<span id=\"recordTime\">0秒</span></p>\n  </div>\n</div>\n\n<textarea id=\"${question.id}Answer\" style=\"width: 100%; height: 200px; margin: 15px 0; padding: 12px; box-sizing: border-box; border: 1px solid #ddd; border-radius: 6px; font-size: 14px; resize: vertical;\" placeholder=\"请输入您的回答...\">${savedAnswer}</textarea>\n`;\n\n        // 初始化语音识别和音频分析\n        initSpeechRecognition(question.id);\n\n        // 更新按钮状态\n        prevButton.disabled = currentIndex === 0;\n        prevButton.style.opacity = currentIndex === 0 ? '0.5' : '1';\n        prevButton.style.cursor = currentIndex === 0 ? 'not-allowed' : 'pointer';\n\n        // 最后一题显示提交按钮\n        if (currentIndex === questions.length - 1) {\n          nextButton.textContent = '提交回答';\n          nextButton.style.background = '#2196F3';\n        } else {\n          nextButton.textContent = '下一题';\n          nextButton.style.background = '#4CAF50';\n        }\n\n        // 重置滚动位置到顶部\n        questionContentWrapper.scrollTop = 0;\n      }\n\n      // 初始化语音识别和音频分析\n      function initSpeechRecognition(questionId) {\n        const startBtn = document.getElementById('startRecord');\n        const stopBtn = document.getElementById('stopRecord');\n        const toneStatus = document.getElementById('toneStatus');\n        const speedStatus = document.getElementById('speedStatus');\n        const recordTime = document.getElementById('recordTime');\n        const answerTextarea = document.getElementById(`${questionId}Answer`);\n\n        // 语音识别相关变量\n        let recognition;\n        let isRecording = false;\n        let recordStartTime = 0;\n        let recordDuration = 0; // 录音时长（秒）\n        let mediaRecorder;\n        let audioContext;\n        let analyser;\n        let dataArray;\n        let animationId;\n\n        // 初始化语音识别（基于Web Speech API）\n        function initRecognition() {\n          const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n          if (!SpeechRecognition) {\n            alert('您的浏览器不支持语音识别功能，请使用Chrome等现代浏览器');\n            return null;\n          }\n          const rec = new SpeechRecognition();\n          rec.continuous = true; // 持续识别\n          rec.interimResults = true; // 返回中间结果\n          rec.lang = 'zh-CN'; // 中文识别\n          return rec;\n        }\n\n        // 初始化音频分析器（检测语调）\n        function initAudioAnalyser(stream) {\n          audioContext = new (window.AudioContext || window.webkitAudioContext)();\n          analyser = audioContext.createAnalyser();\n          const source = audioContext.createMediaStreamSource(stream);\n          source.connect(analyser);\n          analyser.fftSize = 256; // 快速傅里叶变换大小\n          const bufferLength = analyser.frequencyBinCount;\n          dataArray = new Uint8Array(bufferLength);\n        }\n\n        // 实时分析语调（基于频率）\n        function analyzeTone() {\n          if (!isRecording) return;\n          analyser.getByteFrequencyData(dataArray);\n\n          // 计算平均频率（简单模拟语调：频率越高，语调越高）\n          let sum = 0;\n          dataArray.forEach(value => sum += value);\n          const averageFreq = sum / dataArray.length;\n\n          // 更新语调状态\n          if (averageFreq > 80) {\n            toneStatus.textContent = '语调偏高（情绪较激动）';\n            toneStatus.style.color = '#e53935';\n          } else if (averageFreq > 40) {\n            toneStatus.textContent = '语调适中';\n            toneStatus.style.color = '#43a047';\n          } else {\n            toneStatus.textContent = '语调偏低（情绪较平稳）';\n            toneStatus.style.color = '#1e88e5';\n          }\n\n          animationId = requestAnimationFrame(analyzeTone);\n        }\n\n        // 开始录音\n        startBtn.addEventListener('click', async () => {\n          if (isRecording) return;\n          isRecording = true;\n          startBtn.style.display = 'none';\n          stopBtn.style.display = 'inline-block';\n          recordStartTime = Date.now();\n\n          // 启动语音识别\n          recognition = initRecognition();\n          if (!recognition) return;\n          recognition.start();\n          recognition.onresult = (event) => {\n            // 拼接识别结果\n            let transcript = '';\n            for (let i = 0; i < event.results.length; i++) {\n              transcript += event.results[i][0].transcript;\n            }\n            answerTextarea.value = transcript; // 填充到文本框\n          };\n\n          // 启动音频流和分析器\n          try {\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            mediaRecorder = new MediaRecorder(stream);\n            mediaRecorder.start();\n            initAudioAnalyser(stream);\n            analyzeTone(); // 开始实时语调分析\n\n            // 实时更新录音时长\n            function updateRecordTime() {\n              if (!isRecording) return;\n              recordDuration = Math.floor((Date.now() - recordStartTime) / 1000);\n              recordTime.textContent = `${recordDuration}秒`;\n              requestAnimationFrame(updateRecordTime);\n            }\n            updateRecordTime();\n          } catch (err) {\n            console.error('录音权限获取失败：', err);\n            alert('请允许麦克风权限以使用语音输入功能');\n            stopRecording();\n          }\n        });\n\n        // 停止录音\n        function stopRecording() {\n          if (!isRecording) return;\n          isRecording = false;\n          startBtn.style.display = 'inline-block';\n          stopBtn.style.display = 'none';\n          cancelAnimationFrame(animationId);\n\n          // 停止语音识别\n          if (recognition) recognition.stop();\n          // 停止录音\n          if (mediaRecorder) mediaRecorder.stop();\n          // 关闭音频上下文\n          if (audioContext) audioContext.close();\n\n          // 计算语速（字数 / 录音时长）\n          const text = answerTextarea.value.trim();\n          const charCount = text.length; // 文本长度（字数）\n          if (recordDuration > 0) {\n            const speed = (charCount / recordDuration).toFixed(1); // 保留1位小数\n            speedStatus.textContent = `${speed}字/秒`;\n\n            // 语速提示（参考：正常中文语速约2-3字/秒）\n            if (speed < 1.5) {\n              speedStatus.style.color = '#e53935';\n              speedStatus.textContent += '（偏慢）';\n            } else if (speed > 3.5) {\n              speedStatus.style.color = '#e53935';\n              speedStatus.textContent += '（偏快）';\n            } else {\n              speedStatus.style.color = '#43a047';\n              speedStatus.textContent += '（正常）';\n            }\n          }\n        }\n\n        stopBtn.addEventListener('click', stopRecording);\n      }\n\n      // 上一题按钮事件\n      prevButton.addEventListener('click', () => {\n        if (currentIndex > 0) {\n          // 保存当前回答\n          saveCurrentAnswer();\n          currentIndex--;\n          renderCurrentQuestion();\n        }\n      });\n\n      // 下一题/提交按钮事件\n      nextButton.addEventListener('click', () => {\n        const currentAnswer = document.querySelector(`#${questions[currentIndex].id}Answer`).value.trim();\n\n        // 验证当前回答\n        if (!currentAnswer) {\n          alert(`请完成${questions[currentIndex].title}的回答`);\n          return;\n        }\n\n        // 保存当前回答\n        saveCurrentAnswer();\n\n        // 最后一题则提交所有\n        if (currentIndex === questions.length - 1) {\n          // 提交所有回答\n          questions.forEach(question => {\n            const answer = localStorage.getItem(`${question.id}Result`) || '';\n            this.addMessage('user', `【${question.title}回答】${answer}`, 'text');\n          });\n\n          alert('所有回答已提交成功！');\n          document.body.removeChild(modal);\n        } else {\n          // 进入下一题\n          currentIndex++;\n          renderCurrentQuestion();\n        }\n      });\n\n      // 保存当前题目的回答\n      function saveCurrentAnswer() {\n        const question = questions[currentIndex];\n        const answer = document.querySelector(`#${question.id}Answer`).value.trim();\n        if (answer) {\n          localStorage.setItem(`${question.id}Result`, answer);\n        }\n      }\n\n      \n      // 拖拽功能实现\n      let isDragging = false;\n      let startX, startY, initialLeft, initialTop;\n\n      modalHeader.addEventListener('mousedown', (e) => {\n        isDragging = true;\n        startX = e.clientX;\n        startY = e.clientY;\n        initialLeft = parseInt(draggableModal.style.left);\n        initialTop = parseInt(draggableModal.style.top);\n        \n        // 添加拖拽时的样式\n        draggableModal.style.transition = 'none';\n        modalHeader.style.background = '#e9ecef';\n        \n        document.addEventListener('mousemove', handleDrag);\n        document.addEventListener('mouseup', stopDrag);\n        \n        e.preventDefault();\n      });\n\n      function handleDrag(e) {\n        if (!isDragging) return;\n        \n        const deltaX = e.clientX - startX;\n        const deltaY = e.clientY - startY;\n        \n        // 计算新位置并限制在窗口内\n        let newLeft = initialLeft + deltaX;\n        let newTop = initialTop + deltaY;\n        \n        // 限制在窗口内\n        newLeft = Math.max(0, Math.min(newLeft, window.innerWidth - draggableModal.offsetWidth));\n        newTop = Math.max(0, Math.min(newTop, window.innerHeight - draggableModal.offsetHeight));\n        \n        draggableModal.style.left = `${newLeft}px`;\n        draggableModal.style.top = `${newTop}px`;\n      }\n\n      function stopDrag() {\n        isDragging = false;\n        modalHeader.style.background = '';\n        document.removeEventListener('mousemove', handleDrag);\n        document.removeEventListener('mouseup', stopDrag);\n      }\n\n      // 调整大小功能实现\n      let isResizing = false;\n      let startWidth, startHeight;\n\n      resizeHandle.addEventListener('mousedown', (e) => {\n        isResizing = true;\n        startX = e.clientX;\n        startY = e.clientY;\n        startWidth = draggableModal.offsetWidth;\n        startHeight = draggableModal.offsetHeight;\n        \n        // 移除过渡效果，使调整更流畅\n        draggableModal.style.transition = 'none';\n        \n        document.addEventListener('mousemove', handleResize);\n        document.addEventListener('mouseup', stopResize);\n        \n        e.preventDefault();\n      });\n\n      function handleResize(e) {\n        if (!isResizing) return;\n        \n        // 计算新尺寸\n        const minWidth = 500;\n        const minHeight = 400;\n        const newWidth = Math.max(minWidth, startWidth + (e.clientX - startX));\n        const newHeight = Math.max(minHeight, startHeight + (e.clientY - startY));\n        \n        // 限制最大尺寸不超过窗口\n        const maxWidth = window.innerWidth - 50;\n        const maxHeight = window.innerHeight - 50;\n        \n        draggableModal.style.width = `${Math.min(newWidth, maxWidth)}px`;\n        draggableModal.style.height = `${Math.min(newHeight, maxHeight)}px`;\n      }\n\n      function stopResize() {\n        isResizing = false;\n        document.removeEventListener('mousemove', handleResize);\n        document.removeEventListener('mouseup', stopResize);\n      }\n\n      // 初始化显示第一题\n      renderCurrentQuestion();\n    }, 40000);\n  } else {\n    this.showStatus(\"请先实例化SDK\", 'error');\n  }\n},\n    \n\n\n\n    // 返回主页面消息界面\n    backToHomeMessage() {\n      this.$router.push('/home/message');\n    },\n\n    // 发送文本消息\n    async sendMessage() {\n      let prompt = this.message.trim();\n      if (!prompt) return;\n\n      // 检测输入是否为特定指令\n      const isLogicAnalysis = prompt.toLowerCase().includes('分析语言逻辑');\n      const isGenerateReport = prompt.toLowerCase().includes('生成可视化评测报告');\n      let constructedPrompt = prompt;\n\n      // 处理\"分析语言逻辑\"指令\n      if (isLogicAnalysis) {\n        constructedPrompt = this.buildLogicAnalysisPrompt();\n      }\n      // 处理\"生成可视化评测报告\"指令\n      else if (isGenerateReport) {\n        constructedPrompt = this.buildEvaluationReportPrompt();\n      }\n\n      this.addMessage('user', prompt, 'text');\n      this.message = '';\n      this.scrollToBottom();\n\n      const typingId = this.addTypingIndicator();\n\n      try {\n        fetch(`${this.API_BASE_URL}/api/chat`, {\n          method: 'POST',\n          headers: {\n            ...this.commonHeaders,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ prompt: constructedPrompt })\n        }).then(response => {\n          this.removeTypingIndicator(typingId);\n\n          if (!response.ok) {\n            throw new Error(`请求失败: ${response.status}`);\n          }\n\n          return response.json();\n        }).then(data => {\n          if (data.status === 'success') {\n            const taskId = data.task_id;\n            const pollInterval = 20000; // 20秒轮询一次\n            const maxAttempts = 150;\n            let attempts = 0;\n\n            const pollForFile = () => {\n              if (attempts >= maxAttempts) {\n                this.addMessage('ai', '请求超时，请稍后再试', 'text', true);\n                this.scrollToBottom();\n                return;\n              }\n\n              attempts++;\n\n              fetch(`${this.API_BASE_URL}/get_task_file_url`, {\n                method: 'POST',\n                headers: {\n                  ...this.commonHeaders,\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ task_id: taskId })\n              })\n                .then(response => {\n                  return response.json().then(data => ({ data, response }));\n                })\n                .then(({ data, response }) => {\n                  console.log('文件查询响应:', data);\n\n                  // 成功获取到文件信息\n                  if (data.status === 'success') {\n                    // 优先使用Markdown文件（如果存在）\n                    const targetFile = data.markdown || data.txt;\n\n                    if (targetFile && targetFile.file_url) {\n                      fetch(targetFile.file_url, {\n                        method: 'GET',\n                        headers: this.commonHeaders\n                      })\n                        .then(fileResponse => {\n                          if (!fileResponse.ok) {\n                            throw new Error(`文件加载失败: ${fileResponse.status}`);\n                          }\n                          return fileResponse.text();\n                        })\n                        .then(fileContent => {\n                          if (fileContent.trim() === 'processing') {\n                            // 处理中，继续轮询\n                            this.addMessage('ai', `处理中...((${attempts}/${maxAttempts}))`, 'text');\n                            this.scrollToBottom();\n                            setTimeout(pollForFile, pollInterval);\n                          } else {\n                            // 处理完成，根据文件类型和指令类型选择渲染方式\n                            if (isGenerateReport) {\n                              // 评测报告额外处理雷达图数据\n                              this.addMessage('ai', `已生成可视化评测报告:`, 'text');\n                              this.processAndRenderReport(fileContent, data.markdown ? true : false);\n                            } else if (data.markdown) {\n                              // Markdown内容使用格式化渲染\n                              this.addMessage('ai', `已获取分析结果（Markdown格式）:`, 'text');\n                              this.addFormattedMessageWithSpaces(fileContent);\n                            } else {\n                              // TXT内容直接显示\n                              this.addMessage('ai', `已获取分析结果:`, 'text');\n                              this.addMessage('ai', fileContent, 'text');\n                            }\n                            this.scrollToBottom();\n                          }\n                        })\n                        .catch(() => {\n                          this.addMessage('ai', `文件加载中...((${attempts}/${maxAttempts}))`, 'text');\n                          this.scrollToBottom();\n                          setTimeout(pollForFile, pollInterval);\n                        });\n                    } else {\n                      // 未找到有效文件URL\n                      this.addMessage('ai', `未找到文件...((${attempts}/${maxAttempts}))`, 'text');\n                      this.scrollToBottom();\n                      setTimeout(pollForFile, pollInterval);\n                    }\n                  }\n                  // 未找到文件但可能在处理中\n                  else if (response.status === 404 ||\n                    (data.status === 'error' && data.message.includes('未找到'))) {\n                    this.addMessage('ai', `内容生成中...((${attempts}/${maxAttempts}))`, 'text');\n                    this.scrollToBottom();\n                    setTimeout(pollForFile, pollInterval);\n                  }\n                  // 其他错误\n                  else {\n                    this.addMessage('ai', `获取文件失败: ${data.message || '未知错误'}`, 'text', true);\n                    this.scrollToBottom();\n                  }\n                })\n                .catch(error => {\n                  console.error('轮询错误:', error);\n                  this.addMessage('ai', `连接中...((${attempts}/${maxAttempts}))`, 'text');\n                  this.scrollToBottom();\n                  setTimeout(pollForFile, pollInterval);\n                });\n            };\n\n            pollForFile();\n          } else {\n            this.addMessage('ai', `错误: ${data.result}`, 'text', true);\n          }\n          this.scrollToBottom();\n        }).catch(error => {\n          this.removeTypingIndicator(typingId);\n          this.addMessage('ai', `请求失败: ${error.message}`, 'text', true);\n          this.scrollToBottom();\n          console.error('发送消息失败:', error);\n        });\n      } catch (error) {\n        this.removeTypingIndicator(typingId);\n        this.addMessage('ai', `请求失败: ${error.message}`, 'text', true);\n        this.scrollToBottom();\n        console.error('发送消息失败:', error);\n      }\n    },\n\n    // 构建语言逻辑分析的prompt\n    buildLogicAnalysisPrompt() {\n      const questions = this.getInterviewQuestions();\n\n      let prompt = \"请以下面试问题及对应的回答，分析回答的语言逻辑和连贯性，并给出评分(0-100分)和简要分析：\\n\\n\";\n\n      questions.forEach((item, i) => {\n        if (item.answer) {\n          prompt += `第${i + 1}题：${item.question}\\n`;\n          prompt += `回答：${item.answer}\\n\\n`;\n        }\n      });\n\n      return prompt;\n    },\n\n    // 构建生成可视化评测报告的prompt（优化版）\n    buildEvaluationReportPrompt() {\n      const questions = this.getInterviewQuestions();\n      const dimensions = [\n        \"专业知识水平\",\n        \"技能匹配度\",\n        \"语言表达能力\",\n        \"逻辑思维能力\",\n        \"创新能力\"\n      ];\n\n      // 生成唯一标识符，用于精确界定雷达数据的位置\n      const radarDataMarker = `RADAR_DATA_${Date.now()}_START`;\n      const radarDataEndMarker = `RADAR_DATA_${Date.now()}_END`;\n\n      let prompt = \"请基于以下5个面试问题及对应回答，生成一份详细的可视化评测报告。\\n\\n\";\n      prompt += \"【格式要求非常严格，请严格遵守，否则将导致报告无法正常解析】\\n\";\n      prompt += \"报告必须包含以下几个部分，且按以下顺序排列：\\n\\n\";\n\n      // 1. 雷达图数据部分 - 格式严格限定\n      prompt += \"1. 能力雷达图数据：\\n\";\n      prompt += `   请在${radarDataMarker}和${radarDataEndMarker}标记之间，为以下5个维度分别评分(0-100分)，\\n`;\n      prompt += \"   每个维度单独一行，格式必须为【维度名称: 评分】，不允许有其他内容或格式变化\\n\";\n      prompt += `   维度名称：${dimensions.join('、')}\\n`;\n      prompt += `   示例格式：\\n`;\n      prompt += `   ${radarDataMarker}\\n`;\n      prompt += `   专业知识水平: 80\\n`;\n      prompt += `   技能匹配度: 70\\n`;\n      prompt += `   语言表达能力: 90\\n`;\n      prompt += `   逻辑思维能力: 60\\n`;\n      prompt += `   创新能力: 80\\n`;\n      prompt += `   ${radarDataEndMarker}\\n\\n`;\n\n      // 2. 关键问题定位\n      prompt += \"2. 关键问题定位：\\n\";\n      prompt += \"   请使用项目符号(-)列出回答中存在的主要问题，每条问题单独一行\\n\";\n      prompt += \"   例如：\\n\";\n      prompt += \"   - 回答缺乏STAR结构\\n\";\n      prompt += \"   - 对专业术语的解释不够清晰\\n\\n\";\n\n      // 3. 企业决策建议\n      prompt += \"3. 企业决策建议：\\n\";\n      prompt += \"   请明确给出是否推荐录用的建议，并提供3-5条具体理由，使用项目符号(-)列出\\n\\n\";\n\n      // 4. 求职者个性化改进建议\n      prompt += \"4. 求职者个性化改进建议：\\n\";\n      prompt += \"   针对每个维度的不足，提供具体可行的改进方法，每个维度单独成段，开头注明维度名称\\n\\n\";\n\n      // 5. Markdown格式要求\n      prompt += \"5. 整体使用Markdown格式输出，包含适当的标题层级：\\n\";\n      prompt += \"   - 主标题：# 人工智能技术岗面试可视化评测报告\\n\";\n      prompt += \"   - 各部分标题：## 1. 能力雷达图数据、## 2. 关键问题定位等\\n\\n\";\n\n      // 面试问题与回答\n      prompt += \"【面试问题及回答】\\n\";\n      questions.forEach((item, i) => {\n        if (item.answer) {\n          prompt += `第${i + 1}题（${dimensions[i]}）：${item.question}\\n`;\n          prompt += `回答：${item.answer}\\n\\n`;\n        }\n      });\n\n      // 存储标记以便后续解析\n      this.radarDataMarkers = {\n        start: radarDataMarker,\n        end: radarDataEndMarker\n      };\n\n      return prompt;\n    },\n\n    // 从localStorage获取面试问题和答案\n    getInterviewQuestions() {\n      return [\n        {\n          question: localStorage.getItem('firstQuestion') || '第一道题',\n          answer: localStorage.getItem('firstResult') || ''\n        },\n        {\n          question: localStorage.getItem('secondQuestion') || '第二道题',\n          answer: localStorage.getItem('secondResult') || ''\n        },\n        {\n          question: localStorage.getItem('thirdQuestion') || '第三道题',\n          answer: localStorage.getItem('thirdResult') || ''\n        },\n        {\n          question: localStorage.getItem('fourthQuestion') || '第四道题',\n          answer: localStorage.getItem('fourthResult') || ''\n        },\n        {\n          question: localStorage.getItem('fifthQuestion') || '第五道题',\n          answer: localStorage.getItem('fifthResult') || ''\n        }\n      ];\n    },\n\n    // 处理并渲染评测报告，包括雷达图\n    processAndRenderReport(content, isMarkdown) {\n      try {\n        // 使用预设的标记提取雷达图数据\n        const { start, end } = this.radarDataMarkers || {};\n        let radarDataSection = '';\n\n        if (start && end) {\n          const startIndex = content.indexOf(start);\n          const endIndex = content.indexOf(end);\n\n          if (startIndex !== -1 && endIndex !== -1 && endIndex > startIndex) {\n            // 提取标记之间的内容\n            radarDataSection = content.substring(\n              startIndex + start.length,\n              endIndex\n            ).trim();\n          } else {\n            console.warn('未找到完整的雷达图数据标记');\n          }\n        } else {\n          console.warn('未设置雷达图数据标记');\n        }\n\n        // 提取雷达图数据\n        const dimensions = [\n          \"专业知识水平\",\n          \"技能匹配度\",\n          \"语言表达能力\",\n          \"逻辑思维能力\",\n          \"创新能力\"\n        ];\n\n        const radarData = {};\n\n        // 按行解析\n        if (radarDataSection) {\n          const lines = radarDataSection.split('\\n');\n          lines.forEach(line => {\n            // 使用严格的正则匹配格式\n            const match = line.match(/^\\s*([^:]+?)\\s*:\\s*(\\d+)\\s*$/);\n            if (match && match[1] && match[2]) {\n              const dimension = match[1].trim();\n              const score = parseInt(match[2], 10);\n\n              // 只处理我们需要的维度，评分范围改为0-100\n              if (dimensions.includes(dimension) && score >= 0 && score <= 100) {\n                radarData[dimension] = score;\n              }\n            }\n          });\n        }\n\n        // 检查是否有缺失的维度\n        dimensions.forEach(dimension => {\n          if (radarData[dimension] === undefined) {\n            console.warn(`维度\"${dimension}\"的分数未找到或格式不正确`);\n            radarData[dimension] = 0; // 默认为0分\n          }\n        });\n\n        // 生成雷达图容器，调整雷达图大小为400px高度\n        const radarContainerId = `radar-chart-${Date.now()}`;\n        let radarChartHtml = `<div class=\"radar-chart-container\">\n      <h3>能力雷达图</h3>\n      <!-- 调整雷达图大小 -->\n      <canvas id=\"${radarContainerId}\" style=\"width: 100%; height: 400px; max-width: 600px; margin: 0 auto;\"></canvas>\n    </div>`;\n\n        // 处理报告内容\n        let processedContent;\n        if (isMarkdown) {\n          processedContent = this.processMarkdownContent(content);\n          processedContent = radarChartHtml + processedContent;\n        } else {\n          processedContent = `<div class=\"report-content\">\n        ${radarChartHtml}\n        <div class=\"text-content\">${content.replace(/\\n/g, '<br>')}</div>\n      </div>`;\n        }\n\n        // 添加到消息列表\n        this.messages.push({\n          sender: 'ai',\n          type: 'formatted',\n          content: processedContent\n        });\n\n        // 确保DOM已更新后再渲染图表\n        this.$nextTick(() => {\n          // 检查Chart.js是否已加载\n          if (typeof Chart === 'undefined') {\n            // 动态加载Chart.js\n            const script = document.createElement('script');\n            script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\n            script.onload = () => this.renderRadarChart(radarContainerId, radarData);\n            script.onerror = () => {\n              document.getElementById(radarContainerId).innerHTML =\n                '<p class=\"error-message\">无法加载图表库，请检查网络连接</p>';\n            };\n            document.head.appendChild(script);\n          } else {\n            this.renderRadarChart(radarContainerId, radarData);\n          }\n        });\n\n      } catch (error) {\n        console.error('处理评测报告失败:', error);\n        this.addMessage('ai', '评测报告处理失败，显示原始内容:', 'text', true);\n        this.addMessage('ai', content, 'text');\n      }\n    },\n\n    // 渲染雷达图\n    renderRadarChart(containerId, data) {\n      // 确保Chart.js已加载\n      if (typeof Chart === 'undefined') {\n        console.error('Chart.js未加载，无法渲染雷达图');\n        return;\n      }\n\n      // 增加重试机制\n      const maxRetries = 5;\n      let retries = 0;\n\n      const tryRender = () => {\n        const container = document.getElementById(containerId);\n\n        // 检查容器是否存在\n        if (!container) {\n          if (retries < maxRetries) {\n            retries++;\n            console.log(`重试获取图表容器 (${retries}/${maxRetries})`);\n            setTimeout(tryRender, 100); // 100ms后重试\n            return;\n          } else {\n            console.error(`无法找到ID为\"${containerId}\"的图表容器`);\n            return;\n          }\n        }\n\n        // 确保容器是canvas元素或包含canvas\n        let canvas;\n        if (container.tagName === 'CANVAS') {\n          canvas = container;\n        } else {\n          // 检查容器内是否已有canvas\n          canvas = container.querySelector('canvas');\n          if (!canvas) {\n            // 创建新的canvas元素\n            canvas = document.createElement('canvas');\n            container.innerHTML = ''; // 清空容器\n            container.appendChild(canvas);\n          }\n        }\n\n        // 准备雷达图数据\n        const labels = [\n          \"专业知识水平\",\n          \"技能匹配度\",\n          \"语言表达能力\",\n          \"逻辑思维能力\",\n          \"创新能力\"\n        ];\n\n        const values = labels.map(label => data[label] || 0);\n\n        // 销毁已存在的图表实例\n        if (container.chartInstance) {\n          container.chartInstance.destroy();\n        }\n\n        // 创建雷达图，将评分范围调整为0-100\n        container.chartInstance = new Chart(canvas.getContext('2d'), {\n          type: 'radar',\n          data: {\n            labels: labels,\n            datasets: [{\n              label: '能力评分',\n              data: values,\n              backgroundColor: 'rgba(54, 162, 235, 0.2)',\n              borderColor: 'rgba(54, 162, 235, 1)',\n              pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n              pointBorderColor: '#fff',\n              pointHoverBackgroundColor: '#fff',\n              pointHoverBorderColor: 'rgba(54, 162, 235, 1)'\n            }]\n          },\n          options: {\n            scales: {\n              r: {\n                angleLines: {\n                  display: true\n                },\n                suggestedMin: 0,\n                suggestedMax: 100, // 评分范围改为0-100\n                ticks: {\n                  stepSize: 20, // 刻度间隔设为20，使0-100显示更合理\n                  callback: function (value) {\n                    return value + '%'; // 显示百分比符号\n                  }\n                }\n              }\n            },\n            plugins: {\n              legend: {\n                position: 'top',\n              },\n              tooltip: {\n                callbacks: {\n                  label: function (context) {\n                    return `${context.label}: ${context.raw}分`;\n                  }\n                }\n              }\n            }\n          }\n        });\n      };\n\n      // 开始尝试渲染\n      tryRender();\n    },\n\n    // 增强的格式化消息方法，支持Markdown渲染\n    addFormattedMessageWithSpaces(content) {\n      try {\n        if (!content || content.trim() === '') {\n          this.addMessage('ai', '没有返回内容', 'text');\n          return;\n        }\n\n        const processedContent = this.processMarkdownContent(content);\n\n        // 添加到消息列表\n        this.messages.push({\n          sender: 'ai',\n          type: 'formatted',\n          content: processedContent\n        });\n\n      } catch (error) {\n        console.error('格式化Markdown失败:', error);\n        this.addMessage('ai', '内容格式化失败，显示原始内容:', 'text', true);\n        this.addMessage('ai', content, 'text');\n      }\n    },\n    // 处理Markdown内容为HTML，确保透明样式生效\n    processMarkdownContent(content) {\n      // 标准化换行符\n      let processed = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n\n      // 处理思考内容标签，使用正确的正则表达式和样式\n      processed = processed.replace(\n        /<|FunctionCallBegin|>([\\s\\S]*?)<|FunctionCallEnd|>/g,  // 正确匹配</think>和<|FunctionCallEnd|>标签\n        // 使用明确的透明度样式，确保优先级\n        '<div style=\"color: rgba(107, 114, 128, 0.7); font-style: italic; background-color: rgba(243, 244, 246, 0.3); padding: 12px; border-radius: 0.5rem; border: 1px solid rgba(229, 231, 235, 0.5); margin: 1rem 0; display: block;\">思考过程: $1</div>'\n      );\n\n      // Markdown格式处理\n      processed = processed\n        // 处理标题\n        .replace(/^# (.*?)$/gm, '<h1 class=\"text-2xl font-bold my-4\">$1</h1>')\n        .replace(/^## (.*?)$/gm, '<h2 class=\"text-xl font-bold my-3\">$1</h2>')\n        .replace(/^### (.*?)$/gm, '<h3 class=\"text-lg font-bold my-2\">$1</h3>')\n        // 先处理有序列表\n        .replace(/^\\d+\\. (.*?)$/gm, '<li class=\"list-decimal\">$1</li>')\n        .replace(/(<li class=\"list-decimal\">.*?<\\/li>)+/gs, '<ol class=\"list-decimal pl-6 my-2\">$&</ol>')\n        // 再处理无序列表\n        .replace(/^- (.*?)$/gm, '<li class=\"list-disc\">$1</li>')\n        .replace(/(<li class=\"list-disc\">.*?<\\/li>)+/gs, '<ul class=\"list-disc pl-6 my-2\">$&</ul>')\n        // 处理加粗和斜体\n        .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n        .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n        // 处理链接\n        .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" class=\"text-blue-600 underline\">$1</a>')\n        // 处理换行\n        .replace(/(?![^<]*<\\/li>)\\n/g, '<br>');\n\n      // 构建HTML内容，添加容器样式以确保内部样式生效\n      return `<div class=\"formatted-content markdown-content\" style=\"font-family: sans-serif;\">${processed}</div>`;\n    },\n\n\n\n\n\n\n\n    // 停止录音\n    stopRecording() {\n      if (this.isRecording && this.mediaRecorder) {\n        this.mediaRecorder.stop();\n        this.isRecording = false;\n\n        if (this.recordingTimer) {\n          clearInterval(this.recordingTimer);\n          this.recordingTimer = null;\n        }\n\n        if (this.mediaStream) {\n          this.mediaStream.getTracks().forEach(track => track.stop());\n          this.mediaStream = null;\n        }\n\n        this.showStatus('录音已完成', 'success');\n      }\n    },\n\n    // 添加语音消息到列表\n    addVoiceMessage() {\n      if (!this.audioBlob) return;\n\n      const audioUrl = URL.createObjectURL(this.audioBlob);\n      const duration = this.recordingSeconds;\n\n      const audio = new Audio(audioUrl);\n\n      this.messages.push({\n        sender: 'user',\n        type: 'voice',\n        blob: this.audioBlob,\n        url: audioUrl,\n        duration: duration,\n        isPlaying: false,\n        textResult: null,\n        toneResult: null,\n        speechSpeed: null,\n        logicResult: null\n      });\n\n      this.audioElements[this.messages.length - 1] = audio;\n\n      this.scrollToBottom();\n    },\n\n    // 播放或暂停语音\n    toggleVoicePlayback(index) {\n      const msg = this.messages[index];\n      if (!msg || msg.type !== 'voice') return;\n\n      const audio = this.audioElements[index];\n      if (!audio) return;\n\n      if (msg.isPlaying) {\n        audio.pause();\n        msg.isPlaying = false;\n      } else {\n        this.messages.forEach((m, i) => {\n          if (m.isPlaying && i !== index) {\n            m.isPlaying = false;\n            const otherAudio = this.audioElements[i];\n            if (otherAudio) otherAudio.pause();\n          }\n        });\n\n        audio.play()\n          .then(() => {\n            msg.isPlaying = true;\n            audio.onended = () => {\n              msg.isPlaying = false;\n            };\n          })\n          .catch(error => {\n            console.error('播放失败:', error);\n            this.showStatus('播放失败，请重试', 'error');\n          });\n      }\n    },\n\n    // 语音转文字\n    //找到convertVoiceToText方法，修改如下：\n    async convertVoiceToText(index) {\n      const msg = this.messages[index];\n      if (!msg || msg.type !== 'voice' || !msg.blob) return;\n\n      this.showStatus('正在转换语音为文字...', 'info');\n\n      try {\n        const formData = new FormData();\n        formData.append('audio', msg.blob, 'recording.wav');\n\n        const response = await fetch(`${this.API_BASE_URL}/recognize_speech`, {\n          method: 'POST',\n          headers: this.commonHeaders,\n          body: formData\n        });\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error('语音转文字API错误:', errorText);\n          throw new Error(`服务器错误: ${response.status} - ${errorText.substring(0, 100)}`);\n        }\n\n        const data = await response.json();\n\n        if (data.status === 'success') {\n          // 1. 确保更新消息对象\n          this.messages.splice(index, 1, {\n            ...this.messages[index],\n            textResult: data.text || '未能识别语音内容'\n          });\n\n          // 2. 转写计数循环使用1-5\n          this.transcribeCount = (this.transcribeCount % 5) + 1;\n\n          // 3. 根据次数存储结果，使用Vue的响应式更新\n          if (this.transcribeCount === 1) {\n            this.firstResult = data.text || '';\n            localStorage.setItem(\"firstResult\", this.firstResult);\n            console.log('第一次转写成功，' + this.firstResult);\n          } else if (this.transcribeCount === 2) {\n            this.secondResult = data.text || '';\n            localStorage.setItem(\"secondResult\", this.secondResult);\n            console.log('第二次转写成功，' + this.secondResult);\n          } else if (this.transcribeCount === 3) {\n            this.thirdResult = data.text || '';\n            localStorage.setItem(\"thirdResult\", this.thirdResult);\n            console.log('第三次转写成功，' + this.thirdResult);\n          } else if (this.transcribeCount === 4) {\n            this.fourthResult = data.text || '';\n            localStorage.setItem(\"fourthResult\", this.fourthResult);\n            console.log('第四次转写成功，' + this.fourthResult);\n          } else if (this.transcribeCount === 5) {\n            this.fifthResult = data.text || '';\n            localStorage.setItem(\"fifthResult\", this.fifthResult);\n            console.log('第五次转写成功，' + this.fifthResult);\n          }\n\n          // 4. 保存语言内容到localStorage\n          localStorage.setItem('interview_response_content', data.text || '');\n\n          this.showStatus('语音转文字成功', 'success');\n        } else {\n          throw new Error(data.message || '语音转文字失败');\n        }\n      } catch (error) {\n        console.error('语音转文字失败:', error);\n        this.showStatus(`转文字失败: ${error.message}`, 'error');\n      }\n    },\n\n\n    // 分析语调\n    async analyzeVoiceTone(index) {\n      const msg = this.messages[index];\n      if (!msg || msg.type !== 'voice' || !msg.blob) return;\n\n      this.showStatus('正在分析语调...', 'info');\n\n      try {\n        const formData = new FormData();\n        formData.append('audio', msg.blob, 'recording.wav');\n\n        const response = await fetch(`${this.API_BASE_URL}/extract_tone`, {\n          method: 'POST',\n          headers: this.commonHeaders,\n          body: formData\n        });\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error('语调分析API错误:', errorText);\n          throw new Error(`服务器错误: ${response.status} - ${errorText.substring(0, 100)}`);\n        }\n\n        const data = await response.json();\n\n        if (data.status === 'success') {\n          // 使用扩展运算符创建新对象，触发响应式更新\n          this.messages[index] = {\n            ...this.messages[index],\n            toneResult: data.data\n          };\n\n          // 保存情感语调分析到localStorage（追加方式）\n          const existingTone = localStorage.getItem('interview_emotional_tone') || '';\n          const toneAnalysis = `语调类型: ${data.data.tone_type}, 基频均值: ${data.data.f0_mean}Hz, 基频范围: ${data.data.f0_min}-${data.data.f0_max}Hz`;\n          const newToneAnalysis = existingTone ? `${existingTone}\\n${toneAnalysis}` : toneAnalysis;\n          localStorage.setItem('interview_emotional_tone', newToneAnalysis);\n\n          this.showStatus('语调分析成功', 'success');\n        } else {\n          throw new Error(data.message || '语调分析失败');\n        }\n      } catch (error) {\n        console.error('语调分析失败:', error);\n        this.showStatus(`语调分析失败: ${error.message}`, 'error');\n      }\n    },\n\n    // 计算语速\n    calculateSpeechSpeed(index) {\n      const msg = this.messages[index];\n      if (!msg || msg.type !== 'voice' || !msg.textResult) return;\n\n      // 计算字数（去除空白字符）\n      const text = msg.textResult.trim();\n      const charCount = text.length;\n\n      // 音频时长（秒）\n      const duration = Math.max(msg.duration, 0.1); // 避免除以0\n\n      // 计算语速（字/秒）\n      const speed = (charCount / duration).toFixed(1);\n      const speedPerMinute = Math.round(speed * 60);\n\n      // 使用扩展运算符创建新对象，触发响应式更新\n      this.messages[index] = {\n        ...this.messages[index],\n        speechSpeed: speed\n      };\n\n      // 保存语速分析到localStorage（追加方式）\n      const existingSpeed = localStorage.getItem('interview_speech_rate') || '';\n      const speedAnalysis = `${speed} 字/秒 (约 ${speedPerMinute} 字/分钟)。${this.evaluateSpeechSpeed(speedPerMinute)}`;\n      const newSpeedAnalysis = existingSpeed ? `${existingSpeed}\\n${speedAnalysis}` : speedAnalysis;\n      localStorage.setItem('interview_speech_rate', newSpeedAnalysis);\n\n      this.showStatus('语速计算完成', 'success');\n    },\n\n    // 评估语速是否合理\n    evaluateSpeechSpeed(speedPerMinute) {\n      if (speedPerMinute < 120) {\n        return \"语速偏慢，可能影响表达效率\";\n      } else if (speedPerMinute > 180) {\n        return \"语速偏快，可能影响理解\";\n      } else {\n        return \"语速适中，表达节奏良好\";\n      }\n    },\n\n    // 分析语言逻辑\n    async analyzeLanguageLogic(index) {\n      const msg = this.messages[index];\n      if (!msg || msg.type !== 'voice' || !msg.textResult) return;\n\n      this.showStatus('正在分析语言逻辑...', 'info');\n\n      try {\n        // 从localStorage获取问题和对应的回答\n        const questions = [\n          {\n            question: localStorage.getItem('firstQuestion') || '第一道题',\n            answer: localStorage.getItem('firstResult') || ''\n          },\n          {\n            question: localStorage.getItem('secondQuestion') || '第二道题',\n            answer: localStorage.getItem('secondResult') || ''\n          },\n          {\n            question: localStorage.getItem('thirdQuestion') || '第三道题',\n            answer: localStorage.getItem('thirdResult') || ''\n          },\n          {\n            question: localStorage.getItem('fourthQuestion') || '第四道题',\n            answer: localStorage.getItem('fourthResult') || ''\n          },\n          {\n            question: localStorage.getItem('fifthQuestion') || '第五道题',\n            answer: localStorage.getItem('fifthResult') || ''\n          }\n        ];\n\n        // 构建包含问题和对应回答的prompt\n        let prompt = \"请以下面试问题及对应的回答，分析回答的语言逻辑和连贯性，并给出评分(1-10分)和简要分析：\\n\\n\";\n\n        questions.forEach((item, i) => {\n          if (item.answer) { // 只包含有回答的问题\n            prompt += `第${i + 1}题：${item.question}\\n`;\n            prompt += `回答：${item.answer}\\n\\n`;\n          }\n        });\n\n        // 添加当前消息的文本结果（如果需要包含）\n        prompt += `当前分析文本：${msg.textResult}\"`;\n\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\n          method: 'POST',\n          headers: {\n            ...this.commonHeaders,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ prompt: prompt })\n        });\n\n        if (!response.ok) {\n          throw new Error(`请求失败: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        if (data.status === 'success') {\n          // 提取评分（如果有的话）\n          let score = null;\n          const scoreMatch = data.result.match(/(\\d+(\\.\\d+)?)\\s*\\/\\s*10/);\n          if (scoreMatch && scoreMatch[1]) {\n            score = parseFloat(scoreMatch[1]);\n          }\n\n          // 使用扩展运算符创建新对象，触发响应式更新\n          this.messages[index] = {\n            ...this.messages[index],\n            logicResult: {\n              analysis: data.result,\n              score: score\n            }\n          };\n\n          // 保存语言逻辑分析到localStorage（追加方式）\n          const existingLogic = localStorage.getItem('interview_language_logic') || '';\n          const newLogicAnalysis = existingLogic ? `${existingLogic}\\n${data.result}` : data.result;\n          localStorage.setItem('interview_language_logic', newLogicAnalysis);\n\n          this.showStatus('语言逻辑分析完成', 'success');\n        } else {\n          throw new Error(data.result || '语言逻辑分析失败');\n        }\n      } catch (error) {\n        console.error('语言逻辑分析失败:', error);\n        this.showStatus(`语言逻辑分析失败: ${error.message}`, 'error');\n      }\n    },\n\n    // 保存分析结果到localStorage（追加方式）\n    saveAnalysisToStorage(msg) {\n      if (!msg || msg.type !== 'expression') return;\n\n      // 保存表情分析（追加方式）\n      if (msg.expressionResults && msg.expressionResults.length) {\n        let expressionsText = msg.expressionResults.map(exp =>\n          `${exp.emotion} (${(exp.confidence * 100).toFixed(1)}%)`\n        ).join('、');\n\n        const existingExpressions = localStorage.getItem('interview_expression') || '';\n        const newExpressions = existingExpressions ? `${existingExpressions}\\n检测到的表情: ${expressionsText}` : `检测到的表情: ${expressionsText}`;\n        localStorage.setItem('interview_expression', newExpressions);\n      }\n\n      // 保存姿态分析（追加方式）\n      if (msg.poseResult) {\n        const poseText = `动作: ${msg.poseResult.pose}, 置信度: ${(msg.poseResult.score * 100).toFixed(1)}%`;\n        const existingPose = localStorage.getItem('interview_gesture') || '';\n        const newPose = existingPose ? `${existingPose}\\n${poseText}` : poseText;\n        localStorage.setItem('interview_gesture', newPose);\n      }\n\n      // 保存综合分析（追加方式）\n      if (msg.comprehensiveAnalysis) {\n        const existingAnalysis = localStorage.getItem('interview_expression_gesture_summary') || '';\n        const newAnalysis = existingAnalysis ? `${existingAnalysis}\\n${msg.comprehensiveAnalysis}` : msg.comprehensiveAnalysis;\n        localStorage.setItem('interview_expression_gesture_summary', newAnalysis);\n      }\n\n      this.showStatus('分析结果已保存', 'success');\n    },\n\n    // 添加消息到界面\n    addMessage(sender, content, type = 'text', isError = false) {\n      this.messages.push({\n        sender: sender,\n        content: content,\n        type: type,\n        isError: isError\n      });\n      this.scrollToBottom();\n    },\n\n    // 添加表情和姿态分析消息\n    addExpressionMessage(imageUrl, expressionResults, poseResult) {\n      this.messages.push({\n        sender: 'ai',\n        type: 'expression',\n        imageUrl: imageUrl,\n        expressionResults: expressionResults,\n        poseResult: poseResult,\n        comprehensiveAnalysis: null\n      });\n      this.scrollToBottom();\n    },\n\n    // 添加\"正在输入\"指示器\n    addTypingIndicator() {\n      const typingId = `typing-${Date.now()}`;\n      this.typingId = typingId;\n      this.isTyping = true;\n      return typingId;\n    },\n\n    // 移除\"正在输入\"状态\n    removeTypingIndicator(id) {\n      if (this.typingId === id) {\n        this.isTyping = false;\n        this.typingId = \"\";\n      }\n    },\n\n    // 滚动到最新消息\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const container = this.$refs.messagesContainer;\n        if (container) {\n          container.scrollTop = container.scrollHeight;\n        }\n      });\n    },\n\n    // 测试连接状态\n    async testConnection() {\n      try {\n        await fetch(`${this.API_BASE_URL}/api/chat`, {\n          method: 'OPTIONS',\n          headers: this.commonHeaders\n        });\n\n        this.statusText = ``;\n        this.statusClass = 'text-xs text-green-600 mt-2 text-center';\n      } catch (error) {\n        this.statusText = `连接失败: ${error.message}`;\n        this.statusClass = 'text-xs text-red-600 mt-2 text-center';\n      }\n    },\n\n    // 初始化聊天容器高度\n    initContainerHeight() {\n      const navBarHeight = 46;\n      const bottomBarHeight = document.getElementById('dialog_bottombar_inside')?.offsetHeight || 0;\n      const container = document.getElementById('dialog_content');\n      if (container) {\n        container.style.paddingTop = navBarHeight + 10 + 'px';\n        container.style.paddingBottom = bottomBarHeight + 10 + 'px';\n        container.style.height = `calc(100vh - ${navBarHeight + bottomBarHeight + 20}px)`;\n      }\n    },\n\n    // 格式化时长显示\n    formatDuration(seconds) {\n      if (seconds < 60) {\n        return `${seconds}s`;\n      } else {\n        const mins = Math.floor(seconds / 60);\n        const secs = seconds % 60;\n        return `${mins}:${secs < 10 ? '0' + secs : secs}`;\n      }\n    },\n\n    // 显示状态消息\n    showStatus(text, type = 'info') {\n      this.statusText = text;\n      switch (type) {\n        case 'success':\n          this.statusClass = 'text-xs text-green-600 mt-2 text-center';\n          break;\n        case 'error':\n          this.statusClass = 'text-xs text-red-600 mt-2 text-center';\n          break;\n        case 'warning':\n          this.statusClass = 'text-xs text-yellow-600 mt-2 text-center';\n          break;\n        default:\n          this.statusClass = 'text-xs text-blue-600 mt-2 text-center';\n      }\n\n      if (type !== 'error') {\n        setTimeout(() => {\n          this.statusText = '';\n        }, 3000);\n      }\n    },\n\n    // 音频格式转换相关方法\n    async convertToValidWav(blob) {\n      if (await this.isValidWavFile(blob)) {\n        return blob;\n      }\n\n      try {\n        const arrayBuffer = await new Response(blob).arrayBuffer();\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)({\n          sampleRate: 16000\n        });\n\n        const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n        const wavBuffer = this.convertToWav(audioBuffer);\n\n        return new Blob([wavBuffer], { type: 'audio/wav' });\n      } catch (error) {\n        console.error('音频格式转换失败:', error);\n        this.showStatus('音频格式转换失败，可能影响识别效果', 'warning');\n        return blob;\n      }\n    },\n\n    async isValidWavFile(blob) {\n      return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onloadend = (e) => {\n          if (e.target.readyState === FileReader.DONE) {\n            const arrayBuffer = e.target.result;\n            const uint8Array = new Uint8Array(arrayBuffer);\n\n            if (uint8Array.length >= 4) {\n              const riff = String.fromCharCode(uint8Array[0], uint8Array[1], uint8Array[2], uint8Array[3]);\n              resolve(riff === 'RIFF');\n            } else {\n              resolve(false);\n            }\n          }\n        };\n        reader.readAsArrayBuffer(blob.slice(0, 4));\n      });\n    },\n\n    convertToWav(audioBuffer) {\n      const numberOfChannels = audioBuffer.numberOfChannels;\n      const sampleRate = audioBuffer.sampleRate;\n      const format = 1;\n      const bitDepth = 16;\n\n      let data = new Float32Array(audioBuffer.length);\n      for (let i = 0; i < audioBuffer.length; i++) {\n        let sum = 0;\n        for (let c = 0; c < numberOfChannels; c++) {\n          sum += audioBuffer.getChannelData(c)[i];\n        }\n        data[i] = sum / numberOfChannels;\n      }\n\n      const buffer = new ArrayBuffer(44 + data.length * 2);\n      const view = new DataView(buffer);\n\n      this.writeString(view, 0, 'RIFF');\n      view.setUint32(4, 36 + data.length * 2, true);\n      this.writeString(view, 8, 'WAVE');\n      this.writeString(view, 12, 'fmt ');\n      view.setUint32(16, 16, true);\n      view.setUint16(20, format, true);\n      view.setUint16(22, 1, true);\n      view.setUint32(24, sampleRate, true);\n      view.setUint32(28, sampleRate * 2, true);\n      view.setUint16(32, 2, true);\n      view.setUint16(34, bitDepth, true);\n      this.writeString(view, 36, 'data');\n      view.setUint32(40, data.length * 2, true);\n\n      let index = 44;\n      const volume = 1;\n      for (let i = 0; i < data.length; i++) {\n        const sample = Math.max(-1, Math.min(1, data[i] * volume));\n        view.setInt16(index, sample < 0 ? sample * 0x8000 : sample * 0x7FFF, true);\n        index += 2;\n      }\n\n      return buffer;\n    },\n\n    writeString(view, offset, string) {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    },\n\n    // 相机相关方法\n    async toggleCamera() {\n      if (this.isCameraActive) {\n        this.stopCamera();\n        this.isCameraModalVisible = false;\n      } else {\n        this.isCameraModalVisible = true;\n        await this.startCamera();\n      }\n    },\n\n    async startCamera() {\n      this.isLoadingCamera = true;\n      this.cameraError = null;\n\n      try {\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n          throw new Error('您的浏览器不支持相机功能，请使用最新浏览器');\n        }\n\n        if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n          throw new Error('相机功能需要在HTTPS环境下运行');\n        }\n\n        // 相机配置\n        this.videoStream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            width: { ideal: 1280 },\n            height: { ideal: 720 }\n          }\n        });\n\n        const videoElement = this.$refs.videoElement;\n        if (videoElement) {\n          videoElement.srcObject = this.videoStream;\n          this.isCameraActive = true;\n          this.showStatus('相机已启动，可进行表情和姿态识别', 'success');\n        }\n      } catch (error) {\n        console.error('相机启动失败:', error);\n        this.cameraError = error.message;\n\n        // 错误处理\n        if (error.name === 'NotAllowedError') {\n          this.cameraError = '相机权限被拒绝，请在浏览器设置中允许相机访问';\n        } else if (error.name === 'NotFoundError') {\n          this.cameraError = '未找到相机设备';\n        } else if (error.name === 'NotReadableError') {\n          this.cameraError = '相机被占用或不可用';\n        } else if (error.name === 'NotSupportedError') {\n          this.cameraError = '您的浏览器不支持相机功能';\n        }\n\n        this.showStatus(`相机错误: ${this.cameraError}`, 'error');\n      } finally {\n        this.isLoadingCamera = false;\n      }\n    },\n\n    stopCamera() {\n      if (this.videoStream) {\n        this.videoStream.getTracks().forEach(track => track.stop());\n        this.videoStream = null;\n      }\n\n      const videoElement = this.$refs.videoElement;\n      if (videoElement) {\n        videoElement.srcObject = null;\n      }\n\n      this.isCameraActive = false;\n      this.isAnalyzingContinuously = false;\n\n      if (this.continuousAnalysisTimer) {\n        clearInterval(this.continuousAnalysisTimer);\n        this.continuousAnalysisTimer = null;\n      }\n\n      if (this.detectionInterval) {\n        clearInterval(this.detectionInterval);\n        this.detectionInterval = null;\n      }\n\n      this.showStatus('相机已关闭', 'info');\n    },\n\n    // 拍照并分析表情和姿态（仅使用/api/chat接口）\n    async captureImage() {\n      if (!this.isCameraActive || this.isProcessingImage) return;\n\n      this.isProcessingImage = true;\n      this.showStatus('正在分析表情和姿态...', 'info');\n\n      try {\n        const videoElement = this.$refs.videoElement;\n        if (!videoElement) throw new Error('未找到视频元素');\n\n        // 1. 捕获视频帧为base64\n        const canvas = document.createElement('canvas');\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n        const base64Image = canvas.toDataURL('image/jpeg');\n\n        // 2. 仅调用/api/chat接口（符合需求）\n        const analysisResult = await this.analyzePose(base64Image);\n        // 注意：这里复用了analyzePose方法，实际应确保它内部只调用/api/chat\n\n        // 3. 正确转换base64为图片URL（无需fetch）\n        const blob = await (await fetch(base64Image)).blob(); // 修正：先处理base64为blob\n        const imageUrl = URL.createObjectURL(blob);\n\n        // 4. 添加到消息列表（仅传入一个综合结果）\n        this.addExpressionMessage(imageUrl, analysisResult);\n\n        this.showStatus('表情和姿态分析完成', 'success');\n      } catch (error) {\n        console.error('图像分析失败:', error);\n        this.showStatus(`分析失败: ${error.message}`, 'error');\n      } finally {\n        this.isProcessingImage = false;\n      }\n    },\n\n    // 开始/停止连续分析\n    startContinuousAnalysis() {\n      if (this.isAnalyzingContinuously) {\n        // 停止连续分析\n        clearInterval(this.continuousAnalysisTimer);\n        this.continuousAnalysisTimer = null;\n        this.isAnalyzingContinuously = false;\n        this.showStatus('已停止连续分析', 'info');\n      } else {\n        // 开始连续分析，每2秒一次\n        this.showStatus('开始连续分析...', 'info');\n        this.isAnalyzingContinuously = true;\n\n        // 立即执行一次\n        this.captureImage();\n\n        // 设置定时器\n        this.continuousAnalysisTimer = setInterval(() => {\n          if (this.isAnalyzingContinuously) {\n            this.captureImage();\n          }\n        }, 2000);\n      }\n    },\n\n    // 分析表情\n    async analyzeExpression(base64Image) {\n      try {\n        const response = await fetch(`${this.API_BASE_URL}/predict/image`, {\n          method: 'POST',\n          headers: {\n            ...this.commonHeaders,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ base64: base64Image })\n        });\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`表情分析失败: ${response.status} - ${errorText.substring(0, 100)}`);\n        }\n\n        const data = await response.json();\n\n        if (data.status === 'success' && data.predictions) {\n          return data.predictions;\n        } else {\n          throw new Error(data.error || '未获取到表情分析结果');\n        }\n      } catch (error) {\n        console.error('表情分析出错:', error);\n        throw error;\n      }\n    },\n\n    // 分析姿态并处理轮询\n    async analyzePose(base64Image) {\n      try {\n        // 1. 发送图片获取任务ID\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\n          method: 'POST',\n          headers: {\n            ...this.commonHeaders,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            prompt: '请分析这张图片中人物的姿态动作和表情，用简洁的中文语言描述',\n            image_base64: base64Image\n          })\n        });\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`姿态分析请求失败: ${response.status} - ${errorText.substring(0, 100)}`);\n        }\n\n        const data = await response.json();\n\n        if (data.status === 'success' && data.task_id) {\n          // 2. 获得task_id后开始轮询\n          return this.startPolling(data.task_id);\n        } else {\n          throw new Error(data.error || '未获取到任务ID');\n        }\n      } catch (error) {\n        console.error('姿态分析出错:', error);\n        throw error;\n      }\n    },\n\n    // 轮询函数 - 修复后版本\n    async startPolling(taskId, interval = 1000) {\n      try {\n        const response = await fetch(`${this.API_BASE_URL}/api/chat/result/${taskId}`, {\n          method: 'GET',\n          headers: this.commonHeaders\n        });\n\n        if (!response.ok) {\n          throw new Error(`轮询失败: ${response.status}`);\n        }\n\n        const result = await response.json();\n\n        if (result.status === 'processing') {\n          console.log(`任务 ${taskId} 处理中，继续等待...`);\n          // 使用箭头函数确保 this 指向组件实例\n          return new Promise(resolve => {\n            setTimeout(() => {\n              resolve(this.startPolling(taskId, interval));\n            }, interval);\n          });\n        } else if (result.status === 'success') {\n          console.log(`任务 ${taskId} 处理完成`);\n          // 此时 this.msg 已初始化，可安全赋值\n          this.msg.expressionResults = [result.result]; // 存入数组，适配v-for\n          console.log('轮询结果:', this.msg.expressionResults);\n\n          return {\n            status: 'completed',\n            taskId,\n            result: result.result,\n            timestamp: new Date()\n          };\n        } else {\n          throw new Error(`任务处理失败: ${result.result || '未知错误'}`);\n        }\n      } catch (error) {\n        console.error(`轮询任务 ${taskId} 出错:`, error);\n        throw error;\n      }\n    },\n\n\n\n\n    // 综合分析表情和姿态\n    async analyzeComprehensive(index) {\n      const msg = this.messages[index];\n      if (!msg || msg.type !== 'expression') return;\n\n      this.showStatus('正在进行综合分析...', 'info');\n\n      try {\n        // 构建提示信息\n        let expressionsText = msg.expressionResults.map(exp =>\n          `${exp.emotion} (${(exp.confidence * 100).toFixed(1)}%)`\n        ).join('、');\n\n        let prompt = `根据以下表情和姿态信息进行综合分析:\n表情: ${expressionsText}\n姿态: ${msg.poseResult.pose} (置信度: ${(msg.poseResult.score * 100).toFixed(1)}%)\n\n请分析这个人可能的情绪状态和意图，并给出简要解读。`;\n\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\n          method: 'POST',\n          headers: {\n            ...this.commonHeaders,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ prompt: prompt })\n        });\n\n        if (!response.ok) {\n          throw new Error(`综合分析请求失败: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        if (data.status === 'success') {\n          // 更新消息对象\n          this.messages[index] = {\n            ...this.messages[index],\n            comprehensiveAnalysis: data.result\n          };\n\n          // 保存综合分析到localStorage（追加方式）\n          const existingAnalysis = localStorage.getItem('interview_expression_gesture_analysis') || '';\n          const newAnalysis = existingAnalysis ? `${existingAnalysis}\\n${data.result}` : data.result;\n          localStorage.setItem('interview_expression_gesture_analysis', newAnalysis);\n\n          this.showStatus('综合分析完成', 'success');\n        } else {\n          throw new Error(data.result || '综合分析失败');\n        }\n      } catch (error) {\n        console.error('综合分析失败:', error);\n        this.showStatus(`综合分析失败: ${error.message}`, 'error');\n      }\n    },\n\n    // 打开评测报告弹窗\n    async openEvaluationReport() {\n      this.isReportVisible = true;\n      this.reportLoading = true;\n      this.reportError = '';\n      this.reportResponse = null; // 重置响应数据\n\n      // 延迟执行，确保弹窗已渲染\n      setTimeout(() => {\n        this.generateReportFromStorage();\n      }, 100);\n    },\n\n    // 从localStorage生成评测报告\n    async generateReportFromStorage() {\n      try {\n        this.reportLoading = true;\n\n        // 从localStorage提取数据\n        this.firstResult = localStorage.getItem(\"firstResult\") || '';\n        this.secondResult = localStorage.getItem(\"secondResult\") || '';\n        this.thirdResult = localStorage.getItem(\"thirdResult\") || '';\n        this.fourthResult = localStorage.getItem(\"fourthResult\") || '';\n        this.fifthResult = localStorage.getItem(\"fifthResult\") || '';\n\n        this.firstQuestion = localStorage.getItem(\"firstQuestion\") || '';\n        this.secondQuestion = localStorage.getItem(\"secondQuestion\") || '';\n        this.thirdQuestion = localStorage.getItem(\"thirdQuestion\") || '';\n        this.fourthQuestion = localStorage.getItem(\"fourthQuestion\") || '';\n        this.fifthQuestion = localStorage.getItem(\"fifthQuestion\") || '';\n\n        // 检查是否有足够的数据生成报告\n        if (!this.firstResult && !this.secondResult && !this.thirdResult && !this.fourthResult && !this.fifthResult) {\n          throw new Error('未找到足够的面试回答数据，请先完成面试');\n        }\n\n        // 生成各维度评分\n        this.calculateReportScores();\n\n        // 生成各维度详细分析\n        await this.generateDimensionAnalysis();\n\n        // 生成综合评价\n        await this.generateComprehensiveEvaluation();\n        // 生成关键问题定位\n        await this.generateKeyIssues();\n\n        // 生成反馈建议\n        await this.generateFeedbackSuggestions();\n\n        // 生成综合评价\n        await this.generateComprehensiveEvaluation();\n\n        // 存储完整的报告响应数据\n        this.reportResponse = {\n          indicators: this.reportIndicators,\n          values: this.reportValues,\n          professionalKnowledgeAnalysis: this.professionalKnowledgeAnalysis,\n          skillMatchAnalysis: this.skillMatchAnalysis,\n          languageExpressionAnalysis: this.languageExpressionAnalysis,\n          logicalThinkingAnalysis: this.logicalThinkingAnalysis,\n          innovationAbilityAnalysis: this.innovationAbilityAnalysis,\n          comprehensiveEvaluation: this.comprehensiveEvaluation,\n          improvementSuggestions: this.improvementSuggestions\n        };\n\n        // 确保DOM已更新后再渲染图表\n        this.$nextTick(() => {\n          this.renderRadarChart();\n        });\n\n      } catch (error) {\n        console.error('生成报告失败:', error);\n        this.reportError = error.message;\n      } finally {\n        this.reportLoading = false;\n      }\n    },\n\n    // 计算各维度评分\n    calculateReportScores() {\n      // 专业知识水平评分 (0-100)\n      let knowledgeScore = 60;\n      if (this.firstResult && (this.firstResult.length > 100 ||\n        this.firstResult.includes('项目') ||\n        this.firstResult.includes('技术') ||\n        this.firstResult.includes('经验'))) {\n        knowledgeScore = Math.floor(Math.random() * 20) + 70; // 70-90\n      } else if (this.firstResult && this.firstResult.length < 50) {\n        knowledgeScore = Math.floor(Math.random() * 20) + 40; // 40-60\n      }\n\n      // 技能匹配度评分\n      let skillScore = 60;\n      if (this.secondResult && (this.secondResult.length > 100 ||\n        this.secondResult.includes('技能') ||\n        this.secondResult.includes('掌握') ||\n        this.secondResult.includes('经验'))) {\n        skillScore = Math.floor(Math.random() * 20) + 70;\n      } else if (this.secondResult && this.secondResult.length < 50) {\n        skillScore = Math.floor(Math.random() * 20) + 40;\n      }\n\n      // 语言表达能力评分\n      let languageScore = 60;\n      if (this.thirdResult && (this.thirdResult.length > 100 ||\n        this.thirdResult.includes('解释') ||\n        this.thirdResult.includes('方法') ||\n        this.thirdResult.includes('理解'))) {\n        languageScore = Math.floor(Math.random() * 20) + 70;\n      } else if (this.thirdResult && this.thirdResult.length < 50) {\n        languageScore = Math.floor(Math.random() * 20) + 40;\n      }\n\n      // 逻辑思维能力评分\n      let logicScore = 60;\n      if (this.fourthResult && (this.fourthResult.length > 100 ||\n        this.fourthResult.includes('分析') ||\n        this.fourthResult.includes('步骤') ||\n        this.fourthResult.includes('案例'))) {\n        logicScore = Math.floor(Math.random() * 20) + 70;\n      } else if (this.fourthResult && this.fourthResult.length < 50) {\n        logicScore = Math.floor(Math.random() * 20) + 40;\n      }\n\n      // 创新能力评分\n      let innovationScore = 60;\n      if (this.fifthResult && (this.fifthResult.length > 100 ||\n        this.fifthResult.includes('创新') ||\n        this.fifthResult.includes('解决方案') ||\n        this.fifthResult.includes('思路'))) {\n        innovationScore = Math.floor(Math.random() * 20) + 70;\n      } else if (this.fifthResult && this.fifthResult.length < 50) {\n        innovationScore = Math.floor(Math.random() * 20) + 40;\n      }\n\n      this.reportValues = [\n        knowledgeScore,\n        skillScore,\n        languageScore,\n        logicScore,\n        innovationScore\n      ];\n    },\n\n    // 生成各维度详细分析\n    // 生成各维度详细分析\n    async generateDimensionAnalysis() {\n      // 从localStorage获取问题\n      const firstQuestion = localStorage.getItem(\"firstQuestion\") || '';\n      const secondQuestion = localStorage.getItem(\"secondQuestion\") || '';\n      const thirdQuestion = localStorage.getItem(\"thirdQuestion\") || '';\n      const fourthQuestion = localStorage.getItem(\"fourthQuestion\") || '';\n      const fifthQuestion = localStorage.getItem(\"fifthQuestion\") || '';\n\n      // 专业知识水平分析 - 加入对应问题\n      if (this.firstResult) {\n        const prompt = `请基于以下问题和回答，分析面试者的专业知识水平：\n问题：${firstQuestion}\n回答：${this.firstResult}\n\n请评价面试者对该问题的回答质量、专业知识的掌握程度和深度，并指出优势和不足。`;\n        this.professionalKnowledgeAnalysis = await this.getAnalysisFromAPI(prompt);\n      }\n\n      // 技能匹配度分析 - 加入对应问题\n      if (this.secondResult) {\n        const prompt = `请基于以下问题和回答，分析面试者的技能匹配度：\n问题：${secondQuestion}\n回答：${this.secondResult}\n\n请评价面试者所提及技能与岗位需求的匹配程度，以及技能掌握的实际应用能力。`;\n        this.skillMatchAnalysis = await this.getAnalysisFromAPI(prompt);\n      }\n\n      // 语言表达能力分析 - 加入对应问题\n      if (this.thirdResult) {\n        const prompt = `请基于以下问题和回答，分析面试者的语言表达能力：\n问题：${thirdQuestion}\n回答：${this.thirdResult}\n\n请评价面试者回答的清晰度、条理性、逻辑性和表达流畅度。`;\n        this.languageExpressionAnalysis = await this.getAnalysisFromAPI(prompt);\n      }\n\n      // 逻辑思维能力分析 - 加入对应问题\n      if (this.fourthResult) {\n        const prompt = `请基于以下问题和回答，分析面试者的逻辑思维能力：\n问题：${fourthQuestion}\n回答：${this.fourthResult}\n\n请评价面试者面试者分析问题的思路、推理过程的逻辑性和解决问题的系统性。`;\n        this.logicalThinkingAnalysis = await this.getAnalysisFromAPI(prompt);\n      }\n\n      // 创新能力分析 - 加入对应问题\n      if (this.fifthResult) {\n        const prompt = `请基于以下问题和回答，分析面试者的创新能力：\n问题：${fifthQuestion}\n回答：${this.fifthResult}\n\n请评价面试者提出的解决方案的创新性、独特性和实用性，以及发现问题的敏锐度。`;\n        this.innovationAbilityAnalysis = await this.getAnalysisFromAPI(prompt);\n      }\n    },\n\n\n    // 调用API获取分析结果\n    async getAnalysisFromAPI(prompt) {\n      try {\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\n          method: 'POST',\n          headers: {\n            ...this.commonHeaders,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ prompt: prompt })\n        });\n\n        if (!response.ok) {\n          throw new Error(`分析请求失败: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        if (data.status === 'success') {\n          const taskId = data.task_id;\n          const pollInterval = 2000; // 轮询间隔2秒\n          const maxAttempts = 150;   // 最多轮询150次（约5分钟）\n\n          // 创建一个Promise来等待最终结果\n          return new Promise((resolve, reject) => {\n            let attempts = 0;\n\n            // 定义轮询函数，直接查询文件接口\n            const pollForFile = () => {\n              // 超过最大尝试次数则拒绝\n              if (attempts >= maxAttempts) {\n                reject(new Error('请求超时，未能获取结果'));\n                return;\n              }\n\n              attempts++;\n\n              // 直接调用文件查询接口\n              fetch(`${this.API_BASE_URL}/get_task_file_url`, {\n                method: 'POST',\n                headers: {\n                  ...this.commonHeaders,\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ task_id: taskId })\n              })\n                .then(response => {\n                  // 无论响应状态如何，都尝试解析JSON\n                  return response.json().then(data => ({ data, response }));\n                })\n                .then(({ data, response }) => {\n                  // 成功获取到文件URL\n                  if (data.status === 'success' && data.file_url) {\n                    // 加载文件内容\n                    fetch(data.file_url, {\n                      method: 'GET',\n                      headers: this.commonHeaders\n                    })\n                      .then(fileResponse => {\n                        if (!fileResponse.ok) {\n                          throw new Error(`文件加载失败: ${fileResponse.status}`);\n                        }\n                        return fileResponse.text();\n                      })\n                      .then(fileContent => {\n                        // 检查内容是否为\"processing\"\n                        if (fileContent.trim() === 'processing') {\n                          // 仍在处理中，继续轮询\n                          setTimeout(pollForFile, pollInterval);\n                        } else {\n                          // 处理完成，返回结果\n                          resolve(fileContent);\n                        }\n                      })\n                      .catch(() => {\n                        // 文件加载失败，继续轮询\n                        setTimeout(pollForFile, pollInterval);\n                      });\n                  }\n                  // 未找到文件但可能还在处理中，继续轮询\n                  else if (response.status === 404 ||\n                    (data.status === 'error' && data.message.includes('未找到'))) {\n                    setTimeout(pollForFile, pollInterval);\n                  }\n                  // 其他错误情况\n                  else {\n                    reject(new Error(`获取文件失败: ${data.message || '未知错误'}`));\n                  }\n                })\n                .catch(error => {\n                  // 网络错误等情况，继续轮询\n                  setTimeout(pollForFile, pollInterval);\n                });\n            };\n\n            // 开始第一次查询\n            pollForFile();\n          });\n        } else {\n          return '无法生成分析结果';\n        }\n      } catch (error) {\n        console.error('获取分析结果失败:', error);\n        return '分析生成失败';\n      }\n    },\n\n    // 检查录音支持\n    async checkRecordingSupport() {\n      try {\n        // 检查浏览器是否支持媒体录制API\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n          throw new Error('您的浏览器不支持录音功能');\n        }\n\n        // 尝试获取麦克风权限（可选，根据实际需求）\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n\n        // 释放流资源\n        stream.getTracks().forEach(track => track.stop());\n\n        // 可以在这里设置一个标志，表示支持录音\n        this.recordingSupported = true;\n        console.log('浏览器支持录音功能');\n      } catch (error) {\n        this.recordingSupported = false;\n        console.warn('录音功能检查失败:', error.message);\n      }\n    },\n    // 切换录音状态（开始/停止录音）\n    toggleRecording() {\n      if (this.isRecording) {\n        // 停止录音的逻辑\n        this.stopRecording();\n      } else {\n        // 开始录音的逻辑\n        this.startRecording();\n      }\n    },\n\n    // 生成综合评价\n    async generateComprehensiveEvaluation() {\n      // 构建提示信息\n      // 修改prompt，要求结合评分和具体建议\n      const prompt = `基于以下面试者的五维分析数据，生成综合评价和改进建议：\n1. 专业知识水平: ${this.firstResult || '无数据'}（评分：${this.reportValues[0]}）\n2. 技能匹配度: ${this.secondResult || '无数据'}（评分：${this.reportValues[1]}）\n3. 语言表达能力: ${this.thirdResult || '无数据'}（评分：${this.reportValues[2]}）\n4. 逻辑思维能力: ${this.fourthResult || '无数据'}（评分：${this.reportValues[3]}）\n5. 创新能力: ${this.fifthResult || '无数据'}（评分：${this.reportValues[4]}）\n\n请严格按照以下格式输出：\n【综合评价】\n[100字左右，结合评分总结优势和不足]\n\n【改进建议】\n1. [具体可操作的建议，关联专业知识]\n2. [具体可操作的建议，关联技能或表达]\n3. [具体可操作的建议，关联思维或创新]`;\n\n      try {\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\n          method: 'POST',\n          headers: {\n            ...this.commonHeaders,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ prompt: prompt })\n        });\n\n        if (!response.ok) {\n          throw new Error(`生成综合评价失败: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        if (data.status === 'success' && data.result) {\n          const result = data.result;\n\n          // 提取综合评价\n          const evalMatch = result.match(/【综合评价】\\s*([\\s\\S]*?)(?=【改进建议】)/);\n          this.comprehensiveEvaluation = evalMatch ? evalMatch[1].trim() : '无法生成综合评价';\n\n          // 提取改进建议\n          this.improvementSuggestions = [];\n          const suggestionsMatch = result.match(/【改进建议】\\s*([\\s\\S]*)/);\n          if (suggestionsMatch && suggestionsMatch[1]) {\n            // 按序号提取建议\n            const suggestions = suggestionsMatch[1]\n              .split(/\\n\\d+\\./)\n              .filter(item => item.trim());\n\n            suggestions.forEach(suggestion => {\n              this.improvementSuggestions.push(suggestion.trim());\n            });\n          }\n\n          // 兜底处理（确保至少有3条建议）\n          while (this.improvementSuggestions.length < 3) {\n            this.improvementSuggestions.push('加强对应维度的专项训练');\n          }\n        }\n      } catch (error) {\n        console.error('生成综合评价失败:', error);\n        // 使用默认评价\n        this.comprehensiveEvaluation = '面试者表现中等，各方面能力有提升空间。';\n        this.improvementSuggestions = [\n          \"加强专业知识的深度和广度\",\n          \"提高语言表达的清晰度和逻辑性\",\n          \"在实际应用中培养创新思维\"\n        ];\n      }\n    },\n\n    // 在generateComprehensiveEvaluation方法后添加\n    async generateKeyIssues() {\n      // 生成关键问题定位\n      // 修改prompt，明确要求结构化输出\n      const prompt = `基于以下面试者的表现，分析其在面试中暴露的关键问题和不足:\n专业知识水平: ${this.firstResult || '无数据'}\n技能匹配度: ${this.secondResult || '无数据'}\n语言表达能力: ${this.thirdResult || '无数据'}\n逻辑思维能力: ${this.fourthResult || '无数据'}\n创新能力: ${this.fifthResult || '无数据'}\n\n请严格按照以下格式输出，不要添加额外内容：\n【关键问题定位】\n[用1-2句话总结核心问题]\n\n【具体表现示例】\n1. [第一个具体例子]\n2. [第二个具体例子]\n3. [第三个具体例子]`;\n\n      try {\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\n          method: 'POST',\n          headers: {\n            ...this.commonHeaders,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ prompt: prompt })\n        });\n\n        if (!response.ok) throw new Error(`生成关键问题失败: ${response.status}`);\n\n        const data = await response.json();\n        if (data.status === 'success' && data.result) {\n          const result = data.result;\n\n          // 提取关键问题定位（匹配【关键问题定位】后的内容）\n          const issueMatch = result.match(/【关键问题定位】\\s*([\\s\\S]*?)(?=【具体表现示例】)/);\n          this.keyIssues = issueMatch ? issueMatch[1].trim() : '未发现明显问题';\n\n          // 提取具体示例（匹配【具体表现示例】后的列表）\n          this.issueExamples = [];\n          const examplesMatch = result.match(/【具体表现示例】\\s*([\\s\\S]*)/);\n          if (examplesMatch && examplesMatch[1]) {\n            // 按序号分割提取每个示例\n            const examples = examplesMatch[1].split(/\\n\\d+\\./).filter(item => item.trim());\n            examples.forEach(example => {\n              this.issueExamples.push(example.trim());\n            });\n            // 限制最多3个示例\n            this.issueExamples = this.issueExamples.slice(0, 3);\n          }\n        }\n      } catch (error) {\n        console.error('生成关键问题失败:', error);\n        this.keyIssues = '无法分析关键问题';\n      }\n    },\n\n    async generateFeedbackSuggestions() {\n      // 生成分类反馈建议\n      // 修改prompt，明确分类和格式要求\n      const prompt = `基于以下面试者的表现，从5个维度给出具体改进建议：\n专业知识水平: ${this.firstResult || '无数据'}\n技能匹配度: ${this.secondResult || '无数据'}\n语言表达能力: ${this.thirdResult || '无数据'}\n逻辑思维能力: ${this.fourthResult || '无数据'}\n创新能力: ${this.fifthResult || '无数据'}\n\n请严格按照以下格式输出（每个维度至少2条建议，用\"-\"开头）：\n【专业知识】\n- 建议1\n- 建议2\n\n【技能提升】\n- 建议1\n- 建议2\n\n【表达能力】\n- 建议1\n- 建议2\n\n【思维逻辑】\n- 建议1\n- 建议2\n\n【创新思维】\n- 建议1\n- 建议2`;\n\n      try {\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\n          method: 'POST',\n          headers: {\n            ...this.commonHeaders,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ prompt: prompt })\n        });\n\n        if (!response.ok) throw new Error(`生成反馈建议失败: ${response.status}`);\n\n        const data = await response.json();\n        if (data.status === 'success' && data.result) {\n          this.feedbackCategories = [];\n          const categories = ['专业知识', '技能提升', '表达能力', '思维逻辑', '创新思维'];\n\n          categories.forEach(category => {\n            // 匹配每个分类的内容（如【专业知识】和下一个分类之间的内容）\n            const regex = new RegExp(`【${category}】\\\\s*([\\\\s\\\\S]*?)(?=【|$)`, 'i');\n            const match = data.result.match(regex);\n\n            if (match && match[1]) {\n              // 提取\"-\"开头的建议列表\n              const suggestions = match[1]\n                .split('\\n')\n                .filter(line => line.trim().startsWith('-'))\n                .map(line => line.trim().replace(/^-/, '').trim());\n\n              this.feedbackCategories.push({\n                title: category,\n                suggestions: suggestions.length ? suggestions : ['暂无具体建议']\n              });\n            }\n          });\n        }\n      } catch (error) {\n        console.error('生成反馈建议失败:', error);\n        this.feedbackCategories = [{\n          title: '通用建议',\n          suggestions: [\n            '加强专业知识学习',\n            '提高语言表达能力',\n            '多练习逻辑思维'\n          ]\n        }];\n      }\n    },\n\n    // 渲染雷达图（修复图表不显示问题）\n    renderRadarChart1() {\n      // 确保DOM元素已存在\n      this.$nextTick(() => {\n        const ctx = this.$refs.radarChart?.getContext('2d');\n        if (!ctx) {\n          console.error('未找到雷达图Canvas元素');\n          return;\n        }\n\n        // 销毁现有图表\n        if (this.chart) {\n          this.chart.destroy();\n        }\n\n        // 确保有数据再绘制图表\n        if (!this.reportIndicators || !this.reportValues || this.reportIndicators.length !== this.reportValues.length) {\n          console.error('雷达图数据不完整');\n          return;\n        }\n\n        // 创建新图表\n        this.chart = new Chart(ctx, {\n          type: 'radar',\n          data: {\n            labels: this.reportIndicators,\n            datasets: [{\n              label: '能力评分',\n              data: this.reportValues,\n              backgroundColor: 'rgba(59, 130, 246, 0.2)',\n              borderColor: 'rgba(59, 130, 246, 1)',\n              pointBackgroundColor: 'rgba(59, 130, 246, 1)',\n              pointBorderColor: '#fff',\n              pointHoverBackgroundColor: '#fff',\n              pointHoverBorderColor: 'rgba(59, 130, 246, 1)'\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              r: {\n                angleLines: { display: true },\n                suggestedMin: 0,\n                suggestedMax: 100,\n                ticks: { callback: (value) => `${value}分` }\n              }\n            },\n            plugins: {\n              legend: { position: 'top' },\n              tooltip: {\n                callbacks: { label: (context) => `${context.label}: ${context.raw}分` }\n              }\n            }\n          }\n        });\n      });\n    },\n\n    // 获取评分等级文本\n    getScoreLevel(score) {\n      if (score >= 85) return '优秀';\n      if (score >= 75) return '良好';\n      if (score >= 65) return '一般';\n      return '待提高';\n    },\n\n    // 获取评分对应的CSS类\n    getScoreClass(score) {\n      if (score >= 85) return 'excellent';\n      if (score >= 75) return 'good';\n      if (score >= 65) return 'average';\n      return 'poor';\n    }\n  }\n};\n</script>\n\n<style scoped>\n#dialog {\n  position: relative;\n  height: 100vh;\n  overflow: hidden;\n  background-color: #EDEDF5;\n}\n\n.van-nav-bar {\n  --van-nav-bar-background-color: #EFF1FD;\n  --van-nav-bar-title-text-color: black;\n}\n\n.chat-container {\n  width: 100%;\n  overflow-y: auto;\n  box-sizing: border-box;\n}\n\n.messages {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 0 15px;\n}\n\n.message-item {\n  display: flex;\n  align-items: flex-start;\n  margin: 5px 0;\n}\n\n.user-message {\n  justify-content: flex-end;\n\n}\n\n/* 用户消息气泡样式（关键） */\n.user-message .message-bubble,\n.user-message .voice-bubble,\n.user-message .expression-bubble {\n  margin-right: 8px;\n  /* 与头像保持距离 */\n  margin-left: 0;\n  /* 左侧无间距 */\n}\n\n.avatar {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  flex-shrink: 0;\n}\n\n.ai-message .avatar {\n  background-color: #e6f7ff;\n  color: #1890ff;\n}\n\n.user-message .avatar {\n  background-color: #f5f5f5;\n  color: #8c8c8c;\n}\n\n.message-bubble {\n  padding: 10px 15px;\n  border-radius: 18px;\n  max-width: 80%;\n  word-wrap: break-word;\n  position: relative;\n}\n\n.ai-message .message-bubble {\n  background-color: #ffffff;\n  border-top-left-radius: 4px;\n}\n\n.user-message .message-bubble {\n  background-color: #1677ff;\n  color: white;\n  border-top-right-radius: 4px;\n}\n\n.voice-bubble {\n  max-width: 80%;\n  padding: 10px 15px;\n  border-radius: 18px;\n  position: relative;\n}\n\n.ai-message .voice-bubble {\n  background-color: #ffffff;\n  border-top-left-radius: 4px;\n}\n\n.user-message .voice-bubble {\n  background-color: #1677ff;\n  color: white;\n  border-top-right-radius: 4px;\n}\n\n.voice-controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  min-width: 150px;\n}\n\n.voice-wave {\n  display: flex;\n  align-items: center;\n  gap: 3px;\n  height: 24px;\n  flex-grow: 1;\n}\n\n.voice-wave div {\n  width: 3px;\n  background-color: currentColor;\n  border-radius: 3px;\n  transition: height 0.2s ease;\n}\n\n.voice-duration {\n  font-size: 12px;\n  color: currentColor;\n  opacity: 0.8;\n}\n\n.play-icon {\n  cursor: pointer;\n}\n\n.voice-actions {\n  display: flex;\n  gap: 5px;\n  margin-top: 8px;\n  flex-wrap: wrap;\n}\n\n.voice-text-result {\n  margin-top: 8px;\n  padding-top: 8px;\n  border-top: 1px dashed #eee;\n  font-size: 14px;\n  color: #333;\n  background-color: rgba(255, 255, 255, 0.7);\n  padding: 5px;\n  border-radius: 4px;\n}\n\n.voice-speed-result {\n  margin-top: 5px;\n  font-size: 12px;\n  color: #666;\n  background-color: rgba(255, 255, 255, 0.5);\n  padding: 3px 5px;\n  border-radius: 4px;\n}\n\n.voice-tone-result {\n  margin-top: 8px;\n  padding-top: 8px;\n  border-top: 1px dashed #eee;\n  font-size: 12px;\n  color: #666;\n  background-color: rgba(255, 255, 255, 0.7);\n  padding: 5px;\n  border-radius: 4px;\n}\n\n.voice-logic-result {\n  margin-top: 8px;\n  padding-top: 8px;\n  border-top: 1px dashed #eee;\n  font-size: 13px;\n  color: #333;\n  background-color: rgba(255, 255, 255, 0.7);\n  padding: 5px;\n  border-radius: 4px;\n}\n\n/* 表情和姿态分析样式 */\n.expression-bubble {\n  max-width: 80%;\n  padding: 10px 15px;\n  border-radius: 18px;\n  position: relative;\n}\n\n.ai-message .expression-bubble {\n  background-color: #ffffff;\n  border-top-left-radius: 4px;\n}\n\n.user-message .expression-bubble {\n  background-color: #1677ff;\n  color: white;\n  border-top-right-radius: 4px;\n}\n\n.expression-image-container {\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  margin-bottom: 10px;\n}\n\n.expression-image {\n  width: 200px;\n  height: auto;\n  display: block;\n}\n\n.expression-results,\n.pose-result,\n.comprehensive-analysis {\n  margin-top: 8px;\n  font-size: 13px;\n  padding: 5px;\n  border-radius: 4px;\n  background-color: rgba(255, 255, 255, 0.7);\n  color: #333;\n}\n\n.expression-actions {\n  display: flex;\n  gap: 5px;\n  margin-top: 8px;\n  justify-content: flex-end;\n}\n\n.error-message {\n  background-color: #fff2f0 !important;\n  color: #f5222d !important;\n}\n\n.typing {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.typing span {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: #6b7280;\n  animation: typing 1.4s infinite ease-in-out both;\n}\n\n.typing span:nth-child(1) {\n  animation-delay: -0.32s;\n}\n\n.typing span:nth-child(2) {\n  animation-delay: -0.16s;\n}\n\n@keyframes typing {\n\n  0%,\n  80%,\n  100% {\n    transform: scale(0);\n  }\n\n  40% {\n    transform: scale(1);\n  }\n}\n\n\n#dialog_bottombar {\n  width: 100%;\n  background-color: #EFF1FD;\n}\n\n#dialog_bottombar_inside {\n  position: relative;\n  width: 100%;\n  padding: 8px 2.5% 15px;\n  box-sizing: border-box;\n}\n\n.recording {\n  color: #f5222d !important;\n  animation: pulse 1.5s infinite;\n}\n\n.camera-active {\n  color: #00b42a !important;\n  animation: pulse 2s infinite;\n}\n\n.report-icon {\n  color: #722ed1 !important;\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(1.2);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n}\n\n.recording-indicator {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 20px 30px;\n  border-radius: 10px;\n  text-align: center;\n  z-index: 1000;\n}\n\n.recording-dot {\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background-color: #f5222d;\n  margin: 0 auto 10px;\n  animation: blink 1s infinite;\n}\n\n@keyframes blink {\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.5;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n.status-bar {\n  position: absolute;\n  bottom: 120px;\n  left: 0;\n  width: 100%;\n  text-align: center;\n  transition: opacity 0.3s ease;\n}\n\n/* 相机模态框样式 */\n.camera-modal {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.camera-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  border-bottom: 1px solid #eee;\n}\n\n.camera-preview {\n  flex-grow: 1;\n  position: relative;\n  background-color: #000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.camera-video {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.camera-loading,\n.camera-error {\n  position: absolute;\n  color: white;\n  text-align: center;\n  padding: 20px;\n}\n\n.camera-controls {\n  padding: 15px;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  background-color: #f5f5f5;\n}\n\n/* 评测报告弹窗样式 */\n.report-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0;\n}\n\n.report-header {\n  text-align: center;\n  padding: 10px 20px;\n  position: relative;\n  border-bottom: 1px solid #eee;\n}\n\n.report-header h2 {\n  margin: 0;\n  font-size: 18px;\n  color: #1e293b;\n}\n\n.close-icon {\n  position: absolute;\n  right: 15px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #666;\n}\n\n.report-loading,\n.report-error {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n  gap: 15px;\n  padding: 20px;\n}\n\n.report-content {\n  flex-grow: 1;\n  overflow-y: auto;\n  padding: 15px;\n}\n\n/* 雷达图样式 */\n.radar-chart-container {\n  margin-bottom: 20px;\n  padding: 15px;\n  background: #f8fafc;\n  border-radius: 8px;\n}\n\n.chart-title {\n  font-size: 16px;\n  color: #334155;\n  text-align: center;\n  margin-bottom: 10px;\n  font-weight: 500;\n}\n\n.chart-wrapper {\n  width: 100%;\n  height: 300px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* 能力详情样式 */\n.ability-details-container {\n  margin-bottom: 20px;\n  padding: 15px;\n  background: #f8fafc;\n  border-radius: 8px;\n}\n\n.details-title {\n  font-size: 16px;\n  color: #334155;\n  text-align: center;\n  margin-bottom: 10px;\n  font-weight: 500;\n}\n\n.details-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 10px;\n}\n\n.detail-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 10px;\n  background: #fff;\n  border-radius: 6px;\n  font-size: 14px;\n}\n\n.indicator-name {\n  color: #334155;\n}\n\n.score-value {\n  font-weight: bold;\n}\n\n.excellent {\n  color: #2ecc71;\n}\n\n.good {\n  color: #f39c12;\n}\n\n.average {\n  color: #3498db;\n}\n\n.poor {\n  color: #e74c3c;\n}\n\n/* 分析内容样式 */\n.analysis-container {\n  margin-bottom: 20px;\n  padding: 15px;\n  background: #f8fafc;\n  border-radius: 8px;\n}\n\n.analysis-title {\n  font-size: 16px;\n  color: #334155;\n  margin-bottom: 15px;\n  font-weight: 500;\n}\n\n.analysis-section {\n  margin-bottom: 15px;\n  padding-bottom: 15px;\n  border-bottom: 1px dashed #e2e8f0;\n}\n\n.analysis-section:last-child {\n  margin-bottom: 0;\n  padding-bottom: 0;\n  border-bottom: none;\n}\n\n.analysis-section h4 {\n  margin: 0 0 8px 0;\n  font-size: 14px;\n  color: #1e293b;\n}\n\n.analysis-section p {\n  margin: 0;\n  font-size: 13px;\n  color: #475569;\n  line-height: 1.5;\n}\n\n/* 综合评价样式 */\n.summary-container {\n  margin-bottom: 20px;\n  padding: 15px;\n  background: #f8fafc;\n  border-radius: 8px;\n}\n\n.summary-title {\n  font-size: 16px;\n  color: #334155;\n  margin-bottom: 15px;\n  font-weight: 500;\n}\n\n.summary-content {\n  background: #fff;\n  padding: 15px;\n  border-radius: 6px;\n}\n\n.summary-content p {\n  margin: 0 0 10px 0;\n  font-size: 13px;\n  color: #475569;\n  line-height: 1.5;\n}\n\n.summary-content h4 {\n  margin: 15px 0 8px 0;\n  font-size: 14px;\n  color: #1e293b;\n}\n\n.summary-content ul {\n  margin: 0;\n  padding-left: 20px;\n}\n\n.summary-content li {\n  font-size: 13px;\n  color: #475569;\n  margin-bottom: 5px;\n  line-height: 1.5;\n}\n\n/* 响应体展示样式 */\n.response-body-container {\n  margin-top: 20px;\n  padding: 15px;\n  background: #f8fafc;\n  border-radius: 8px;\n}\n\n.response-body-title {\n  font-size: 16px;\n  color: #334155;\n  margin-bottom: 10px;\n  font-weight: 500;\n}\n\n.response-body-content {\n  background: #fff;\n  padding: 15px;\n  border-radius: 6px;\n  max-height: 200px;\n  overflow-y: auto;\n  font-family: monospace;\n}\n\n.response-body-content pre {\n  margin: 0;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  font-size: 12px;\n  color: #334155;\n}\n\n/* Markdown渲染样式 */\n.markdown-bubble {\n  padding: 12px 15px;\n  line-height: 1.8;\n}\n\n.markdown-render h1 {\n  font-size: 1.5rem;\n  margin: 1rem 0 0.5rem;\n  color: #333;\n}\n\n.markdown-render h2 {\n  font-size: 1.3rem;\n  margin: 0.8rem 0 0.4rem;\n  color: #444;\n}\n\n.markdown-render h3 {\n  font-size: 1.1rem;\n  margin: 0.6rem 0 0.3rem;\n  color: #555;\n}\n\n.markdown-render ul {\n  margin: 0.5rem 0;\n  padding-left: 1.5rem;\n}\n\n.markdown-render li {\n  margin: 0.3rem 0;\n}\n\n.markdown-render strong {\n  font-weight: bold;\n  color: #222;\n}\n\n.markdown-render em {\n  color: #666;\n  font-style: italic;\n}\n\n.markdown-render p {\n  margin: 0.5rem 0;\n}\n\n/* 修复可能的样式冲突 */\n.markdown-render * {\n  box-sizing: border-box;\n}\n\n.formatted-content {\n\n  color: #111827;\n}\n\n\n.formatted-content div[style*=\"color: rgba(107, 114, 128, 0.7)\"] {\n  color: rgba(107, 114, 128, 0.7) !important;\n  background-color: rgba(243, 244, 246, 0.3) !important;\n}\n.van-popup.dragging {\n  user-select: none;\n}\n</style>\n","import { render } from \"./DialogView.vue?vue&type=template&id=033a1a2f&scoped=true\"\nimport script from \"./DialogView.vue?vue&type=script&lang=js\"\nexport * from \"./DialogView.vue?vue&type=script&lang=js\"\n\nimport \"./DialogView.vue?vue&type=style&index=0&id=033a1a2f&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-033a1a2f\"]])\n\nexport default __exports__","<template>\n    <!-- 侧边页面 -->\n    <div id=\"side\">\n        <div id=\"side_top\">\n            <div id=\"side_top_inside\">\n                <div id=\"side_top_in1\">\n                    <van-icon :name=\"require('@/assets/icon/icon_side_打卡.png')\" size=\"22\" style=\"margin:3px 20px 3px 0;\" />\n                    <van-icon name=\"cross\" size=\"25\" color=\"white\" style=\"float:right;\" @click=\"back()\" />\n                </div>\n                <div id=\"side_top_in2\">\n                    <van-image\n                        round\n                        width=\"60px\"\n                        height=\"60px\"\n                        :src=\"require('@/assets/images/my_profile.jpg')\"\n                        @click=\"openMyCard()\"\n                        style=\"border:2px solid white; float:left; margin-right:15px;\" />\n                    <span style=\"font-size:18px;\">{{ username || '且听风吟' }}</span>\n                    <van-icon :name=\"require('@/assets/icon/icon_side_二维码.png')\" size=\"20\" style=\"float:right; padding:0 5px;\" /><br>\n                    <van-image :src=\"require('@/assets/images/qq等级.png')\" style=\"width:170px;\" /><br>\n                    <van-icon :name=\"require('@/assets/icon/icon_side_个性签名.png')\" size=\"15\" />\n                    <span style=\"margin:0 10px;\">此心光明，亦复何虑。</span>\n                </div>\n            </div>\n        </div>\n        <div id=\"side_content\">\n            <ul>\n                <!-- 诗词内容列表 -->\n                <li v-for=\"(poetry, index) in poetryList\" :key=\"index\">\n                    <van-cell center is-link :title=\"poetry.content\" style=\"padding:10px 20px;\">\n                        <template #icon>\n                            <van-icon :name=\"poetry.icon\" size=\"20\" style=\"margin-right:15px\" />\n                        </template>\n                    </van-cell>\n                </li>\n            </ul>\n        </div>\n        <div id=\"side_bottom\">\n            <div id=\"side_bottom_inside\">\n                <van-row>\n                    <van-col span=\"6\" style=\"text-align:center;\">\n                        <van-icon name=\"book\" size=\"20\" /><br>诗\n                    </van-col>\n                    <van-col span=\"6\" style=\"text-align:center;\">\n                        <van-icon name=\"pen\" size=\"20\" /><br>词\n                    </van-col>\n                    <van-col span=\"6\" style=\"text-align:center;\">\n                        <van-icon name=\"history\" size=\"20\" /><br>典故\n                    </van-col>\n                    <van-col span=\"6\" style=\"text-align:center;\">\n                        <van-icon name=\"share\" size=\"20\" /><br>分享\n                    </van-col>\n                </van-row>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            username: '',\n            // 诗词列表 - 包含岳飞、苏轼、李煜、李白的经典诗句\n            poetryList: [\n                {  content: \"怒发冲冠，凭栏处\" }, // 岳飞《满江红》\n                { icon: 'road', content: \"人生如逆旅，我亦是行人\" }, // 苏轼《临江仙》\n                { icon: 'moon', content: \"世事一场大梦，人生几度秋凉\" }, // 苏轼《西江月》\n                { icon: 'boat', content: \"小舟从此逝，江海寄余生\" }, // 苏轼《临江仙》\n                { icon: 'teardrop', content: \"问君能有几多愁？恰似一江春水向东流\" }, // 李煜《虞美人》\n                { icon: 'laugh', content: \"仰天大笑出门去，我辈岂是蓬蒿人\" }, // 李白《南陵别儿童入京》\n                { icon: 'sword', content: \"莫等闲，白了少年头，空悲切\" }, // 岳飞《满江红》\n                { icon: 'wine', content: \"人生得意须尽欢，莫使金樽空对月\" }, // 李白《将进酒》\n                { icon: 'cloud', content: \"人生如逆旅，我亦是行人\" }, // 苏轼《临江仙》\n                { icon: 'leaf', content: \"剪不断，理还乱，是离愁\" }, // 李煜《相见欢》\n                { icon: 'mountain', content: \"会当凌绝顶，一览众山小\" } // 杜甫《望岳》\n            ]\n        };\n    },\n    methods: {\n        // 返回\n        back() {\n            history.back();\n        },\n        // 打开我的个性名片\n        openMyCard() {\n            this.$router.push('/card?profile=my_profile.jpg&name='+ (this.username || '朽木') +'&qq=1164585349&gender=男&age=21&birth_month=10&birth_day=22&constellation=天秤&place=广东广州&sign=此心光明，亦复何虑。');\n        }\n    },\n    mounted() {\n        // 从localStorage获取用户名\n        const userInfo = localStorage.getItem('currentUser');\n        if (userInfo) {\n            try {\n                const parsedUser = JSON.parse(userInfo);\n                this.username = parsedUser.username || '';\n            } catch (error) {\n                console.error('解析用户信息失败', error);\n                this.username = '';\n            }\n        }\n    }\n}\n</script>\n\n<style>\n#side_top{\n    height: 172px;\n}\n#side_top_inside {\n    position: fixed;\n    top: 0px;\n    width: 100%;\n    color: white;\n    z-index: 99;\n    background-color: rgb(221, 214, 214);\n    background-image: url(@/assets/images/side_background.jpg);\n    background-size: cover;\n}\n#side_top_in1 {\n    padding: 20px;\n}\n#side_top_in2 {\n    padding: 5px 20px 15px;\n}\n#side_content {\n    background-color: white;\n    padding: 15px 0px 10px;\n    margin-bottom: 63px; /* 为底部区域留出空间 */\n}\n#side_bottom {\n    height: 63px;\n}\n#side_bottom_inside {\n    position: fixed;\n    bottom: 0px;\n    width: 100%;\n    padding: 10px 0;\n    font-size: 12px;\n    background-color: white;\n    border-top: 1px solid #eee;\n}\n/* 列表项样式优化 */\n.van-cell {\n    border-bottom: 1px solid #f5f5f5;\n}\n.van-cell__title {\n    font-size: 15px;\n    color: #333;\n    font-family: \"SimSun\", serif; /* 宋体更适合诗词展示 */\n}\n.van-icon {\n    color: #666;\n}\n</style>\n    ","import { render } from \"./SideView.vue?vue&type=template&id=318fd1b6\"\nimport script from \"./SideView.vue?vue&type=script&lang=js\"\nexport * from \"./SideView.vue?vue&type=script&lang=js\"\n\nimport \"./SideView.vue?vue&type=style&index=0&id=318fd1b6&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div id=\"dialog\">\r\n    <!-- 顶部导航导航栏 -->\r\n    <van-nav-bar :fixed=\"true\" :placeholder=\"true\" left-arrow @click-left=\"backToHomeMessage()\"\r\n      custom-style=\"z-index: 999;\">\r\n      <template #right>\r\n        <van-icon name=\"wap-nav\" size=\"20\" />\r\n      </template>\r\n      <template #title>\r\n        <div style=\"line-height: 20px;\">\r\n          大数据运维测试岗面试官\r\n          <br>\r\n          \r\n        </div>\r\n      </template>\r\n    </van-nav-bar>\r\n\r\n    <!-- 聊天会话内容区域 -->\r\n    <div id=\"dialog_content\" class=\"chat-container\">\r\n      <div class=\"messages\" ref=\"messagesContainer\">\r\n        <!-- 初始欢迎消息 -->\r\n        <div class=\"message-item ai-message\">\r\n\r\n          <div class=\"message-bubble\">\r\n            你好！我是大数据运维测试岗面试官\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 动态消息列表 -->\r\n        <div v-for=\"(msg, index) in messages\" :key=\"index\"\r\n          :class=\"['message-item', msg.sender === 'user' ? 'user-message flex-row-reverse' : 'ai-message']\">\r\n\r\n\r\n\r\n          <!-- 文本消息 -->\r\n          <div v-if=\"msg.type === 'text'\" class=\"message-bubble\" :class=\"msg.isError ? 'error-message' : ''\">\r\n            {{ msg.content }}\r\n          </div>\r\n          <!-- 新增：格式化消息（Markdown） -->\r\n          <div v-if=\"msg.type === 'formatted'\" class=\"message-bubble markdown-bubble\">\r\n            <div v-html=\"msg.content\" class=\"markdown-render\"></div>\r\n          </div>\r\n          <!-- 语音消息 -->\r\n          <div v-if=\"msg.type === 'voice'\" class=\"voice-bubble\">\r\n            <div class=\"voice-controls\">\r\n              <van-icon :name=\"msg.isPlaying ? 'pause-circle' : 'play-circle'\" size=\"20\"\r\n                @click=\"toggleVoicePlayback(index)\" class=\"play-icon\" />\r\n              <div class=\"voice-wave\">\r\n                <div :style=\"{ height: '100%' }\"></div>\r\n                <div :style=\"{ height: '60%' }\"></div>\r\n                <div :style=\"{ height: '80%' }\"></div>\r\n                <div :style=\"{ height: '40%' }\"></div>\r\n              </div>\r\n              <span class=\"voice-duration\">{{ formatDuration(msg.duration) }}</span>\r\n            </div>\r\n\r\n            <!-- 语音操作按钮 -->\r\n            <div class=\"voice-actions\" v-if=\"msg.sender === 'user'\">\r\n              <van-button size=\"mini\" type=\"primary\" @click=\"convertVoiceToText(index)\" round>\r\n                转文字\r\n              </van-button>\r\n              <van-button size=\"mini\" type=\"info\" @click=\"analyzeVoiceTone(index)\" round>\r\n                分析语调\r\n              </van-button>\r\n              <van-button size=\"mini\" type=\"warning\" @click=\"calculateSpeechSpeed(index)\" round\r\n                :disabled=\"!msg.textResult\">\r\n                语速\r\n              </van-button>\r\n              <van-button size=\"mini\" type=\"success\" @click=\"analyzeLanguageLogic(index)\" round\r\n                :disabled=\"!msg.textResult\">\r\n                语言逻辑\r\n              </van-button>\r\n            </div>\r\n\r\n            <!-- 语音转文字结果 -->\r\n            <div v-if=\"msg.textResult\" class=\"voice-text-result\">\r\n              {{ msg.textResult }}\r\n            </div>\r\n\r\n            <!-- 语速计算结果 -->\r\n            <div v-if=\"msg.speechSpeed\" class=\"voice-speed-result\">\r\n              语速: {{ msg.speechSpeed }} 字/秒 (约 {{ Math.round(msg.speechSpeed * 60) }} 字/分钟)\r\n            </div>\r\n\r\n            <!-- 语调分析结果 -->\r\n            <div v-if=\"msg.toneResult\" class=\"voice-tone-result\">\r\n              <div>语调: {{ msg.toneResult.tone_type }}</div>\r\n              <div>基频均值: {{ msg.toneResult.f0_mean }}Hz</div>\r\n              <div>基频范围: {{ msg.toneResult.f0_min }}-{{ msg.toneResult.f0_max }}Hz</div>\r\n            </div>\r\n\r\n            <!-- 语言逻辑分析结果 -->\r\n            <div v-if=\"msg.logicResult\" class=\"voice-logic-result\">\r\n              <div><strong>语言逻辑分析:</strong></div>\r\n              <div>{{ msg.logicResult.analysis }}</div>\r\n              <div v-if=\"msg.logicResult.score\"><strong>连贯性评分:</strong> {{ msg.logicResult.score }}/10</div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 表情和姿态分析消息 -->\r\n          <div v-if=\"msg.type === 'expression'\" class=\"expression-bubble\">\r\n            <div class=\"expression-image-container\">\r\n              <img :src=\"msg.imageUrl\" class=\"expression-image\" alt=\"表情和姿态分析截图\">\r\n            </div>\r\n\r\n            <!-- 表情分析结果 -->\r\n            <div  class=\"expression-results\">\r\n              <div><strong>表情与动作分析:</strong></div>\r\n              \r\n              <div>{{ msg.expressionResults.result }}</div>\r\n            </div>\r\n\r\n            <!-- 姿态分析结果 -->\r\n            <div v-if=\"msg.poseResult\" class=\"pose-result\">\r\n              <div><strong>姿态分析:</strong></div>\r\n              <div>动作: {{ msg.poseResult.pose }}</div>\r\n              <div>置信度: {{ (msg.poseResult.score * 100).toFixed(1) }}%</div>\r\n              <div>帧率: {{ msg.poseResult.fps }}fps</div>\r\n            </div>\r\n\r\n            <!-- 综合分析结果 -->\r\n            <div v-if=\"msg.comprehensiveAnalysis\" class=\"comprehensive-analysis\">\r\n              <div><strong>综合分析:</strong></div>\r\n              <div>{{ msg.comprehensiveAnalysis }}</div>\r\n            </div>\r\n\r\n            <!-- 操作按钮 -->\r\n            <div class=\"expression-actions\" v-if=\"msg.sender === 'user'\">\r\n              <van-button size=\"mini\" type=\"primary\" @click=\"analyzeComprehensive(index)\" round>\r\n                综合分析\r\n              </van-button>\r\n              <van-button size=\"mini\" type=\"success\" @click=\"saveAnalysisToStorage(msg)\" round>\r\n                保存分析\r\n              </van-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 正在输入指示器 -->\r\n        <div v-if=\"isTyping\" :id=\"typingId\" class=\"message-item ai-message\">\r\n          <div class=\"avatar\">\r\n\r\n          </div>\r\n          <div class=\"message-bubble typing\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 底部输入栏 -->\r\n    <div id=\"dialog_bottombar\">\r\n      <div id=\"dialog_bottombar_inside\">\r\n        <!-- 使用flex布局将输入框和发送按钮放在同一行 -->\r\n        <div style=\"display: flex; align-items: flex-end; gap: 8px;\">\r\n          <van-field type=\"textarea\" rows=\"1\" :autosize=\"{ maxHeight: 100, minHeight: 40 }\" v-model=\"message\"\r\n            style=\"border-radius:25px; padding:10px; flex: 1;\" @keypress.enter.prevent=\"sendMessage\"\r\n            placeholder=\"输入消息...\" />\r\n\r\n          <!-- 发送按钮移至输入框右侧 -->\r\n          <van-button round type=\"primary\" size=\"small\" @click=\"sendMessage\"\r\n            style=\"width:60px; height:60px; padding:0; display:flex; align-items:center; justify-content:center;\"\r\n            :disabled=\"!message.trim()\">\r\n            发送\r\n            <van-icon name=\"paper-plane-o\" size=\"16\" style=\"margin-left: 2px;\" />\r\n          </van-button>\r\n        </div>\r\n\r\n        <van-row style=\"padding-top: 8px;\">\r\n          <van-col span=\"8\" style=\"text-align:center;\">\r\n            <van-icon :name=\"isRecording ? 'stop' : require('@/assets/icon/icon_dialog_语音.png')\" size=\"20\"\r\n              @click=\"startInterviewProcess()\" />\r\n          </van-col>\r\n          <van-col span=\"8\" style=\"text-align:center;\">\r\n            <van-icon name=\"image\" size=\"20\" />\r\n          </van-col>\r\n          <van-col span=\"4\" style=\"text-align:center;\">\r\n            <van-icon :name=\"require('@/assets/icon/icon_dialog_相机.png')\" size=\"20\" @click=\"toggleCamera\"\r\n              :class=\"isCameraActive ? 'camera-active' : ''\" />\r\n          </van-col>\r\n          <van-col span=\"4\" style=\"text-align:center;\">\r\n            <van-icon name=\"red-envelope\" size=\"20\" />\r\n          </van-col>\r\n          \r\n          <!-- 移除原发送按钮所在的van-col -->\r\n        </van-row>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <van-popup \r\n      v-model:show=\"isCameraModalVisible\" \r\n      :style=\"{\r\n        width: popupWidth + 'px',   // 动态宽度\r\n        height: popupHeight + 'px', // 动态高度\r\n        left: popupLeft + 'px',     // 动态左偏移\r\n        top: popupTop + 'px',       // 动态上偏移\r\n        'z-index': 100,\r\n        background: 'white',\r\n        borderRadius: '12px',\r\n        boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\r\n        overflow: 'hidden',\r\n        position: 'fixed',  // 固定定位，支持自由移动\r\n        margin: 0           // 清除默认margin\r\n      }\" \r\n      :overlay=\"false\"\r\n      :position=\"null\"\r\n    >\r\n      <!-- 弹窗头部（可拖拽区域） -->\r\n      <!-- 开始拖拽 -->\r\n      <div \r\n        class=\"camera-header\"\r\n        style=\"padding: 12px; border-bottom: 1px solid #eee; display: flex; justify-content: space-between; align-items: center; cursor: move;\"\r\n        @mousedown=\"startDrag\"\r\n      >\r\n        <h3 style=\"margin: 0; font-size: 16px;\">表情与姿态识别</h3>\r\n        <van-icon name=\"close\" @click=\"toggleCamera\" style=\"font-size: 20px; cursor: pointer;\" />\r\n      </div>\r\n\r\n      <!-- 相机预览区域 -->\r\n      <div class=\"camera-preview\" style=\"flex: 1; padding: 10px; box-sizing: border-box; position: relative;\">\r\n        <video ref=\"videoElement\" autoplay playsinline class=\"camera-video\"\r\n          style=\"width: 100%; height: 100%; object-fit: cover; border-radius: 8px;\"></video>\r\n\r\n        <!-- 加载中状态 -->\r\n        <div v-if=\"isLoadingCamera\"\r\n          style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center;\">\r\n          <van-loading type=\"spinner\" color=\"#1677ff\" />\r\n          <p style=\"margin-top: 8px; color: #666;\">正在初始化相机...</p>\r\n        </div>\r\n\r\n        <!-- 错误提示 -->\r\n        <div v-if=\"cameraError\"\r\n          style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center; color: #f53f3f;\">\r\n          <van-icon name=\"warning-circle\" color=\"#f53f3f\" size=\"24\" />\r\n          <p style=\"margin-top: 8px;\">{{ cameraError }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 相机控制按钮 -->\r\n      <div class=\"camera-controls\" style=\"padding: 12px; display: flex; gap: 10px; justify-content: center;\">\r\n        <van-button type=\"primary\" round @click=\"captureImage\" :disabled=\"!isCameraActive || isProcessingImage\"\r\n          style=\"padding: 8px 20px;\">\r\n          <van-icon name=\"camera\" size=\"18\" style=\"margin-right: 5px;\" />\r\n          {{ isProcessingImage ? '处理中...' : '拍照分析' }}\r\n        </van-button>\r\n\r\n        <van-button type=\"info\" round @click=\"startContinuousAnalysis\"\r\n          :disabled=\"!isCameraActive || isAnalyzingContinuously\" style=\"padding: 8px 20px;\">\r\n          <van-icon name=\"play\" size=\"18\" style=\"margin-right: 5px;\" />\r\n          {{ isAnalyzingContinuously ? '停止连续分析' : '连续分析' }}\r\n        </van-button>\r\n      </div>\r\n\r\n      <!-- 右下角 resize 手柄（用于调整大小） -->\r\n      <div \r\n        class=\"resize-handle\"\r\n        style=\"position: absolute; right: 0; bottom: 0; width: 15px; height: 15px; cursor: nwse-resize; background: #1677ff; border-radius: 0 0 12px 0;\"\r\n        @mousedown=\"startResize\"\r\n      ></div>\r\n    </van-popup>\r\n\r\n\r\n    <!-- 评测报告弹窗 -->\r\n    <van-popup v-model:show=\"isReportVisible\" position=\"center\"\r\n      :style=\"{ width: '90%', maxWidth: '800px', height: '90%', overflow: 'auto' }\">\r\n      <div class=\"report-container\">\r\n        <div class=\"report-header\">\r\n          <h2>面试多维度评估报告</h2>\r\n          <van-icon name=\"close\" @click=\"isReportVisible = false\" class=\"close-icon\" />\r\n        </div>\r\n\r\n        <div v-if=\"reportLoading\" class=\"report-loading\">\r\n          <van-loading type=\"spinner\" color=\"#1677ff\" size=\"30\" />\r\n          <p>正在生成评估报告...</p>\r\n        </div>\r\n\r\n        <div v-else-if=\"reportError\" class=\"report-error\">\r\n          <van-icon name=\"warning-circle\" color=\"#f53f3f\" size=\"24\" />\r\n          <p>{{ reportError }}</p>\r\n          <van-button @click=\"generateReportFromStorage\" type=\"primary\" round>重试</van-button>\r\n        </div>\r\n\r\n        <div v-else class=\"report-content\">\r\n          <!-- 雷达图区域 -->\r\n          <div class=\"radar-chart-container\">\r\n            <h3 class=\"chart-title\">多维度能力雷达图</h3>\r\n            <div class=\"chart-wrapper\">\r\n              <canvas ref=\"radarChart\" width=\"400\" height=\"300\"></canvas>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 能力详情区域 -->\r\n          <div class=\"ability-details-container\">\r\n            <h3 class=\"details-title\">各维度评分详情</h3>\r\n            <div class=\"details-list\">\r\n              <div v-for=\"(item, index) in reportIndicators\" :key=\"index\" class=\"detail-item\">\r\n                <span class=\"indicator-name\">{{ item }}</span>\r\n                <span class=\"score-value\" :class=\"getScoreClass(reportValues[index])\">\r\n                  {{ reportValues[index] }}分 ({{ getScoreLevel(reportValues[index]) }})\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 详细分析区域 -->\r\n          <div class=\"analysis-container\">\r\n            <h3 class=\"analysis-title\">详细分析</h3>\r\n\r\n            <div class=\"analysis-section\">\r\n              <h4>专业知识水平</h4>\r\n              <p>{{ professionalKnowledgeAnalysis || '暂无数据' }}</p>\r\n              <p v-if=\"firstQuestion\"><strong>问题:</strong> {{ firstQuestion }}</p>\r\n              <p v-if=\"firstResult\"><strong>回答:</strong> {{ firstResult }}</p>\r\n            </div>\r\n\r\n            <div class=\"analysis-section\">\r\n              <h4>技能匹配度</h4>\r\n              <p>{{ skillMatchAnalysis || '暂无数据' }}</p>\r\n              <p v-if=\"secondQuestion\"><strong>问题:</strong> {{ secondQuestion }}</p>\r\n              <p v-if=\"secondResult\"><strong>回答:</strong> {{ secondResult }}</p>\r\n            </div>\r\n\r\n            <div class=\"analysis-section\">\r\n              <h4>语言表达能力</h4>\r\n              <p>{{ languageExpressionAnalysis || '暂无数据' }}</p>\r\n              <p v-if=\"thirdQuestion\"><strong>问题:</strong> {{ thirdQuestion }}</p>\r\n              <p v-if=\"thirdResult\"><strong>回答:</strong> {{ thirdResult }}</p>\r\n            </div>\r\n\r\n            <div class=\"analysis-section\">\r\n              <h4>逻辑思维能力</h4>\r\n              <p>{{ logicalThinkingAnalysis || '暂无数据' }}</p>\r\n              <p v-if=\"fourthQuestion\"><strong>问题:</strong> {{ fourthQuestion }}</p>\r\n              <p v-if=\"fourthResult\"><strong>回答:</strong> {{ fourthResult }}</p>\r\n            </div>\r\n\r\n            <div class=\"analysis-section\">\r\n              <h4>创新能力</h4>\r\n              <p>{{ innovationAbilityAnalysis || '暂无数据' }}</p>\r\n              <p v-if=\"fifthQuestion\"><strong>问题:</strong> {{ fifthQuestion }}</p>\r\n              <p v-if=\"fifthResult\"><strong>回答:</strong> {{ fifthResult }}</p>\r\n            </div>\r\n          </div>\r\n          <!-- 在报告的详细分析区域下方添加新内容 -->\r\n          <div class=\"analysis-container\">\r\n            <h3 class=\"analysis-title\">关键问题定位</h3>\r\n            <div class=\"issue-location\">\r\n              <p>{{ keyIssues || '暂无关键问题定位' }}</p>\r\n\r\n              <div v-if=\"issueExamples && issueExamples.length\">\r\n                <h4>具体表现示例:</h4>\r\n                <ul>\r\n                  <li v-for=\"(example, index) in issueExamples\" :key=\"index\">\r\n                    {{ example }}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"analysis-container\">\r\n            <h3 class=\"analysis-title\">反馈建议</h3>\r\n            <div class=\"feedback-suggestions\">\r\n              <div v-if=\"feedbackCategories && feedbackCategories.length\">\r\n                <div v-for=\"(category, catIndex) in feedbackCategories\" :key=\"catIndex\" class=\"feedback-category\">\r\n                  <h4>{{ category.title }}</h4>\r\n                  <ul>\r\n                    <li v-for=\"(suggestion, sugIndex) in category.suggestions\" :key=\"sugIndex\">\r\n                      {{ suggestion }}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <p v-else>暂无具体反馈建议</p>\r\n            </div>\r\n          </div>\r\n          <!-- 综合评价 -->\r\n          <div class=\"summary-container\">\r\n            <h3 class=\"summary-title\">综合评价与建议</h3>\r\n            <div class=\"summary-content\">\r\n              <p>{{ comprehensiveEvaluation || '暂无综合评价' }}</p>\r\n\r\n              <h4>改进建议</h4>\r\n              <ul v-if=\"improvementSuggestions.length\">\r\n                <li v-for=\"(suggestion, index) in improvementSuggestions\" :key=\"index\">\r\n                  {{ suggestion }}\r\n                </li>\r\n              </ul>\r\n              <p v-else>暂无建议</p>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 响应体展示区域 -->\r\n          <div class=\"response-body-container\">\r\n            <h3 class=\"response-body-title\">原始响应数据</h3>\r\n            <div class=\"response-body-content\">\r\n              <pre>{{ formattedReportResponse }}</pre>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </van-popup>\r\n\r\n    <!-- 录音提示 -->\r\n    <div v-if=\"isRecording\" class=\"recording-indicator\">\r\n      <div class=\"recording-dot\"></div>\r\n      <p>正在录音...{{ recordingSeconds }}s</p>\r\n      <p>松开结束录音</p>\r\n    </div>\r\n\r\n    <!-- 服务状态提示 -->\r\n    <div class=\"status-bar\" :class=\"statusClass\" style=\"z-index: 998;\">\r\n      {{ statusText }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Chart, registerables, RadarController } from 'chart.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n    // 弹窗初始位置和尺寸（可根据需求调整）\r\n      popupWidth: 300,\r\n      popupHeight: 600,\r\n      popupLeft: 500,\r\n      popupTop: 100,\r\n      \r\n      // 拖拽相关状态\r\n      isDragging: false,\r\n      startX: 0,\r\n      startY: 0,\r\n      \r\n      // 调整大小相关状态\r\n      isResizing: false,\r\n      startWidth: 0,\r\n      startHeight: 0,\r\n      msg: {\r\n        // 提前初始化 expressionResults 为数组，避免 undefined\r\n        expressionResults: []\r\n      },\r\n      // 关键问题定位\r\n      keyIssues: '',\r\n      issueExamples: [],\r\n\r\n      // 反馈建议\r\n      feedbackCategories: [],\r\n\r\n      name: this.$route.params.name,\r\n      message: \"\",\r\n      messages: [],\r\n      isTyping: false,\r\n      typingId: \"\",\r\n      API_BASE_URL: 'https://123.56.203.202',\r\n      statusText: '连接中...',\r\n      statusClass: 'text-xs text-gray-500 mt-2 text-center',\r\n      commonHeaders: {\r\n        'ngrok-skip-browser-warning': '1'\r\n      },\r\n\r\n      // 语音相关状态\r\n      isRecording: false,\r\n      mediaRecorder: null,\r\n      audioBlob: null,\r\n      recordingSeconds: 0,\r\n      recordingTimer: null,\r\n      audioContext: null,\r\n      audioElements: {},\r\n      mediaStream: null,\r\n      audioChunks: [],\r\n      transcribeCount: 0, // 转写计数，用于跟踪是第几次转写\r\n\r\n      // 相机相关状态\r\n      isCameraModalVisible: false,\r\n      isCameraActive: false,\r\n      isLoadingCamera: false,\r\n      cameraError: null,\r\n      isProcessingImage: false,\r\n      isAnalyzingContinuously: false,\r\n      continuousAnalysisTimer: null,\r\n      detectionInterval: null,\r\n      videoStream: null,\r\n\r\n      // 评测报告相关状态\r\n      isReportVisible: false,\r\n      reportLoading: false,\r\n      reportError: '',\r\n      chart: null,\r\n      reportResponse: null, // 存储原始响应数据\r\n\r\n      // 报告数据 - 五个维度\r\n      reportIndicators: [\r\n        '专业知识水平',\r\n        '技能匹配度',\r\n        '语言表达能力',\r\n        '逻辑思维能力',\r\n        '创新能力'\r\n      ],\r\n      reportValues: [60, 60, 60, 60, 60],\r\n\r\n      // 问题和答案存储\r\n      firstQuestion: '',\r\n      secondQuestion: '',\r\n      thirdQuestion: '',\r\n      fourthQuestion: '',\r\n      fifthQuestion: '',\r\n      firstResult: '',\r\n      secondResult: '',\r\n      thirdResult: '',\r\n      fourthResult: '',\r\n      fifthResult: '',\r\n\r\n      // 详细分析数据\r\n      professionalKnowledgeAnalysis: '', // 专业知识水平\r\n      skillMatchAnalysis: '', // 技能匹配度\r\n      languageExpressionAnalysis: '', // 语言表达能力\r\n      logicalThinkingAnalysis: '', // 逻辑思维能力\r\n      innovationAbilityAnalysis: '', // 创新能力\r\n      comprehensiveEvaluation: '',\r\n      improvementSuggestions: []\r\n    };\r\n  },\r\n  computed: {\r\n    // 格式化响应体数据用于展示\r\n    formattedReportResponse() {\r\n      if (!this.reportResponse) return '无响应数据';\r\n      return JSON.stringify(this.reportResponse, null, 2);\r\n    }\r\n  },\r\n  mounted() {\r\n    localStorage.setItem('career', '大数据运维测试岗');\r\n    console.log(localStorage.getItem('career'));\r\n    \r\n    this.testConnection();\r\n    this.initContainerHeight();\r\n    window.addEventListener('resize', this.initContainerHeight);\r\n    this.checkRecordingSupport();\r\n\r\n    // 从localStorage加载已保存的问题和答案\r\n    this.loadStoredQuestionsAndAnswers();\r\n\r\n    // 注册Chart.js组件\r\n    Chart.register(...registerables);\r\n    Chart.register(RadarController);\r\n    window.Chart = Chart;\r\n\r\n\r\n\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.initContainerHeight);\r\n    this.stopRecording();\r\n    Object.values(this.audioElements).forEach(audio => {\r\n      if (audio) {\r\n        audio.pause();\r\n      }\r\n    });\r\n\r\n    // 清理相机相关资源\r\n    this.stopCamera();\r\n    if (this.continuousAnalysisTimer) {\r\n      clearInterval(this.continuousAnalysisTimer);\r\n    }\r\n    if (this.detectionInterval) {\r\n      clearInterval(this.detectionInterval);\r\n    }\r\n\r\n    // 销毁图表\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n    }\r\n  },\r\n  methods: {\r\n     // 开始拖拽弹窗\r\n    startDrag(e) {\r\n      this.isDragging = true;\r\n      // 记录初始鼠标位置和弹窗位置\r\n      this.startX = e.clientX;\r\n      this.startY = e.clientY;\r\n      \r\n      // 绑定鼠标移动和释放事件\r\n      document.addEventListener('mousemove', this.handleDrag);\r\n      document.addEventListener('mouseup', this.stopDrag);\r\n      e.preventDefault(); // 防止拖动时选中文本\r\n    },\r\n    \r\n    // 处理拖拽逻辑\r\n    handleDrag(e) {\r\n      if (!this.isDragging) return;\r\n      \r\n      // 计算鼠标移动距离\r\n      const deltaX = e.clientX - this.startX;\r\n      const deltaY = e.clientY - this.startY;\r\n      \r\n      // 更新弹窗位置（限制在可视区域内）\r\n      const newLeft = this.popupLeft + deltaX;\r\n      const newTop = this.popupTop + deltaY;\r\n      \r\n      // 限制左边界不小于0\r\n      this.popupLeft = Math.max(0, newLeft);\r\n      // 限制上边界不小于0\r\n      this.popupTop = Math.max(0, newTop);\r\n      // 限制右边界不超过窗口宽度\r\n      this.popupLeft = Math.min(window.innerWidth - this.popupWidth, this.popupLeft);\r\n      // 限制下边界不超过窗口高度\r\n      this.popupTop = Math.min(window.innerHeight - this.popupHeight, this.popupTop);\r\n      \r\n      // 更新初始位置（用于下一次计算）\r\n      this.startX = e.clientX;\r\n      this.startY = e.clientY;\r\n    },\r\n    \r\n    // 停止拖拽\r\n    stopDrag() {\r\n      this.isDragging = false;\r\n      document.removeEventListener('mousemove', this.handleDrag);\r\n      document.removeEventListener('mouseup', this.stopDrag);\r\n    },\r\n    \r\n    // 开始调整大小\r\n    startResize(e) {\r\n      this.isResizing = true;\r\n      // 记录初始鼠标位置和弹窗尺寸\r\n      this.startX = e.clientX;\r\n      this.startY = e.clientY;\r\n      this.startWidth = this.popupWidth;\r\n      this.startHeight = this.popupHeight;\r\n      \r\n      // 绑定鼠标移动和释放事件\r\n      document.addEventListener('mousemove', this.handleResize);\r\n      document.addEventListener('mouseup', this.stopResize);\r\n      e.preventDefault(); // 防止拖动时选中文本\r\n    },\r\n    \r\n    // 处理调整大小逻辑\r\n    handleResize(e) {\r\n      if (!this.isResizing) return;\r\n      \r\n      // 计算鼠标移动距离（控制宽高变化）\r\n      const deltaWidth = e.clientX - this.startX;\r\n      const deltaHeight = e.clientY - this.startY;\r\n      \r\n      // 计算新的宽高（设置最小尺寸限制，避免过小）\r\n      const minWidth = 200;\r\n      const minHeight = 300;\r\n      this.popupWidth = Math.max(minWidth, this.startWidth + deltaWidth);\r\n      this.popupHeight = Math.max(minHeight, this.startHeight + deltaHeight);\r\n      \r\n      // 限制最大尺寸不超过窗口\r\n      this.popupWidth = Math.min(window.innerWidth - 50, this.popupWidth);\r\n      this.popupHeight = Math.min(window.innerHeight - 50, this.popupHeight);\r\n    },\r\n    \r\n    // 停止调整大小\r\n    stopResize() {\r\n      this.isResizing = false;\r\n      document.removeEventListener('mousemove', this.handleResize);\r\n      document.removeEventListener('mouseup', this.stopResize);\r\n    },\r\n    // 从localStorage加载已保存的问题和答案\r\n    loadStoredQuestionsAndAnswers() {\r\n      // 硬编码设置指定的五个问题到localStorage（如果不存在）\r\n      const defaultQuestions = [\r\n        {\r\n          id: \"firstQuestion\",\r\n          content: \"请详细阐述您对大数据运维测试岗领域中核心概念和技术的理解，以及您在实际项目中如何应用这些知识解决问题。\"\r\n        },\r\n        {\r\n          id: \"secondQuestion\",\r\n          content: \"在大数据运维测试岗岗位上，您认为哪些关键技能是必不可少的？请举例说明您在这些技能方面的掌握程度和实际应用经验。\"\r\n        },\r\n        {\r\n          id: \"thirdQuestion\",\r\n          content: \"请描述一次您需要向非技术团队成员清晰解释大数据运维测试岗相关复杂技术概念的经历。您采用了什么方法确保对方理解？\"\r\n        },\r\n        {\r\n          id: \"fourthQuestion\",\r\n          content: \"在大数据运维测试岗工作中，当面对一个复杂问题时，您的分析和解决问题的逻辑步骤是什么？请分享一个具体案例。\"\r\n        },\r\n        {\r\n          id: \"fifthQuestion\",\r\n          content: \"请分享一个您在大数据运维测试岗相关项目中提出创新解决方案的经历。您是如何发现问题并提出新颖的解决思路的？\"\r\n        }\r\n      ];\r\n\r\n      // 初始化localStorage中的问题（如果不存在）\r\n      defaultQuestions.forEach(question => {\r\n        if (!localStorage.getItem(question.id)) {\r\n          localStorage.setItem(question.id, question.content);\r\n        }\r\n      });\r\n\r\n      // 从localStorage加载问题到组件\r\n      this.firstQuestion = localStorage.getItem(\"firstQuestion\") || '';\r\n      this.secondQuestion = localStorage.getItem(\"secondQuestion\") || '';\r\n      this.thirdQuestion = localStorage.getItem(\"thirdQuestion\") || '';\r\n      this.fourthQuestion = localStorage.getItem(\"fourthQuestion\") || '';\r\n      this.fifthQuestion = localStorage.getItem(\"fifthQuestion\") || '';\r\n\r\n      // 从localStorage加载答案到组件\r\n      this.firstResult = localStorage.getItem(\"firstResult\") || '';\r\n      this.secondResult = localStorage.getItem(\"secondResult\") || '';\r\n      this.thirdResult = localStorage.getItem(\"thirdResult\") || '';\r\n      this.fourthResult = localStorage.getItem(\"fourthResult\") || '';\r\n      this.fifthResult = localStorage.getItem(\"fifthResult\") || '';\r\n    },\r\n\r\n    startInterviewProcess() {\r\n  // 模拟avatarPlatform2已实例化\r\n  const avatarPlatform2 = true;\r\n\r\n  if (avatarPlatform2) {\r\n    // 初始调用 - 问候语（带自动播放视频）\r\n    let username = localStorage.getItem(\"username\") || \"候选人\";\r\n    let career = localStorage.getItem(\"career\") || \"相关岗位\";\r\n    let text = `你好，${username}，欢迎面试${career}。接下来将进行面试环节，共有五道题目，涉及专业知识水平、技能匹配度、语言表达能力、逻辑思维能力和创新能力五个维度。请认真思考后回答。`;\r\n\r\n    // 创建视频元素并设置自动播放\r\n    const videoElement = document.createElement('video');\r\n    videoElement.controls = true; // 显示播放控件\r\n    videoElement.autoplay = true; // 自动播放\r\n    videoElement.muted = false; // 不静音\r\n    videoElement.style.width = \"100%\";\r\n    videoElement.style.maxWidth = \"600px\";\r\n    videoElement.style.marginTop = \"15px\";\r\n\r\n    // 添加视频源\r\n    const sourceElement = document.createElement('source');\r\n    sourceElement.src = \"https://123.56.203.202/proxy_files?path=D%3A%5CTemp%5Crengongzhinengjishugang.mp4\";\r\n    sourceElement.type = \"video/mp4\";\r\n    videoElement.appendChild(sourceElement);\r\n\r\n    // 处理自动播放限制的兼容方案\r\n    videoElement.addEventListener('canplaythrough', () => {\r\n      // 尝试播放，处理浏览器自动播放政策限制\r\n      videoElement.play().catch(e => {\r\n        console.log('自动播放被浏览器限制，需要用户交互后播放:', e);\r\n        // 显示提示让用户手动播放\r\n        const playPrompt = document.createElement('p');\r\n        playPrompt.style.color = '#666';\r\n        playPrompt.style.fontSize = '14px';\r\n        playPrompt.textContent = '提示：请点击播放按钮观看面试说明';\r\n        messageContainer.appendChild(playPrompt);\r\n      });\r\n    });\r\n\r\n    // 创建包含文本和视频的容器\r\n    const messageContainer = document.createElement('div');\r\n    messageContainer.innerHTML = `<p>${text}</p>`;\r\n    messageContainer.appendChild(videoElement);\r\n\r\n    // 添加不支持视频的提示\r\n    const fallbackText = document.createTextNode(\"您的浏览器不支持视频播放功能\");\r\n    messageContainer.appendChild(fallbackText);\r\n\r\n    // 添加消息到界面\r\n    this.addMessage('ai', text, 'text');\r\n\r\n    // 设置30秒后自动显示面试题弹窗（横向单题展示）\r\n    setTimeout(() => {\r\n      // 硬编码岗位为人工智能技术岗\r\n      const career = \"大数据运维测试岗\";\r\n\r\n      // 五道题目的文本内容\r\n      const questions = [\r\n        {\r\n          title: \"第一道题\",\r\n          text: '',\r\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A/Temp/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E6%B5%8B%E8%AF%95%E5%B2%971.mp4\",\r\n          id: \"first\"\r\n        },\r\n        {\r\n          title: \"第二道题\",\r\n          text: '',\r\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A/Temp/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E6%B5%8B%E8%AF%95%E5%B2%972.mp4\",\r\n          id: \"second\"\r\n        },\r\n        {\r\n          title: \"第三道题\",\r\n          text: '',\r\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A/Temp/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E6%B5%8B%E8%AF%95%E5%B2%973.mp4\",\r\n          id: \"third\"\r\n        },\r\n        {\r\n          title: \"第四道题\",\r\n          text: '',\r\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A/Temp/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E6%B5%8B%E8%AF%95%E5%B2%974.mp4\",\r\n          id: \"fourth\"\r\n        },\r\n        {\r\n          title: \"第五道题\",\r\n          text: '',\r\n          videoUrl: \"https://123.56.203.202/proxy_files?path=D%3A/Temp/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E6%B5%8B%E8%AF%95%E5%B2%975.mp4\",\r\n          id: \"fifth\"\r\n        }\r\n      ];\r\n\r\n      // 当前题目索引\r\n      let currentIndex = 0;\r\n\r\n      // 弹窗位置和大小的默认值\r\n      const defaultWidth = 800;\r\n      const defaultHeight = 600;\r\n      const defaultLeft = (window.innerWidth - defaultWidth) / 2;\r\n      const defaultTop = (window.innerHeight - defaultHeight) / 2;\r\n\r\n      // 创建弹窗元素（背景遮罩）\r\n      const modal = document.createElement('div');\r\n      modal.style.cssText = `\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: rgba(0,0,0,0.5);\r\n\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nbackground: rgba(0,0,0,0.1); /* 降低透明度 */\r\n  z-index: 999; /* 降低z-index，确保主页面元素可交互 */\r\n  pointer-events: none; /* 关键：允许点击穿透遮罩层 */\r\n`;\r\n\r\n      // 创建可拖拽的弹窗容器\r\n      const draggableModal = document.createElement('div');\r\n      draggableModal.style.cssText = `\r\nwidth: ${defaultWidth}px;\r\nheight: ${defaultHeight}px;\r\nleft: ${defaultLeft}px;\r\ntop: ${defaultTop}px;\r\nposition: absolute;\r\nbox-shadow: 0 4px 20px rgba(0,0,0,0.15);\r\nborder-radius: 12px;\r\noverflow: hidden;\r\ndisplay: flex;\r\nflex-direction: column;\r\nz-index: 1000; /* 确保弹窗在遮罩层上方 */\r\n  pointer-events: auto; /* 确保弹窗自身可交互 */\r\n`;\r\n\r\n      // 弹窗标题栏（可拖拽区域）\r\n      const modalHeader = document.createElement('div');\r\n      \r\n      modalHeader.style.cssText = `\r\nbackground: #f8f9fa;\r\npadding: 15px 20px;\r\nborder-bottom: 1px solid #eee;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\ncursor: move;\r\n`;\r\n      \r\n      // 标题文本\r\n      const headerTitle = document.createElement('h3');\r\n      headerTitle.textContent = '面试题目';\r\n      headerTitle.style.cssText = `\r\nmargin: 0;\r\nfont-size: 16px;\r\ncolor: #333;\r\n`;\r\n      \r\n      // 关闭按钮\r\n      const closeButton = document.createElement('button');\r\n      closeButton.innerHTML = '×';\r\n      closeButton.style.cssText = `\r\nbackground: none;\r\nborder: none;\r\nfont-size: 20px;\r\ncursor: pointer;\r\ncolor: #666;\r\npadding: 0 10px;\r\nline-height: 1;\r\n`;\r\n      \r\n      modalHeader.appendChild(headerTitle);\r\n      modalHeader.appendChild(closeButton);\r\n      // 就在这里添加关闭按钮的点击事件（这是关键的添加位置）\r\ncloseButton.addEventListener('click', () => {\r\n  if (confirm('确定要关闭吗？已填写的回答可能会丢失。')) {\r\n    document.body.removeChild(modal);\r\n  }\r\n});\r\n\r\n      // 弹窗内容容器\r\n      const modalContainer = document.createElement('div');\r\n      modalContainer.style.cssText = `\r\nbackground: white;\r\nflex: 1;\r\ndisplay: flex;\r\nflex-direction: column;\r\noverflow: hidden;\r\n`;\r\n\r\n      // 题目导航指示器\r\n      const progressIndicator = document.createElement('div');\r\n      progressIndicator.id = 'progressIndicator';\r\n      progressIndicator.style.cssText = `\r\ndisplay: flex;\r\njustify-content: center;\r\nmargin: 15px 0;\r\ngap: 8px;\r\npadding: 0 20px;\r\n`;\r\n\r\n      // 创建进度点\r\n      questions.forEach((_, index) => {\r\n        const dot = document.createElement('div');\r\n        dot.id = `progress-${index}`;\r\n        dot.style.cssText = `\r\nwidth: 12px;\r\nheight: 12px;\r\nborder-radius: 50%;\r\nbackground: #ddd;\r\ntransition: all 0.3s ease;\r\n`;\r\n        progressIndicator.appendChild(dot);\r\n      });\r\n\r\n      // 题目内容区域 - 添加滚动功能\r\n      const questionContentWrapper = document.createElement('div');\r\n      questionContentWrapper.style.cssText = `\r\nflex: 1;\r\noverflow-y: auto;\r\npadding: 0 20px;\r\n`;\r\n\r\n      // 题目内容容器\r\n      const questionContent = document.createElement('div');\r\n      questionContent.id = 'questionContent';\r\n      questionContentWrapper.appendChild(questionContent);\r\n\r\n      // 按钮区域\r\n      const buttonContainer = document.createElement('div');\r\n      buttonContainer.style.cssText = `\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 15px 20px;\r\nborder-top: 1px solid #eee;\r\n`;\r\n\r\n      // 上一题按钮\r\n      const prevButton = document.createElement('button');\r\n      prevButton.textContent = '上一题';\r\n      prevButton.style.cssText = `\r\nbackground: #f0f0f0;\r\ncolor: #333;\r\nborder: none;\r\npadding: 10px 20px;\r\nborder-radius: 6px;\r\ncursor: pointer;\r\nfont-size: 14px;\r\ntransition: background 0.3s;\r\n`;\r\n      prevButton.addEventListener('mouseover', () => prevButton.style.background = '#e0e0e0');\r\n      prevButton.addEventListener('mouseout', () => prevButton.style.background = '#f0f0f0');\r\n\r\n      // 下一题/提交按钮\r\n      const nextButton = document.createElement('button');\r\n      nextButton.textContent = '下一题';\r\n      nextButton.style.cssText = `\r\nbackground: #4CAF50;\r\ncolor: white;\r\nborder: none;\r\npadding: 10px 20px;\r\nborder-radius: 6px;\r\ncursor: pointer;\r\nfont-size: 14px;\r\ntransition: background 0.3s;\r\n`;\r\n      nextButton.addEventListener('mouseover', () => nextButton.style.background = '#45a049');\r\n      nextButton.addEventListener('mouseout', () => nextButton.style.background = '#4CAF50');\r\n\r\n      // 右下角调整大小手柄\r\n      const resizeHandle = document.createElement('div');\r\n      resizeHandle.style.cssText = `\r\nposition: absolute;\r\nright: 0;\r\nbottom: 0;\r\nwidth: 15px;\r\nheight: 15px;\r\ncursor: nwse-resize;\r\nbackground: #4CAF50;\r\nborder-radius: 4px 0 0 0;\r\n`;\r\n\r\n      // 组装弹窗\r\n      buttonContainer.appendChild(prevButton);\r\n      buttonContainer.appendChild(nextButton);\r\n      modalContainer.appendChild(progressIndicator);\r\n      modalContainer.appendChild(questionContentWrapper);\r\n      modalContainer.appendChild(buttonContainer);\r\n      draggableModal.appendChild(modalHeader);\r\n      draggableModal.appendChild(modalContainer);\r\n      draggableModal.appendChild(resizeHandle);\r\n      modal.appendChild(draggableModal);\r\n      document.body.appendChild(modal);\r\n\r\n      // 渲染当前题目\r\n      function renderCurrentQuestion() {\r\n        const question = questions[currentIndex];\r\n\r\n        // 更新进度指示器\r\n        document.querySelectorAll('#progressIndicator div').forEach((dot, index) => {\r\n          if (index < currentIndex) {\r\n            dot.style.background = '#4CAF50'; // 已完成\r\n          } else if (index === currentIndex) {\r\n            dot.style.background = '#2196F3'; // 当前\r\n            dot.style.transform = 'scale(1.2)';\r\n          } else {\r\n            dot.style.background = '#ddd'; // 未完成\r\n            dot.style.transform = 'scale(1)';\r\n          }\r\n        });\r\n\r\n        // 检查是否有已保存的回答\r\n        const savedAnswer = localStorage.getItem(`${question.id}Result`) || '';\r\n\r\n        // 渲染题目内容，包含语音识别控件\r\n        questionContent.innerHTML = `\r\n<h2 style=\"margin-top: 0; color: #333; font-size: 20px;\">${question.title}</h2>\r\n<p style=\"font-size: 16px; line-height: 1.6; color: #555; margin: 15px 0;\">${question.text}</p>\r\n\r\n<div style=\"margin: 20px 0;\">\r\n  <p style=\"margin-bottom: 10px; font-weight: 500;\">相关视频参考：</p>\r\n  <video controls style=\"width: 100%; max-height: 300px; object-fit: contain;\">\r\n    <source src=\"${question.videoUrl}\" type=\"video/mp4\">\r\n    您的浏览器不支持视频播放\r\n   </video>\r\n</div>\r\n\r\n<!-- 语音输入控件 -->\r\n<div style=\"margin: 15px 0; padding: 15px; background: #f9f9f9; border-radius: 6px;\">\r\n  <div style=\"display: flex; gap: 10px; margin-bottom: 15px;\">\r\n    <button id=\"startRecord\" style=\"background: #4CAF50; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer;\">\r\n      开始录音\r\n    </button>\r\n    <button id=\"stopRecord\" style=\"background: #f44336; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; display: none;\">\r\n      停止录音\r\n    </button>\r\n  </div>\r\n  \r\n  <!-- 语音分析结果展示 -->\r\n  <div style=\"font-size: 14px; color: #666; margin-top: 10px;\">\r\n    <p>语调状态：<span id=\"toneStatus\">未检测</span></p>\r\n    <p>语速：<span id=\"speedStatus\">未计算</span>（字/秒）</p>\r\n    <p>录音时长：<span id=\"recordTime\">0秒</span></p>\r\n  </div>\r\n</div>\r\n\r\n<textarea id=\"${question.id}Answer\" style=\"width: 100%; height: 200px; margin: 15px 0; padding: 12px; box-sizing: border-box; border: 1px solid #ddd; border-radius: 6px; font-size: 14px; resize: vertical;\" placeholder=\"请输入您的回答...\">${savedAnswer}</textarea>\r\n`;\r\n\r\n        // 初始化语音识别和音频分析\r\n        initSpeechRecognition(question.id);\r\n\r\n        // 更新按钮状态\r\n        prevButton.disabled = currentIndex === 0;\r\n        prevButton.style.opacity = currentIndex === 0 ? '0.5' : '1';\r\n        prevButton.style.cursor = currentIndex === 0 ? 'not-allowed' : 'pointer';\r\n\r\n        // 最后一题显示提交按钮\r\n        if (currentIndex === questions.length - 1) {\r\n          nextButton.textContent = '提交回答';\r\n          nextButton.style.background = '#2196F3';\r\n        } else {\r\n          nextButton.textContent = '下一题';\r\n          nextButton.style.background = '#4CAF50';\r\n        }\r\n\r\n        // 重置滚动位置到顶部\r\n        questionContentWrapper.scrollTop = 0;\r\n      }\r\n\r\n      // 初始化语音识别和音频分析\r\n      function initSpeechRecognition(questionId) {\r\n        const startBtn = document.getElementById('startRecord');\r\n        const stopBtn = document.getElementById('stopRecord');\r\n        const toneStatus = document.getElementById('toneStatus');\r\n        const speedStatus = document.getElementById('speedStatus');\r\n        const recordTime = document.getElementById('recordTime');\r\n        const answerTextarea = document.getElementById(`${questionId}Answer`);\r\n\r\n        // 语音识别相关变量\r\n        let recognition;\r\n        let isRecording = false;\r\n        let recordStartTime = 0;\r\n        let recordDuration = 0; // 录音时长（秒）\r\n        let mediaRecorder;\r\n        let audioContext;\r\n        let analyser;\r\n        let dataArray;\r\n        let animationId;\r\n\r\n        // 初始化语音识别（基于Web Speech API）\r\n        function initRecognition() {\r\n          const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n          if (!SpeechRecognition) {\r\n            alert('您的浏览器不支持语音识别功能，请使用Chrome等现代浏览器');\r\n            return null;\r\n          }\r\n          const rec = new SpeechRecognition();\r\n          rec.continuous = true; // 持续识别\r\n          rec.interimResults = true; // 返回中间结果\r\n          rec.lang = 'zh-CN'; // 中文识别\r\n          return rec;\r\n        }\r\n\r\n        // 初始化音频分析器（检测语调）\r\n        function initAudioAnalyser(stream) {\r\n          audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n          analyser = audioContext.createAnalyser();\r\n          const source = audioContext.createMediaStreamSource(stream);\r\n          source.connect(analyser);\r\n          analyser.fftSize = 256; // 快速傅里叶变换大小\r\n          const bufferLength = analyser.frequencyBinCount;\r\n          dataArray = new Uint8Array(bufferLength);\r\n        }\r\n\r\n        // 实时分析语调（基于频率）\r\n        function analyzeTone() {\r\n          if (!isRecording) return;\r\n          analyser.getByteFrequencyData(dataArray);\r\n\r\n          // 计算平均频率（简单模拟语调：频率越高，语调越高）\r\n          let sum = 0;\r\n          dataArray.forEach(value => sum += value);\r\n          const averageFreq = sum / dataArray.length;\r\n\r\n          // 更新语调状态\r\n          if (averageFreq > 80) {\r\n            toneStatus.textContent = '语调偏高（情绪较激动）';\r\n            toneStatus.style.color = '#e53935';\r\n          } else if (averageFreq > 40) {\r\n            toneStatus.textContent = '语调适中';\r\n            toneStatus.style.color = '#43a047';\r\n          } else {\r\n            toneStatus.textContent = '语调偏低（情绪较平稳）';\r\n            toneStatus.style.color = '#1e88e5';\r\n          }\r\n\r\n          animationId = requestAnimationFrame(analyzeTone);\r\n        }\r\n\r\n        // 开始录音\r\n        startBtn.addEventListener('click', async () => {\r\n          if (isRecording) return;\r\n          isRecording = true;\r\n          startBtn.style.display = 'none';\r\n          stopBtn.style.display = 'inline-block';\r\n          recordStartTime = Date.now();\r\n\r\n          // 启动语音识别\r\n          recognition = initRecognition();\r\n          if (!recognition) return;\r\n          recognition.start();\r\n          recognition.onresult = (event) => {\r\n            // 拼接识别结果\r\n            let transcript = '';\r\n            for (let i = 0; i < event.results.length; i++) {\r\n              transcript += event.results[i][0].transcript;\r\n            }\r\n            answerTextarea.value = transcript; // 填充到文本框\r\n          };\r\n\r\n          // 启动音频流和分析器\r\n          try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            mediaRecorder = new MediaRecorder(stream);\r\n            mediaRecorder.start();\r\n            initAudioAnalyser(stream);\r\n            analyzeTone(); // 开始实时语调分析\r\n\r\n            // 实时更新录音时长\r\n            function updateRecordTime() {\r\n              if (!isRecording) return;\r\n              recordDuration = Math.floor((Date.now() - recordStartTime) / 1000);\r\n              recordTime.textContent = `${recordDuration}秒`;\r\n              requestAnimationFrame(updateRecordTime);\r\n            }\r\n            updateRecordTime();\r\n          } catch (err) {\r\n            console.error('录音权限获取失败：', err);\r\n            alert('请允许麦克风权限以使用语音输入功能');\r\n            stopRecording();\r\n          }\r\n        });\r\n\r\n        // 停止录音\r\n        function stopRecording() {\r\n          if (!isRecording) return;\r\n          isRecording = false;\r\n          startBtn.style.display = 'inline-block';\r\n          stopBtn.style.display = 'none';\r\n          cancelAnimationFrame(animationId);\r\n\r\n          // 停止语音识别\r\n          if (recognition) recognition.stop();\r\n          // 停止录音\r\n          if (mediaRecorder) mediaRecorder.stop();\r\n          // 关闭音频上下文\r\n          if (audioContext) audioContext.close();\r\n\r\n          // 计算语速（字数 / 录音时长）\r\n          const text = answerTextarea.value.trim();\r\n          const charCount = text.length; // 文本长度（字数）\r\n          if (recordDuration > 0) {\r\n            const speed = (charCount / recordDuration).toFixed(1); // 保留1位小数\r\n            speedStatus.textContent = `${speed}字/秒`;\r\n\r\n            // 语速提示（参考：正常中文语速约2-3字/秒）\r\n            if (speed < 1.5) {\r\n              speedStatus.style.color = '#e53935';\r\n              speedStatus.textContent += '（偏慢）';\r\n            } else if (speed > 3.5) {\r\n              speedStatus.style.color = '#e53935';\r\n              speedStatus.textContent += '（偏快）';\r\n            } else {\r\n              speedStatus.style.color = '#43a047';\r\n              speedStatus.textContent += '（正常）';\r\n            }\r\n          }\r\n        }\r\n\r\n        stopBtn.addEventListener('click', stopRecording);\r\n      }\r\n\r\n      // 上一题按钮事件\r\n      prevButton.addEventListener('click', () => {\r\n        if (currentIndex > 0) {\r\n          // 保存当前回答\r\n          saveCurrentAnswer();\r\n          currentIndex--;\r\n          renderCurrentQuestion();\r\n        }\r\n      });\r\n\r\n      // 下一题/提交按钮事件\r\n      nextButton.addEventListener('click', () => {\r\n        const currentAnswer = document.querySelector(`#${questions[currentIndex].id}Answer`).value.trim();\r\n\r\n        // 验证当前回答\r\n        if (!currentAnswer) {\r\n          alert(`请完成${questions[currentIndex].title}的回答`);\r\n          return;\r\n        }\r\n\r\n        // 保存当前回答\r\n        saveCurrentAnswer();\r\n\r\n        // 最后一题则提交所有\r\n        if (currentIndex === questions.length - 1) {\r\n          // 提交所有回答\r\n          questions.forEach(question => {\r\n            const answer = localStorage.getItem(`${question.id}Result`) || '';\r\n            this.addMessage('user', `【${question.title}回答】${answer}`, 'text');\r\n          });\r\n\r\n          alert('所有回答已提交成功！');\r\n          document.body.removeChild(modal);\r\n        } else {\r\n          // 进入下一题\r\n          currentIndex++;\r\n          renderCurrentQuestion();\r\n        }\r\n      });\r\n\r\n      // 保存当前题目的回答\r\n      function saveCurrentAnswer() {\r\n        const question = questions[currentIndex];\r\n        const answer = document.querySelector(`#${question.id}Answer`).value.trim();\r\n        if (answer) {\r\n          localStorage.setItem(`${question.id}Result`, answer);\r\n        }\r\n      }\r\n\r\n      \r\n      // 拖拽功能实现\r\n      let isDragging = false;\r\n      let startX, startY, initialLeft, initialTop;\r\n\r\n      modalHeader.addEventListener('mousedown', (e) => {\r\n        isDragging = true;\r\n        startX = e.clientX;\r\n        startY = e.clientY;\r\n        initialLeft = parseInt(draggableModal.style.left);\r\n        initialTop = parseInt(draggableModal.style.top);\r\n        \r\n        // 添加拖拽时的样式\r\n        draggableModal.style.transition = 'none';\r\n        modalHeader.style.background = '#e9ecef';\r\n        \r\n        document.addEventListener('mousemove', handleDrag);\r\n        document.addEventListener('mouseup', stopDrag);\r\n        \r\n        e.preventDefault();\r\n      });\r\n\r\n      function handleDrag(e) {\r\n        if (!isDragging) return;\r\n        \r\n        const deltaX = e.clientX - startX;\r\n        const deltaY = e.clientY - startY;\r\n        \r\n        // 计算新位置并限制在窗口内\r\n        let newLeft = initialLeft + deltaX;\r\n        let newTop = initialTop + deltaY;\r\n        \r\n        // 限制在窗口内\r\n        newLeft = Math.max(0, Math.min(newLeft, window.innerWidth - draggableModal.offsetWidth));\r\n        newTop = Math.max(0, Math.min(newTop, window.innerHeight - draggableModal.offsetHeight));\r\n        \r\n        draggableModal.style.left = `${newLeft}px`;\r\n        draggableModal.style.top = `${newTop}px`;\r\n      }\r\n\r\n      function stopDrag() {\r\n        isDragging = false;\r\n        modalHeader.style.background = '';\r\n        document.removeEventListener('mousemove', handleDrag);\r\n        document.removeEventListener('mouseup', stopDrag);\r\n      }\r\n\r\n      // 调整大小功能实现\r\n      let isResizing = false;\r\n      let startWidth, startHeight;\r\n\r\n      resizeHandle.addEventListener('mousedown', (e) => {\r\n        isResizing = true;\r\n        startX = e.clientX;\r\n        startY = e.clientY;\r\n        startWidth = draggableModal.offsetWidth;\r\n        startHeight = draggableModal.offsetHeight;\r\n        \r\n        // 移除过渡效果，使调整更流畅\r\n        draggableModal.style.transition = 'none';\r\n        \r\n        document.addEventListener('mousemove', handleResize);\r\n        document.addEventListener('mouseup', stopResize);\r\n        \r\n        e.preventDefault();\r\n      });\r\n\r\n      function handleResize(e) {\r\n        if (!isResizing) return;\r\n        \r\n        // 计算新尺寸\r\n        const minWidth = 500;\r\n        const minHeight = 400;\r\n        const newWidth = Math.max(minWidth, startWidth + (e.clientX - startX));\r\n        const newHeight = Math.max(minHeight, startHeight + (e.clientY - startY));\r\n        \r\n        // 限制最大尺寸不超过窗口\r\n        const maxWidth = window.innerWidth - 50;\r\n        const maxHeight = window.innerHeight - 50;\r\n        \r\n        draggableModal.style.width = `${Math.min(newWidth, maxWidth)}px`;\r\n        draggableModal.style.height = `${Math.min(newHeight, maxHeight)}px`;\r\n      }\r\n\r\n      function stopResize() {\r\n        isResizing = false;\r\n        document.removeEventListener('mousemove', handleResize);\r\n        document.removeEventListener('mouseup', stopResize);\r\n      }\r\n\r\n      // 初始化显示第一题\r\n      renderCurrentQuestion();\r\n    }, 40000);\r\n  } else {\r\n    this.showStatus(\"请先实例化SDK\", 'error');\r\n  }\r\n},\r\n    \r\n\r\n\r\n\r\n    // 返回主页面消息界面\r\n    backToHomeMessage() {\r\n      this.$router.push('/home/message');\r\n    },\r\n\r\n    // 发送文本消息\r\n    async sendMessage() {\r\n      let prompt = this.message.trim();\r\n      if (!prompt) return;\r\n\r\n      // 检测输入是否为特定指令\r\n      const isLogicAnalysis = prompt.toLowerCase().includes('分析语言逻辑');\r\n      const isGenerateReport = prompt.toLowerCase().includes('生成可视化评测报告');\r\n      let constructedPrompt = prompt;\r\n\r\n      // 处理\"分析语言逻辑\"指令\r\n      if (isLogicAnalysis) {\r\n        constructedPrompt = this.buildLogicAnalysisPrompt();\r\n      }\r\n      // 处理\"生成可视化评测报告\"指令\r\n      else if (isGenerateReport) {\r\n        constructedPrompt = this.buildEvaluationReportPrompt();\r\n      }\r\n\r\n      this.addMessage('user', prompt, 'text');\r\n      this.message = '';\r\n      this.scrollToBottom();\r\n\r\n      const typingId = this.addTypingIndicator();\r\n\r\n      try {\r\n        fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: constructedPrompt })\r\n        }).then(response => {\r\n          this.removeTypingIndicator(typingId);\r\n\r\n          if (!response.ok) {\r\n            throw new Error(`请求失败: ${response.status}`);\r\n          }\r\n\r\n          return response.json();\r\n        }).then(data => {\r\n          if (data.status === 'success') {\r\n            const taskId = data.task_id;\r\n            const pollInterval = 20000; // 20秒轮询一次\r\n            const maxAttempts = 150;\r\n            let attempts = 0;\r\n\r\n            const pollForFile = () => {\r\n              if (attempts >= maxAttempts) {\r\n                this.addMessage('ai', '请求超时，请稍后再试', 'text', true);\r\n                this.scrollToBottom();\r\n                return;\r\n              }\r\n\r\n              attempts++;\r\n\r\n              fetch(`${this.API_BASE_URL}/get_task_file_url`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  ...this.commonHeaders,\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ task_id: taskId })\r\n              })\r\n                .then(response => {\r\n                  return response.json().then(data => ({ data, response }));\r\n                })\r\n                .then(({ data, response }) => {\r\n                  console.log('文件查询响应:', data);\r\n\r\n                  // 成功获取到文件信息\r\n                  if (data.status === 'success') {\r\n                    // 优先使用Markdown文件（如果存在）\r\n                    const targetFile = data.markdown || data.txt;\r\n\r\n                    if (targetFile && targetFile.file_url) {\r\n                      fetch(targetFile.file_url, {\r\n                        method: 'GET',\r\n                        headers: this.commonHeaders\r\n                      })\r\n                        .then(fileResponse => {\r\n                          if (!fileResponse.ok) {\r\n                            throw new Error(`文件加载失败: ${fileResponse.status}`);\r\n                          }\r\n                          return fileResponse.text();\r\n                        })\r\n                        .then(fileContent => {\r\n                          if (fileContent.trim() === 'processing') {\r\n                            // 处理中，继续轮询\r\n                            this.addMessage('ai', `处理中...((${attempts}/${maxAttempts}))`, 'text');\r\n                            this.scrollToBottom();\r\n                            setTimeout(pollForFile, pollInterval);\r\n                          } else {\r\n                            // 处理完成，根据文件类型和指令类型选择渲染方式\r\n                            if (isGenerateReport) {\r\n                              // 评测报告额外处理雷达图数据\r\n                              this.addMessage('ai', `已生成可视化评测报告:`, 'text');\r\n                              this.processAndRenderReport(fileContent, data.markdown ? true : false);\r\n                              // 获取当前登录用户\r\n                          const username = localStorage.getItem('username');\r\n                          if (username) {\r\n                            // 发送报告到后端\r\n                            fetch(`${this.API_BASE_URL}/submitBlogs/${username}`, {\r\n                              method: 'POST',\r\n                              headers: {\r\n                                ...this.commonHeaders,\r\n                                'Content-Type': 'application/json'\r\n                              },\r\n                              body: JSON.stringify({\r\n                                title: '可视化评测报告',\r\n                                content: fileContent\r\n                              })\r\n                            })\r\n                            .then(response => {\r\n                              if (!response.ok) {\r\n                                console.error('提交报告失败:', response.statusText);\r\n                              } else {\r\n                                console.log('报告已成功保存到用户博客');\r\n                              }\r\n                            })\r\n                            .catch(error => {\r\n                              console.error('提交报告时发生错误:', error);\r\n                            });\r\n                          } else {\r\n                            console.warn('未找到当前登录用户，无法保存报告');\r\n                          }\r\n                            } else if (data.markdown) {\r\n                              // Markdown内容使用格式化渲染\r\n                              this.addMessage('ai', `已获取分析结果（Markdown格式）:`, 'text');\r\n                              this.addFormattedMessageWithSpaces(fileContent);\r\n                            } else {\r\n                              // TXT内容直接显示\r\n                              this.addMessage('ai', `已获取分析结果:`, 'text');\r\n                              this.addMessage('ai', fileContent, 'text');\r\n                            }\r\n                            this.scrollToBottom();\r\n                          }\r\n                        })\r\n                        .catch(() => {\r\n                          this.addMessage('ai', `文件加载中...((${attempts}/${maxAttempts}))`, 'text');\r\n                          this.scrollToBottom();\r\n                          setTimeout(pollForFile, pollInterval);\r\n                        });\r\n                    } else {\r\n                      // 未找到有效文件URL\r\n                      this.addMessage('ai', `未找到文件...((${attempts}/${maxAttempts}))`, 'text');\r\n                      this.scrollToBottom();\r\n                      setTimeout(pollForFile, pollInterval);\r\n                    }\r\n                  }\r\n                  // 未找到文件但可能在处理中\r\n                  else if (response.status === 404 ||\r\n                    (data.status === 'error' && data.message.includes('未找到'))) {\r\n                    this.addMessage('ai', `内容生成中...((${attempts}/${maxAttempts}))`, 'text');\r\n                    this.scrollToBottom();\r\n                    setTimeout(pollForFile, pollInterval);\r\n                  }\r\n                  // 其他错误\r\n                  else {\r\n                    this.addMessage('ai', `获取文件失败: ${data.message || '未知错误'}`, 'text', true);\r\n                    this.scrollToBottom();\r\n                  }\r\n                })\r\n                .catch(error => {\r\n                  console.error('轮询错误:', error);\r\n                  this.addMessage('ai', `连接中...((${attempts}/${maxAttempts}))`, 'text');\r\n                  this.scrollToBottom();\r\n                  setTimeout(pollForFile, pollInterval);\r\n                });\r\n            };\r\n\r\n            pollForFile();\r\n          } else {\r\n            this.addMessage('ai', `错误: ${data.result}`, 'text', true);\r\n          }\r\n          this.scrollToBottom();\r\n        }).catch(error => {\r\n          this.removeTypingIndicator(typingId);\r\n          this.addMessage('ai', `请求失败: ${error.message}`, 'text', true);\r\n          this.scrollToBottom();\r\n          console.error('发送消息失败:', error);\r\n        });\r\n      } catch (error) {\r\n        this.removeTypingIndicator(typingId);\r\n        this.addMessage('ai', `请求失败: ${error.message}`, 'text', true);\r\n        this.scrollToBottom();\r\n        console.error('发送消息失败:', error);\r\n      }\r\n    },\r\n\r\n    // 构建语言逻辑分析的prompt\r\n    buildLogicAnalysisPrompt() {\r\n      const questions = this.getInterviewQuestions();\r\n\r\n      let prompt = \"请以下面试问题及对应的回答，分析回答的语言逻辑和连贯性，并给出评分(0-100分)和简要分析：\\n\\n\";\r\n\r\n      questions.forEach((item, i) => {\r\n        if (item.answer) {\r\n          prompt += `第${i + 1}题：${item.question}\\n`;\r\n          prompt += `回答：${item.answer}\\n\\n`;\r\n        }\r\n      });\r\n\r\n      return prompt;\r\n    },\r\n\r\n    // 构建生成可视化评测报告的prompt（优化版）\r\n    buildEvaluationReportPrompt() {\r\n      const questions = this.getInterviewQuestions();\r\n      const dimensions = [\r\n        \"专业知识水平\",\r\n        \"技能匹配度\",\r\n        \"语言表达能力\",\r\n        \"逻辑思维能力\",\r\n        \"创新能力\"\r\n      ];\r\n\r\n      // 生成唯一标识符，用于精确界定雷达数据的位置\r\n      const radarDataMarker = `RADAR_DATA_${Date.now()}_START`;\r\n      const radarDataEndMarker = `RADAR_DATA_${Date.now()}_END`;\r\n\r\n      let prompt = \"请基于以下5个面试问题及对应回答，生成一份详细的可视化评测报告。\\n\\n\";\r\n      prompt += \"【格式要求非常严格，请严格遵守，否则将导致报告无法正常解析】\\n\";\r\n      prompt += \"报告必须包含以下几个部分，且按以下顺序排列：\\n\\n\";\r\n\r\n      // 1. 雷达图数据部分 - 格式严格限定\r\n      prompt += \"1. 能力雷达图数据：\\n\";\r\n      prompt += `   请在${radarDataMarker}和${radarDataEndMarker}标记之间，为以下5个维度分别评分(0-100分)，\\n`;\r\n      prompt += \"   每个维度单独一行，格式必须为【维度名称: 评分】，不允许有其他内容或格式变化\\n\";\r\n      prompt += `   维度名称：${dimensions.join('、')}\\n`;\r\n      prompt += `   示例格式：\\n`;\r\n      prompt += `   ${radarDataMarker}\\n`;\r\n      prompt += `   专业知识水平: 80\\n`;\r\n      prompt += `   技能匹配度: 70\\n`;\r\n      prompt += `   语言表达能力: 90\\n`;\r\n      prompt += `   逻辑思维能力: 60\\n`;\r\n      prompt += `   创新能力: 80\\n`;\r\n      prompt += `   ${radarDataEndMarker}\\n\\n`;\r\n\r\n      // 2. 关键问题定位\r\n      prompt += \"2. 关键问题定位：\\n\";\r\n      prompt += \"   请使用项目符号(-)列出回答中存在的主要问题，每条问题单独一行\\n\";\r\n      prompt += \"   例如：\\n\";\r\n      prompt += \"   - 回答缺乏STAR结构\\n\";\r\n      prompt += \"   - 对专业术语的解释不够清晰\\n\\n\";\r\n\r\n      // 3. 企业决策建议\r\n      prompt += \"3. 企业决策建议：\\n\";\r\n      prompt += \"   请明确给出是否推荐录用的建议，并提供3-5条具体理由，使用项目符号(-)列出\\n\\n\";\r\n\r\n      // 4. 求职者个性化改进建议\r\n      prompt += \"4. 求职者个性化改进建议：\\n\";\r\n      prompt += \"   针对每个维度的不足，提供具体可行的改进方法，每个维度单独成段，开头注明维度名称\\n\\n\";\r\n\r\n      // 5. Markdown格式要求\r\n      prompt += \"5. 整体使用Markdown格式输出，包含适当的标题层级：\\n\";\r\n      prompt += \"   - 主标题：# 大数据运维测试岗面试可视化评测报告\\n\";\r\n      prompt += \"   - 各部分标题：## 1. 能力雷达图数据、## 2. 关键问题定位等\\n\\n\";\r\n\r\n      // 面试问题与回答\r\n      prompt += \"【面试问题及回答】\\n\";\r\n      questions.forEach((item, i) => {\r\n        if (item.answer) {\r\n          prompt += `第${i + 1}题（${dimensions[i]}）：${item.question}\\n`;\r\n          prompt += `回答：${item.answer}\\n\\n`;\r\n        }\r\n      });\r\n\r\n      // 存储标记以便后续解析\r\n      this.radarDataMarkers = {\r\n        start: radarDataMarker,\r\n        end: radarDataEndMarker\r\n      };\r\n\r\n      return prompt;\r\n    },\r\n\r\n    // 从localStorage获取面试问题和答案\r\n    getInterviewQuestions() {\r\n      return [\r\n        {\r\n          question: localStorage.getItem('firstQuestion') || '第一道题',\r\n          answer: localStorage.getItem('firstResult') || ''\r\n        },\r\n        {\r\n          question: localStorage.getItem('secondQuestion') || '第二道题',\r\n          answer: localStorage.getItem('secondResult') || ''\r\n        },\r\n        {\r\n          question: localStorage.getItem('thirdQuestion') || '第三道题',\r\n          answer: localStorage.getItem('thirdResult') || ''\r\n        },\r\n        {\r\n          question: localStorage.getItem('fourthQuestion') || '第四道题',\r\n          answer: localStorage.getItem('fourthResult') || ''\r\n        },\r\n        {\r\n          question: localStorage.getItem('fifthQuestion') || '第五道题',\r\n          answer: localStorage.getItem('fifthResult') || ''\r\n        }\r\n      ];\r\n    },\r\n\r\n    // 处理并渲染评测报告，包括雷达图\r\n    processAndRenderReport(content, isMarkdown) {\r\n      try {\r\n        // 使用预设的标记提取雷达图数据\r\n        const { start, end } = this.radarDataMarkers || {};\r\n        let radarDataSection = '';\r\n\r\n        if (start && end) {\r\n          const startIndex = content.indexOf(start);\r\n          const endIndex = content.indexOf(end);\r\n\r\n          if (startIndex !== -1 && endIndex !== -1 && endIndex > startIndex) {\r\n            // 提取标记之间的内容\r\n            radarDataSection = content.substring(\r\n              startIndex + start.length,\r\n              endIndex\r\n            ).trim();\r\n          } else {\r\n            console.warn('未找到完整的雷达图数据标记');\r\n          }\r\n        } else {\r\n          console.warn('未设置雷达图数据标记');\r\n        }\r\n\r\n        // 提取雷达图数据\r\n        const dimensions = [\r\n          \"专业知识水平\",\r\n          \"技能匹配度\",\r\n          \"语言表达能力\",\r\n          \"逻辑思维能力\",\r\n          \"创新能力\"\r\n        ];\r\n\r\n        const radarData = {};\r\n\r\n        // 按行解析\r\n        if (radarDataSection) {\r\n          const lines = radarDataSection.split('\\n');\r\n          lines.forEach(line => {\r\n            // 使用严格的正则匹配格式\r\n            const match = line.match(/^\\s*([^:]+?)\\s*:\\s*(\\d+)\\s*$/);\r\n            if (match && match[1] && match[2]) {\r\n              const dimension = match[1].trim();\r\n              const score = parseInt(match[2], 10);\r\n\r\n              // 只处理我们需要的维度，评分范围改为0-100\r\n              if (dimensions.includes(dimension) && score >= 0 && score <= 100) {\r\n                radarData[dimension] = score;\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n        // 检查是否有缺失的维度\r\n        dimensions.forEach(dimension => {\r\n          if (radarData[dimension] === undefined) {\r\n            console.warn(`维度\"${dimension}\"的分数未找到或格式不正确`);\r\n            radarData[dimension] = 0; // 默认为0分\r\n          }\r\n        });\r\n\r\n        // 生成雷达图容器，调整雷达图大小为400px高度\r\n        const radarContainerId = `radar-chart-${Date.now()}`;\r\n        let radarChartHtml = `<div class=\"radar-chart-container\">\r\n      <h3>能力雷达图</h3>\r\n      <!-- 调整雷达图大小 -->\r\n      <canvas id=\"${radarContainerId}\" style=\"width: 100%; height: 400px; max-width: 600px; margin: 0 auto;\"></canvas>\r\n    </div>`;\r\n\r\n        // 处理报告内容\r\n        let processedContent;\r\n        if (isMarkdown) {\r\n          processedContent = this.processMarkdownContent(content);\r\n          processedContent = radarChartHtml + processedContent;\r\n        } else {\r\n          processedContent = `<div class=\"report-content\">\r\n        ${radarChartHtml}\r\n        <div class=\"text-content\">${content.replace(/\\n/g, '<br>')}</div>\r\n      </div>`;\r\n        }\r\n\r\n        // 添加到消息列表\r\n        this.messages.push({\r\n          sender: 'ai',\r\n          type: 'formatted',\r\n          content: processedContent\r\n        });\r\n\r\n        // 确保DOM已更新后再渲染图表\r\n        this.$nextTick(() => {\r\n          // 检查Chart.js是否已加载\r\n          if (typeof Chart === 'undefined') {\r\n            // 动态加载Chart.js\r\n            const script = document.createElement('script');\r\n            script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\r\n            script.onload = () => this.renderRadarChart(radarContainerId, radarData);\r\n            script.onerror = () => {\r\n              document.getElementById(radarContainerId).innerHTML =\r\n                '<p class=\"error-message\">无法加载图表库，请检查网络连接</p>';\r\n            };\r\n            document.head.appendChild(script);\r\n          } else {\r\n            this.renderRadarChart(radarContainerId, radarData);\r\n          }\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('处理评测报告失败:', error);\r\n        this.addMessage('ai', '评测报告处理失败，显示原始内容:', 'text', true);\r\n        this.addMessage('ai', content, 'text');\r\n      }\r\n    },\r\n\r\n    // 渲染雷达图\r\n    renderRadarChart(containerId, data) {\r\n      // 确保Chart.js已加载\r\n      if (typeof Chart === 'undefined') {\r\n        console.error('Chart.js未加载，无法渲染雷达图');\r\n        return;\r\n      }\r\n\r\n      // 增加重试机制\r\n      const maxRetries = 5;\r\n      let retries = 0;\r\n\r\n      const tryRender = () => {\r\n        const container = document.getElementById(containerId);\r\n\r\n        // 检查容器是否存在\r\n        if (!container) {\r\n          if (retries < maxRetries) {\r\n            retries++;\r\n            console.log(`重试获取图表容器 (${retries}/${maxRetries})`);\r\n            setTimeout(tryRender, 100); // 100ms后重试\r\n            return;\r\n          } else {\r\n            console.error(`无法找到ID为\"${containerId}\"的图表容器`);\r\n            return;\r\n          }\r\n        }\r\n\r\n        // 确保容器是canvas元素或包含canvas\r\n        let canvas;\r\n        if (container.tagName === 'CANVAS') {\r\n          canvas = container;\r\n        } else {\r\n          // 检查容器内是否已有canvas\r\n          canvas = container.querySelector('canvas');\r\n          if (!canvas) {\r\n            // 创建新的canvas元素\r\n            canvas = document.createElement('canvas');\r\n            container.innerHTML = ''; // 清空容器\r\n            container.appendChild(canvas);\r\n          }\r\n        }\r\n\r\n        // 准备雷达图数据\r\n        const labels = [\r\n          \"专业知识水平\",\r\n          \"技能匹配度\",\r\n          \"语言表达能力\",\r\n          \"逻辑思维能力\",\r\n          \"创新能力\"\r\n        ];\r\n\r\n        const values = labels.map(label => data[label] || 0);\r\n\r\n        // 销毁已存在的图表实例\r\n        if (container.chartInstance) {\r\n          container.chartInstance.destroy();\r\n        }\r\n\r\n        // 创建雷达图，将评分范围调整为0-100\r\n        container.chartInstance = new Chart(canvas.getContext('2d'), {\r\n          type: 'radar',\r\n          data: {\r\n            labels: labels,\r\n            datasets: [{\r\n              label: '能力评分',\r\n              data: values,\r\n              backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n              borderColor: 'rgba(54, 162, 235, 1)',\r\n              pointBackgroundColor: 'rgba(54, 162, 235, 1)',\r\n              pointBorderColor: '#fff',\r\n              pointHoverBackgroundColor: '#fff',\r\n              pointHoverBorderColor: 'rgba(54, 162, 235, 1)'\r\n            }]\r\n          },\r\n          options: {\r\n            scales: {\r\n              r: {\r\n                angleLines: {\r\n                  display: true\r\n                },\r\n                suggestedMin: 0,\r\n                suggestedMax: 100, // 评分范围改为0-100\r\n                ticks: {\r\n                  stepSize: 20, // 刻度间隔设为20，使0-100显示更合理\r\n                  callback: function (value) {\r\n                    return value + '%'; // 显示百分比符号\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            plugins: {\r\n              legend: {\r\n                position: 'top',\r\n              },\r\n              tooltip: {\r\n                callbacks: {\r\n                  label: function (context) {\r\n                    return `${context.label}: ${context.raw}分`;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      };\r\n\r\n      // 开始尝试渲染\r\n      tryRender();\r\n    },\r\n\r\n    // 增强的格式化消息方法，支持Markdown渲染\r\n    addFormattedMessageWithSpaces(content) {\r\n      try {\r\n        if (!content || content.trim() === '') {\r\n          this.addMessage('ai', '没有返回内容', 'text');\r\n          return;\r\n        }\r\n\r\n        const processedContent = this.processMarkdownContent(content);\r\n\r\n        // 添加到消息列表\r\n        this.messages.push({\r\n          sender: 'ai',\r\n          type: 'formatted',\r\n          content: processedContent\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('格式化Markdown失败:', error);\r\n        this.addMessage('ai', '内容格式化失败，显示原始内容:', 'text', true);\r\n        this.addMessage('ai', content, 'text');\r\n      }\r\n    },\r\n    // 处理Markdown内容为HTML，确保透明样式生效\r\n    processMarkdownContent(content) {\r\n      // 标准化换行符\r\n      let processed = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\r\n\r\n      // 处理思考内容标签，使用正确的正则表达式和样式\r\n      processed = processed.replace(\r\n        /<|FunctionCallBegin|>([\\s\\S]*?)<|FunctionCallEnd|>/g,  // 正确匹配</think>和<|FunctionCallEnd|>标签\r\n        // 使用明确的透明度样式，确保优先级\r\n        '<div style=\"color: rgba(107, 114, 128, 0.7); font-style: italic; background-color: rgba(243, 244, 246, 0.3); padding: 12px; border-radius: 0.5rem; border: 1px solid rgba(229, 231, 235, 0.5); margin: 1rem 0; display: block;\">思考过程: $1</div>'\r\n      );\r\n\r\n      // Markdown格式处理\r\n      processed = processed\r\n        // 处理标题\r\n        .replace(/^# (.*?)$/gm, '<h1 class=\"text-2xl font-bold my-4\">$1</h1>')\r\n        .replace(/^## (.*?)$/gm, '<h2 class=\"text-xl font-bold my-3\">$1</h2>')\r\n        .replace(/^### (.*?)$/gm, '<h3 class=\"text-lg font-bold my-2\">$1</h3>')\r\n        // 先处理有序列表\r\n        .replace(/^\\d+\\. (.*?)$/gm, '<li class=\"list-decimal\">$1</li>')\r\n        .replace(/(<li class=\"list-decimal\">.*?<\\/li>)+/gs, '<ol class=\"list-decimal pl-6 my-2\">$&</ol>')\r\n        // 再处理无序列表\r\n        .replace(/^- (.*?)$/gm, '<li class=\"list-disc\">$1</li>')\r\n        .replace(/(<li class=\"list-disc\">.*?<\\/li>)+/gs, '<ul class=\"list-disc pl-6 my-2\">$&</ul>')\r\n        // 处理加粗和斜体\r\n        .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n        .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n        // 处理链接\r\n        .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" class=\"text-blue-600 underline\">$1</a>')\r\n        // 处理换行\r\n        .replace(/(?![^<]*<\\/li>)\\n/g, '<br>');\r\n\r\n      // 构建HTML内容，添加容器样式以确保内部样式生效\r\n      return `<div class=\"formatted-content markdown-content\" style=\"font-family: sans-serif;\">${processed}</div>`;\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // 停止录音\r\n    stopRecording() {\r\n      if (this.isRecording && this.mediaRecorder) {\r\n        this.mediaRecorder.stop();\r\n        this.isRecording = false;\r\n\r\n        if (this.recordingTimer) {\r\n          clearInterval(this.recordingTimer);\r\n          this.recordingTimer = null;\r\n        }\r\n\r\n        if (this.mediaStream) {\r\n          this.mediaStream.getTracks().forEach(track => track.stop());\r\n          this.mediaStream = null;\r\n        }\r\n\r\n        this.showStatus('录音已完成', 'success');\r\n      }\r\n    },\r\n\r\n    // 添加语音消息到列表\r\n    addVoiceMessage() {\r\n      if (!this.audioBlob) return;\r\n\r\n      const audioUrl = URL.createObjectURL(this.audioBlob);\r\n      const duration = this.recordingSeconds;\r\n\r\n      const audio = new Audio(audioUrl);\r\n\r\n      this.messages.push({\r\n        sender: 'user',\r\n        type: 'voice',\r\n        blob: this.audioBlob,\r\n        url: audioUrl,\r\n        duration: duration,\r\n        isPlaying: false,\r\n        textResult: null,\r\n        toneResult: null,\r\n        speechSpeed: null,\r\n        logicResult: null\r\n      });\r\n\r\n      this.audioElements[this.messages.length - 1] = audio;\r\n\r\n      this.scrollToBottom();\r\n    },\r\n\r\n    // 播放或暂停语音\r\n    toggleVoicePlayback(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'voice') return;\r\n\r\n      const audio = this.audioElements[index];\r\n      if (!audio) return;\r\n\r\n      if (msg.isPlaying) {\r\n        audio.pause();\r\n        msg.isPlaying = false;\r\n      } else {\r\n        this.messages.forEach((m, i) => {\r\n          if (m.isPlaying && i !== index) {\r\n            m.isPlaying = false;\r\n            const otherAudio = this.audioElements[i];\r\n            if (otherAudio) otherAudio.pause();\r\n          }\r\n        });\r\n\r\n        audio.play()\r\n          .then(() => {\r\n            msg.isPlaying = true;\r\n            audio.onended = () => {\r\n              msg.isPlaying = false;\r\n            };\r\n          })\r\n          .catch(error => {\r\n            console.error('播放失败:', error);\r\n            this.showStatus('播放失败，请重试', 'error');\r\n          });\r\n      }\r\n    },\r\n\r\n    // 语音转文字\r\n    //找到convertVoiceToText方法，修改如下：\r\n    async convertVoiceToText(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'voice' || !msg.blob) return;\r\n\r\n      this.showStatus('正在转换语音为文字...', 'info');\r\n\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('audio', msg.blob, 'recording.wav');\r\n\r\n        const response = await fetch(`${this.API_BASE_URL}/recognize_speech`, {\r\n          method: 'POST',\r\n          headers: this.commonHeaders,\r\n          body: formData\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          console.error('语音转文字API错误:', errorText);\r\n          throw new Error(`服务器错误: ${response.status} - ${errorText.substring(0, 100)}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success') {\r\n          // 1. 确保更新消息对象\r\n          this.messages.splice(index, 1, {\r\n            ...this.messages[index],\r\n            textResult: data.text || '未能识别语音内容'\r\n          });\r\n\r\n          // 2. 转写计数循环使用1-5\r\n          this.transcribeCount = (this.transcribeCount % 5) + 1;\r\n\r\n          // 3. 根据次数存储结果，使用Vue的响应式更新\r\n          if (this.transcribeCount === 1) {\r\n            this.firstResult = data.text || '';\r\n            localStorage.setItem(\"firstResult\", this.firstResult);\r\n            console.log('第一次转写成功，' + this.firstResult);\r\n          } else if (this.transcribeCount === 2) {\r\n            this.secondResult = data.text || '';\r\n            localStorage.setItem(\"secondResult\", this.secondResult);\r\n            console.log('第二次转写成功，' + this.secondResult);\r\n          } else if (this.transcribeCount === 3) {\r\n            this.thirdResult = data.text || '';\r\n            localStorage.setItem(\"thirdResult\", this.thirdResult);\r\n            console.log('第三次转写成功，' + this.thirdResult);\r\n          } else if (this.transcribeCount === 4) {\r\n            this.fourthResult = data.text || '';\r\n            localStorage.setItem(\"fourthResult\", this.fourthResult);\r\n            console.log('第四次转写成功，' + this.fourthResult);\r\n          } else if (this.transcribeCount === 5) {\r\n            this.fifthResult = data.text || '';\r\n            localStorage.setItem(\"fifthResult\", this.fifthResult);\r\n            console.log('第五次转写成功，' + this.fifthResult);\r\n          }\r\n\r\n          // 4. 保存语言内容到localStorage\r\n          localStorage.setItem('interview_response_content', data.text || '');\r\n\r\n          this.showStatus('语音转文字成功', 'success');\r\n        } else {\r\n          throw new Error(data.message || '语音转文字失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('语音转文字失败:', error);\r\n        this.showStatus(`转文字失败: ${error.message}`, 'error');\r\n      }\r\n    },\r\n\r\n\r\n    // 分析语调\r\n    async analyzeVoiceTone(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'voice' || !msg.blob) return;\r\n\r\n      this.showStatus('正在分析语调...', 'info');\r\n\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('audio', msg.blob, 'recording.wav');\r\n\r\n        const response = await fetch(`${this.API_BASE_URL}/extract_tone`, {\r\n          method: 'POST',\r\n          headers: this.commonHeaders,\r\n          body: formData\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          console.error('语调分析API错误:', errorText);\r\n          throw new Error(`服务器错误: ${response.status} - ${errorText.substring(0, 100)}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success') {\r\n          // 使用扩展运算符创建新对象，触发响应式更新\r\n          this.messages[index] = {\r\n            ...this.messages[index],\r\n            toneResult: data.data\r\n          };\r\n\r\n          // 保存情感语调分析到localStorage（追加方式）\r\n          const existingTone = localStorage.getItem('interview_emotional_tone') || '';\r\n          const toneAnalysis = `语调类型: ${data.data.tone_type}, 基频均值: ${data.data.f0_mean}Hz, 基频范围: ${data.data.f0_min}-${data.data.f0_max}Hz`;\r\n          const newToneAnalysis = existingTone ? `${existingTone}\\n${toneAnalysis}` : toneAnalysis;\r\n          localStorage.setItem('interview_emotional_tone', newToneAnalysis);\r\n\r\n          this.showStatus('语调分析成功', 'success');\r\n        } else {\r\n          throw new Error(data.message || '语调分析失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('语调分析失败:', error);\r\n        this.showStatus(`语调分析失败: ${error.message}`, 'error');\r\n      }\r\n    },\r\n\r\n    // 计算语速\r\n    calculateSpeechSpeed(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'voice' || !msg.textResult) return;\r\n\r\n      // 计算字数（去除空白字符）\r\n      const text = msg.textResult.trim();\r\n      const charCount = text.length;\r\n\r\n      // 音频时长（秒）\r\n      const duration = Math.max(msg.duration, 0.1); // 避免除以0\r\n\r\n      // 计算语速（字/秒）\r\n      const speed = (charCount / duration).toFixed(1);\r\n      const speedPerMinute = Math.round(speed * 60);\r\n\r\n      // 使用扩展运算符创建新对象，触发响应式更新\r\n      this.messages[index] = {\r\n        ...this.messages[index],\r\n        speechSpeed: speed\r\n      };\r\n\r\n      // 保存语速分析到localStorage（追加方式）\r\n      const existingSpeed = localStorage.getItem('interview_speech_rate') || '';\r\n      const speedAnalysis = `${speed} 字/秒 (约 ${speedPerMinute} 字/分钟)。${this.evaluateSpeechSpeed(speedPerMinute)}`;\r\n      const newSpeedAnalysis = existingSpeed ? `${existingSpeed}\\n${speedAnalysis}` : speedAnalysis;\r\n      localStorage.setItem('interview_speech_rate', newSpeedAnalysis);\r\n\r\n      this.showStatus('语速计算完成', 'success');\r\n    },\r\n\r\n    // 评估语速是否合理\r\n    evaluateSpeechSpeed(speedPerMinute) {\r\n      if (speedPerMinute < 120) {\r\n        return \"语速偏慢，可能影响表达效率\";\r\n      } else if (speedPerMinute > 180) {\r\n        return \"语速偏快，可能影响理解\";\r\n      } else {\r\n        return \"语速适中，表达节奏良好\";\r\n      }\r\n    },\r\n\r\n    // 分析语言逻辑\r\n    async analyzeLanguageLogic(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'voice' || !msg.textResult) return;\r\n\r\n      this.showStatus('正在分析语言逻辑...', 'info');\r\n\r\n      try {\r\n        // 从localStorage获取问题和对应的回答\r\n        const questions = [\r\n          {\r\n            question: localStorage.getItem('firstQuestion') || '第一道题',\r\n            answer: localStorage.getItem('firstResult') || ''\r\n          },\r\n          {\r\n            question: localStorage.getItem('secondQuestion') || '第二道题',\r\n            answer: localStorage.getItem('secondResult') || ''\r\n          },\r\n          {\r\n            question: localStorage.getItem('thirdQuestion') || '第三道题',\r\n            answer: localStorage.getItem('thirdResult') || ''\r\n          },\r\n          {\r\n            question: localStorage.getItem('fourthQuestion') || '第四道题',\r\n            answer: localStorage.getItem('fourthResult') || ''\r\n          },\r\n          {\r\n            question: localStorage.getItem('fifthQuestion') || '第五道题',\r\n            answer: localStorage.getItem('fifthResult') || ''\r\n          }\r\n        ];\r\n\r\n        // 构建包含问题和对应回答的prompt\r\n        let prompt = \"请以下面试问题及对应的回答，分析回答的语言逻辑和连贯性，并给出评分(1-10分)和简要分析：\\n\\n\";\r\n\r\n        questions.forEach((item, i) => {\r\n          if (item.answer) { // 只包含有回答的问题\r\n            prompt += `第${i + 1}题：${item.question}\\n`;\r\n            prompt += `回答：${item.answer}\\n\\n`;\r\n          }\r\n        });\r\n\r\n        // 添加当前消息的文本结果（如果需要包含）\r\n        prompt += `当前分析文本：${msg.textResult}\"`;\r\n\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`请求失败: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success') {\r\n          // 提取评分（如果有的话）\r\n          let score = null;\r\n          const scoreMatch = data.result.match(/(\\d+(\\.\\d+)?)\\s*\\/\\s*10/);\r\n          if (scoreMatch && scoreMatch[1]) {\r\n            score = parseFloat(scoreMatch[1]);\r\n          }\r\n\r\n          // 使用扩展运算符创建新对象，触发响应式更新\r\n          this.messages[index] = {\r\n            ...this.messages[index],\r\n            logicResult: {\r\n              analysis: data.result,\r\n              score: score\r\n            }\r\n          };\r\n\r\n          // 保存语言逻辑分析到localStorage（追加方式）\r\n          const existingLogic = localStorage.getItem('interview_language_logic') || '';\r\n          const newLogicAnalysis = existingLogic ? `${existingLogic}\\n${data.result}` : data.result;\r\n          localStorage.setItem('interview_language_logic', newLogicAnalysis);\r\n\r\n          this.showStatus('语言逻辑分析完成', 'success');\r\n        } else {\r\n          throw new Error(data.result || '语言逻辑分析失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('语言逻辑分析失败:', error);\r\n        this.showStatus(`语言逻辑分析失败: ${error.message}`, 'error');\r\n      }\r\n    },\r\n\r\n    // 保存分析结果到localStorage（追加方式）\r\n    saveAnalysisToStorage(msg) {\r\n      if (!msg || msg.type !== 'expression') return;\r\n\r\n      // 保存表情分析（追加方式）\r\n      if (msg.expressionResults && msg.expressionResults.length) {\r\n        let expressionsText = msg.expressionResults.map(exp =>\r\n          `${exp.emotion} (${(exp.confidence * 100).toFixed(1)}%)`\r\n        ).join('、');\r\n\r\n        const existingExpressions = localStorage.getItem('interview_expression') || '';\r\n        const newExpressions = existingExpressions ? `${existingExpressions}\\n检测到的表情: ${expressionsText}` : `检测到的表情: ${expressionsText}`;\r\n        localStorage.setItem('interview_expression', newExpressions);\r\n      }\r\n\r\n      // 保存姿态分析（追加方式）\r\n      if (msg.poseResult) {\r\n        const poseText = `动作: ${msg.poseResult.pose}, 置信度: ${(msg.poseResult.score * 100).toFixed(1)}%`;\r\n        const existingPose = localStorage.getItem('interview_gesture') || '';\r\n        const newPose = existingPose ? `${existingPose}\\n${poseText}` : poseText;\r\n        localStorage.setItem('interview_gesture', newPose);\r\n      }\r\n\r\n      // 保存综合分析（追加方式）\r\n      if (msg.comprehensiveAnalysis) {\r\n        const existingAnalysis = localStorage.getItem('interview_expression_gesture_summary') || '';\r\n        const newAnalysis = existingAnalysis ? `${existingAnalysis}\\n${msg.comprehensiveAnalysis}` : msg.comprehensiveAnalysis;\r\n        localStorage.setItem('interview_expression_gesture_summary', newAnalysis);\r\n      }\r\n\r\n      this.showStatus('分析结果已保存', 'success');\r\n    },\r\n\r\n    // 添加消息到界面\r\n    addMessage(sender, content, type = 'text', isError = false) {\r\n      this.messages.push({\r\n        sender: sender,\r\n        content: content,\r\n        type: type,\r\n        isError: isError\r\n      });\r\n      this.scrollToBottom();\r\n    },\r\n\r\n    // 添加表情和姿态分析消息\r\n    addExpressionMessage(imageUrl, expressionResults, poseResult) {\r\n      this.messages.push({\r\n        sender: 'ai',\r\n        type: 'expression',\r\n        imageUrl: imageUrl,\r\n        expressionResults: expressionResults,\r\n        poseResult: poseResult,\r\n        comprehensiveAnalysis: null\r\n      });\r\n      this.scrollToBottom();\r\n    },\r\n\r\n    // 添加\"正在输入\"指示器\r\n    addTypingIndicator() {\r\n      const typingId = `typing-${Date.now()}`;\r\n      this.typingId = typingId;\r\n      this.isTyping = true;\r\n      return typingId;\r\n    },\r\n\r\n    // 移除\"正在输入\"状态\r\n    removeTypingIndicator(id) {\r\n      if (this.typingId === id) {\r\n        this.isTyping = false;\r\n        this.typingId = \"\";\r\n      }\r\n    },\r\n\r\n    // 滚动到最新消息\r\n    scrollToBottom() {\r\n      this.$nextTick(() => {\r\n        const container = this.$refs.messagesContainer;\r\n        if (container) {\r\n          container.scrollTop = container.scrollHeight;\r\n        }\r\n      });\r\n    },\r\n\r\n    // 测试连接状态\r\n    async testConnection() {\r\n      try {\r\n        await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'OPTIONS',\r\n          headers: this.commonHeaders\r\n        });\r\n\r\n        this.statusText = ``;\r\n        this.statusClass = 'text-xs text-green-600 mt-2 text-center';\r\n      } catch (error) {\r\n        this.statusText = `连接失败: ${error.message}`;\r\n        this.statusClass = 'text-xs text-red-600 mt-2 text-center';\r\n      }\r\n    },\r\n\r\n    // 初始化聊天容器高度\r\n    initContainerHeight() {\r\n      const navBarHeight = 46;\r\n      const bottomBarHeight = document.getElementById('dialog_bottombar_inside')?.offsetHeight || 0;\r\n      const container = document.getElementById('dialog_content');\r\n      if (container) {\r\n        container.style.paddingTop = navBarHeight + 10 + 'px';\r\n        container.style.paddingBottom = bottomBarHeight + 10 + 'px';\r\n        container.style.height = `calc(100vh - ${navBarHeight + bottomBarHeight + 20}px)`;\r\n      }\r\n    },\r\n\r\n    // 格式化时长显示\r\n    formatDuration(seconds) {\r\n      if (seconds < 60) {\r\n        return `${seconds}s`;\r\n      } else {\r\n        const mins = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n        return `${mins}:${secs < 10 ? '0' + secs : secs}`;\r\n      }\r\n    },\r\n\r\n    // 显示状态消息\r\n    showStatus(text, type = 'info') {\r\n      this.statusText = text;\r\n      switch (type) {\r\n        case 'success':\r\n          this.statusClass = 'text-xs text-green-600 mt-2 text-center';\r\n          break;\r\n        case 'error':\r\n          this.statusClass = 'text-xs text-red-600 mt-2 text-center';\r\n          break;\r\n        case 'warning':\r\n          this.statusClass = 'text-xs text-yellow-600 mt-2 text-center';\r\n          break;\r\n        default:\r\n          this.statusClass = 'text-xs text-blue-600 mt-2 text-center';\r\n      }\r\n\r\n      if (type !== 'error') {\r\n        setTimeout(() => {\r\n          this.statusText = '';\r\n        }, 3000);\r\n      }\r\n    },\r\n\r\n    // 音频格式转换相关方法\r\n    async convertToValidWav(blob) {\r\n      if (await this.isValidWavFile(blob)) {\r\n        return blob;\r\n      }\r\n\r\n      try {\r\n        const arrayBuffer = await new Response(blob).arrayBuffer();\r\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)({\r\n          sampleRate: 16000\r\n        });\r\n\r\n        const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\r\n        const wavBuffer = this.convertToWav(audioBuffer);\r\n\r\n        return new Blob([wavBuffer], { type: 'audio/wav' });\r\n      } catch (error) {\r\n        console.error('音频格式转换失败:', error);\r\n        this.showStatus('音频格式转换失败，可能影响识别效果', 'warning');\r\n        return blob;\r\n      }\r\n    },\r\n\r\n    async isValidWavFile(blob) {\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = (e) => {\r\n          if (e.target.readyState === FileReader.DONE) {\r\n            const arrayBuffer = e.target.result;\r\n            const uint8Array = new Uint8Array(arrayBuffer);\r\n\r\n            if (uint8Array.length >= 4) {\r\n              const riff = String.fromCharCode(uint8Array[0], uint8Array[1], uint8Array[2], uint8Array[3]);\r\n              resolve(riff === 'RIFF');\r\n            } else {\r\n              resolve(false);\r\n            }\r\n          }\r\n        };\r\n        reader.readAsArrayBuffer(blob.slice(0, 4));\r\n      });\r\n    },\r\n\r\n    convertToWav(audioBuffer) {\r\n      const numberOfChannels = audioBuffer.numberOfChannels;\r\n      const sampleRate = audioBuffer.sampleRate;\r\n      const format = 1;\r\n      const bitDepth = 16;\r\n\r\n      let data = new Float32Array(audioBuffer.length);\r\n      for (let i = 0; i < audioBuffer.length; i++) {\r\n        let sum = 0;\r\n        for (let c = 0; c < numberOfChannels; c++) {\r\n          sum += audioBuffer.getChannelData(c)[i];\r\n        }\r\n        data[i] = sum / numberOfChannels;\r\n      }\r\n\r\n      const buffer = new ArrayBuffer(44 + data.length * 2);\r\n      const view = new DataView(buffer);\r\n\r\n      this.writeString(view, 0, 'RIFF');\r\n      view.setUint32(4, 36 + data.length * 2, true);\r\n      this.writeString(view, 8, 'WAVE');\r\n      this.writeString(view, 12, 'fmt ');\r\n      view.setUint32(16, 16, true);\r\n      view.setUint16(20, format, true);\r\n      view.setUint16(22, 1, true);\r\n      view.setUint32(24, sampleRate, true);\r\n      view.setUint32(28, sampleRate * 2, true);\r\n      view.setUint16(32, 2, true);\r\n      view.setUint16(34, bitDepth, true);\r\n      this.writeString(view, 36, 'data');\r\n      view.setUint32(40, data.length * 2, true);\r\n\r\n      let index = 44;\r\n      const volume = 1;\r\n      for (let i = 0; i < data.length; i++) {\r\n        const sample = Math.max(-1, Math.min(1, data[i] * volume));\r\n        view.setInt16(index, sample < 0 ? sample * 0x8000 : sample * 0x7FFF, true);\r\n        index += 2;\r\n      }\r\n\r\n      return buffer;\r\n    },\r\n\r\n    writeString(view, offset, string) {\r\n      for (let i = 0; i < string.length; i++) {\r\n        view.setUint8(offset + i, string.charCodeAt(i));\r\n      }\r\n    },\r\n\r\n    // 相机相关方法\r\n    async toggleCamera() {\r\n      if (this.isCameraActive) {\r\n        this.stopCamera();\r\n        this.isCameraModalVisible = false;\r\n      } else {\r\n        this.isCameraModalVisible = true;\r\n        await this.startCamera();\r\n      }\r\n    },\r\n\r\n    async startCamera() {\r\n      this.isLoadingCamera = true;\r\n      this.cameraError = null;\r\n\r\n      try {\r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n          throw new Error('您的浏览器不支持相机功能，请使用最新浏览器');\r\n        }\r\n\r\n        if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\r\n          throw new Error('相机功能需要在HTTPS环境下运行');\r\n        }\r\n\r\n        // 相机配置\r\n        this.videoStream = await navigator.mediaDevices.getUserMedia({\r\n          video: {\r\n            width: { ideal: 1280 },\r\n            height: { ideal: 720 }\r\n          }\r\n        });\r\n\r\n        const videoElement = this.$refs.videoElement;\r\n        if (videoElement) {\r\n          videoElement.srcObject = this.videoStream;\r\n          this.isCameraActive = true;\r\n          this.showStatus('相机已启动，可进行表情和姿态识别', 'success');\r\n        }\r\n      } catch (error) {\r\n        console.error('相机启动失败:', error);\r\n        this.cameraError = error.message;\r\n\r\n        // 错误处理\r\n        if (error.name === 'NotAllowedError') {\r\n          this.cameraError = '相机权限被拒绝，请在浏览器设置中允许相机访问';\r\n        } else if (error.name === 'NotFoundError') {\r\n          this.cameraError = '未找到相机设备';\r\n        } else if (error.name === 'NotReadableError') {\r\n          this.cameraError = '相机被占用或不可用';\r\n        } else if (error.name === 'NotSupportedError') {\r\n          this.cameraError = '您的浏览器不支持相机功能';\r\n        }\r\n\r\n        this.showStatus(`相机错误: ${this.cameraError}`, 'error');\r\n      } finally {\r\n        this.isLoadingCamera = false;\r\n      }\r\n    },\r\n\r\n    stopCamera() {\r\n      if (this.videoStream) {\r\n        this.videoStream.getTracks().forEach(track => track.stop());\r\n        this.videoStream = null;\r\n      }\r\n\r\n      const videoElement = this.$refs.videoElement;\r\n      if (videoElement) {\r\n        videoElement.srcObject = null;\r\n      }\r\n\r\n      this.isCameraActive = false;\r\n      this.isAnalyzingContinuously = false;\r\n\r\n      if (this.continuousAnalysisTimer) {\r\n        clearInterval(this.continuousAnalysisTimer);\r\n        this.continuousAnalysisTimer = null;\r\n      }\r\n\r\n      if (this.detectionInterval) {\r\n        clearInterval(this.detectionInterval);\r\n        this.detectionInterval = null;\r\n      }\r\n\r\n      this.showStatus('相机已关闭', 'info');\r\n    },\r\n\r\n    // 拍照并分析表情和姿态（仅使用/api/chat接口）\r\n    async captureImage() {\r\n      if (!this.isCameraActive || this.isProcessingImage) return;\r\n\r\n      this.isProcessingImage = true;\r\n      this.showStatus('正在分析表情和姿态...', 'info');\r\n\r\n      try {\r\n        const videoElement = this.$refs.videoElement;\r\n        if (!videoElement) throw new Error('未找到视频元素');\r\n\r\n        // 1. 捕获视频帧为base64\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = videoElement.videoWidth;\r\n        canvas.height = videoElement.videoHeight;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\r\n        const base64Image = canvas.toDataURL('image/jpeg');\r\n\r\n        // 2. 仅调用/api/chat接口（符合需求）\r\n        const analysisResult = await this.analyzePose(base64Image);\r\n        // 注意：这里复用了analyzePose方法，实际应确保它内部只调用/api/chat\r\n\r\n        // 3. 正确转换base64为图片URL（无需fetch）\r\n        const blob = await (await fetch(base64Image)).blob(); // 修正：先处理base64为blob\r\n        const imageUrl = URL.createObjectURL(blob);\r\n\r\n        // 4. 添加到消息列表（仅传入一个综合结果）\r\n        this.addExpressionMessage(imageUrl, analysisResult);\r\n\r\n        this.showStatus('表情和姿态分析完成', 'success');\r\n      } catch (error) {\r\n        console.error('图像分析失败:', error);\r\n        this.showStatus(`分析失败: ${error.message}`, 'error');\r\n      } finally {\r\n        this.isProcessingImage = false;\r\n      }\r\n    },\r\n\r\n    // 开始/停止连续分析\r\n    startContinuousAnalysis() {\r\n      if (this.isAnalyzingContinuously) {\r\n        // 停止连续分析\r\n        clearInterval(this.continuousAnalysisTimer);\r\n        this.continuousAnalysisTimer = null;\r\n        this.isAnalyzingContinuously = false;\r\n        this.showStatus('已停止连续分析', 'info');\r\n      } else {\r\n        // 开始连续分析，每2秒一次\r\n        this.showStatus('开始连续分析...', 'info');\r\n        this.isAnalyzingContinuously = true;\r\n\r\n        // 立即执行一次\r\n        this.captureImage();\r\n\r\n        // 设置定时器\r\n        this.continuousAnalysisTimer = setInterval(() => {\r\n          if (this.isAnalyzingContinuously) {\r\n            this.captureImage();\r\n          }\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    // 分析表情\r\n    async analyzeExpression(base64Image) {\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/predict/image`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ base64: base64Image })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`表情分析失败: ${response.status} - ${errorText.substring(0, 100)}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success' && data.predictions) {\r\n          return data.predictions;\r\n        } else {\r\n          throw new Error(data.error || '未获取到表情分析结果');\r\n        }\r\n      } catch (error) {\r\n        console.error('表情分析出错:', error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    // 分析姿态并处理轮询\r\n    async analyzePose(base64Image) {\r\n      try {\r\n        // 1. 发送图片获取任务ID\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            prompt: '请分析这张图片中人物的姿态动作和表情，用简洁的语言描述',\r\n            image_base64: base64Image\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`姿态分析请求失败: ${response.status} - ${errorText.substring(0, 100)}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success' && data.task_id) {\r\n          // 2. 获得task_id后开始轮询\r\n          return this.startPolling(data.task_id);\r\n        } else {\r\n          throw new Error(data.error || '未获取到任务ID');\r\n        }\r\n      } catch (error) {\r\n        console.error('姿态分析出错:', error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    // 轮询函数 - 修复后版本\r\n    async startPolling(taskId, interval = 1000) {\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat/result/${taskId}`, {\r\n          method: 'GET',\r\n          headers: this.commonHeaders\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`轮询失败: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n\r\n        if (result.status === 'processing') {\r\n          console.log(`任务 ${taskId} 处理中，继续等待...`);\r\n          // 使用箭头函数确保 this 指向组件实例\r\n          return new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve(this.startPolling(taskId, interval));\r\n            }, interval);\r\n          });\r\n        } else if (result.status === 'success') {\r\n          console.log(`任务 ${taskId} 处理完成`);\r\n          // 此时 this.msg 已初始化，可安全赋值\r\n          this.msg.expressionResults = [result.result]; // 存入数组，适配v-for\r\n          console.log('轮询结果:', this.msg.expressionResults);\r\n\r\n          return {\r\n            status: 'completed',\r\n            taskId,\r\n            result: result.result,\r\n            timestamp: new Date()\r\n          };\r\n        } else {\r\n          throw new Error(`任务处理失败: ${result.result || '未知错误'}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(`轮询任务 ${taskId} 出错:`, error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n\r\n\r\n\r\n    // 综合分析表情和姿态\r\n    async analyzeComprehensive(index) {\r\n      const msg = this.messages[index];\r\n      if (!msg || msg.type !== 'expression') return;\r\n\r\n      this.showStatus('正在进行综合分析...', 'info');\r\n\r\n      try {\r\n        // 构建提示信息\r\n        let expressionsText = msg.expressionResults.map(exp =>\r\n          `${exp.emotion} (${(exp.confidence * 100).toFixed(1)}%)`\r\n        ).join('、');\r\n\r\n        let prompt = `根据以下表情和姿态信息进行综合分析:\r\n表情: ${expressionsText}\r\n姿态: ${msg.poseResult.pose} (置信度: ${(msg.poseResult.score * 100).toFixed(1)}%)\r\n\r\n请分析这个人可能的情绪状态和意图，并给出简要解读。`;\r\n\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`综合分析请求失败: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success') {\r\n          // 更新消息对象\r\n          this.messages[index] = {\r\n            ...this.messages[index],\r\n            comprehensiveAnalysis: data.result\r\n          };\r\n\r\n          // 保存综合分析到localStorage（追加方式）\r\n          const existingAnalysis = localStorage.getItem('interview_expression_gesture_analysis') || '';\r\n          const newAnalysis = existingAnalysis ? `${existingAnalysis}\\n${data.result}` : data.result;\r\n          localStorage.setItem('interview_expression_gesture_analysis', newAnalysis);\r\n\r\n          this.showStatus('综合分析完成', 'success');\r\n        } else {\r\n          throw new Error(data.result || '综合分析失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('综合分析失败:', error);\r\n        this.showStatus(`综合分析失败: ${error.message}`, 'error');\r\n      }\r\n    },\r\n\r\n    // 打开评测报告弹窗\r\n    async openEvaluationReport() {\r\n      this.isReportVisible = true;\r\n      this.reportLoading = true;\r\n      this.reportError = '';\r\n      this.reportResponse = null; // 重置响应数据\r\n\r\n      // 延迟执行，确保弹窗已渲染\r\n      setTimeout(() => {\r\n        this.generateReportFromStorage();\r\n      }, 100);\r\n    },\r\n\r\n    // 从localStorage生成评测报告\r\n    async generateReportFromStorage() {\r\n      try {\r\n        this.reportLoading = true;\r\n\r\n        // 从localStorage提取数据\r\n        this.firstResult = localStorage.getItem(\"firstResult\") || '';\r\n        this.secondResult = localStorage.getItem(\"secondResult\") || '';\r\n        this.thirdResult = localStorage.getItem(\"thirdResult\") || '';\r\n        this.fourthResult = localStorage.getItem(\"fourthResult\") || '';\r\n        this.fifthResult = localStorage.getItem(\"fifthResult\") || '';\r\n\r\n        this.firstQuestion = localStorage.getItem(\"firstQuestion\") || '';\r\n        this.secondQuestion = localStorage.getItem(\"secondQuestion\") || '';\r\n        this.thirdQuestion = localStorage.getItem(\"thirdQuestion\") || '';\r\n        this.fourthQuestion = localStorage.getItem(\"fourthQuestion\") || '';\r\n        this.fifthQuestion = localStorage.getItem(\"fifthQuestion\") || '';\r\n\r\n        // 检查是否有足够的数据生成报告\r\n        if (!this.firstResult && !this.secondResult && !this.thirdResult && !this.fourthResult && !this.fifthResult) {\r\n          throw new Error('未找到足够的面试回答数据，请先完成面试');\r\n        }\r\n\r\n        // 生成各维度评分\r\n        this.calculateReportScores();\r\n\r\n        // 生成各维度详细分析\r\n        await this.generateDimensionAnalysis();\r\n\r\n        // 生成综合评价\r\n        await this.generateComprehensiveEvaluation();\r\n        // 生成关键问题定位\r\n        await this.generateKeyIssues();\r\n\r\n        // 生成反馈建议\r\n        await this.generateFeedbackSuggestions();\r\n\r\n        // 生成综合评价\r\n        await this.generateComprehensiveEvaluation();\r\n\r\n        // 存储完整的报告响应数据\r\n        this.reportResponse = {\r\n          indicators: this.reportIndicators,\r\n          values: this.reportValues,\r\n          professionalKnowledgeAnalysis: this.professionalKnowledgeAnalysis,\r\n          skillMatchAnalysis: this.skillMatchAnalysis,\r\n          languageExpressionAnalysis: this.languageExpressionAnalysis,\r\n          logicalThinkingAnalysis: this.logicalThinkingAnalysis,\r\n          innovationAbilityAnalysis: this.innovationAbilityAnalysis,\r\n          comprehensiveEvaluation: this.comprehensiveEvaluation,\r\n          improvementSuggestions: this.improvementSuggestions\r\n        };\r\n\r\n        // 确保DOM已更新后再渲染图表\r\n        this.$nextTick(() => {\r\n          this.renderRadarChart();\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('生成报告失败:', error);\r\n        this.reportError = error.message;\r\n      } finally {\r\n        this.reportLoading = false;\r\n      }\r\n    },\r\n\r\n    // 计算各维度评分\r\n    calculateReportScores() {\r\n      // 专业知识水平评分 (0-100)\r\n      let knowledgeScore = 60;\r\n      if (this.firstResult && (this.firstResult.length > 100 ||\r\n        this.firstResult.includes('项目') ||\r\n        this.firstResult.includes('技术') ||\r\n        this.firstResult.includes('经验'))) {\r\n        knowledgeScore = Math.floor(Math.random() * 20) + 70; // 70-90\r\n      } else if (this.firstResult && this.firstResult.length < 50) {\r\n        knowledgeScore = Math.floor(Math.random() * 20) + 40; // 40-60\r\n      }\r\n\r\n      // 技能匹配度评分\r\n      let skillScore = 60;\r\n      if (this.secondResult && (this.secondResult.length > 100 ||\r\n        this.secondResult.includes('技能') ||\r\n        this.secondResult.includes('掌握') ||\r\n        this.secondResult.includes('经验'))) {\r\n        skillScore = Math.floor(Math.random() * 20) + 70;\r\n      } else if (this.secondResult && this.secondResult.length < 50) {\r\n        skillScore = Math.floor(Math.random() * 20) + 40;\r\n      }\r\n\r\n      // 语言表达能力评分\r\n      let languageScore = 60;\r\n      if (this.thirdResult && (this.thirdResult.length > 100 ||\r\n        this.thirdResult.includes('解释') ||\r\n        this.thirdResult.includes('方法') ||\r\n        this.thirdResult.includes('理解'))) {\r\n        languageScore = Math.floor(Math.random() * 20) + 70;\r\n      } else if (this.thirdResult && this.thirdResult.length < 50) {\r\n        languageScore = Math.floor(Math.random() * 20) + 40;\r\n      }\r\n\r\n      // 逻辑思维能力评分\r\n      let logicScore = 60;\r\n      if (this.fourthResult && (this.fourthResult.length > 100 ||\r\n        this.fourthResult.includes('分析') ||\r\n        this.fourthResult.includes('步骤') ||\r\n        this.fourthResult.includes('案例'))) {\r\n        logicScore = Math.floor(Math.random() * 20) + 70;\r\n      } else if (this.fourthResult && this.fourthResult.length < 50) {\r\n        logicScore = Math.floor(Math.random() * 20) + 40;\r\n      }\r\n\r\n      // 创新能力评分\r\n      let innovationScore = 60;\r\n      if (this.fifthResult && (this.fifthResult.length > 100 ||\r\n        this.fifthResult.includes('创新') ||\r\n        this.fifthResult.includes('解决方案') ||\r\n        this.fifthResult.includes('思路'))) {\r\n        innovationScore = Math.floor(Math.random() * 20) + 70;\r\n      } else if (this.fifthResult && this.fifthResult.length < 50) {\r\n        innovationScore = Math.floor(Math.random() * 20) + 40;\r\n      }\r\n\r\n      this.reportValues = [\r\n        knowledgeScore,\r\n        skillScore,\r\n        languageScore,\r\n        logicScore,\r\n        innovationScore\r\n      ];\r\n    },\r\n\r\n    // 生成各维度详细分析\r\n    // 生成各维度详细分析\r\n    async generateDimensionAnalysis() {\r\n      // 从localStorage获取问题\r\n      const firstQuestion = localStorage.getItem(\"firstQuestion\") || '';\r\n      const secondQuestion = localStorage.getItem(\"secondQuestion\") || '';\r\n      const thirdQuestion = localStorage.getItem(\"thirdQuestion\") || '';\r\n      const fourthQuestion = localStorage.getItem(\"fourthQuestion\") || '';\r\n      const fifthQuestion = localStorage.getItem(\"fifthQuestion\") || '';\r\n\r\n      // 专业知识水平分析 - 加入对应问题\r\n      if (this.firstResult) {\r\n        const prompt = `请基于以下问题和回答，分析面试者的专业知识水平：\r\n问题：${firstQuestion}\r\n回答：${this.firstResult}\r\n\r\n请评价面试者对该问题的回答质量、专业知识的掌握程度和深度，并指出优势和不足。`;\r\n        this.professionalKnowledgeAnalysis = await this.getAnalysisFromAPI(prompt);\r\n      }\r\n\r\n      // 技能匹配度分析 - 加入对应问题\r\n      if (this.secondResult) {\r\n        const prompt = `请基于以下问题和回答，分析面试者的技能匹配度：\r\n问题：${secondQuestion}\r\n回答：${this.secondResult}\r\n\r\n请评价面试者所提及技能与岗位需求的匹配程度，以及技能掌握的实际应用能力。`;\r\n        this.skillMatchAnalysis = await this.getAnalysisFromAPI(prompt);\r\n      }\r\n\r\n      // 语言表达能力分析 - 加入对应问题\r\n      if (this.thirdResult) {\r\n        const prompt = `请基于以下问题和回答，分析面试者的语言表达能力：\r\n问题：${thirdQuestion}\r\n回答：${this.thirdResult}\r\n\r\n请评价面试者回答的清晰度、条理性、逻辑性和表达流畅度。`;\r\n        this.languageExpressionAnalysis = await this.getAnalysisFromAPI(prompt);\r\n      }\r\n\r\n      // 逻辑思维能力分析 - 加入对应问题\r\n      if (this.fourthResult) {\r\n        const prompt = `请基于以下问题和回答，分析面试者的逻辑思维能力：\r\n问题：${fourthQuestion}\r\n回答：${this.fourthResult}\r\n\r\n请评价面试者面试者分析问题的思路、推理过程的逻辑性和解决问题的系统性。`;\r\n        this.logicalThinkingAnalysis = await this.getAnalysisFromAPI(prompt);\r\n      }\r\n\r\n      // 创新能力分析 - 加入对应问题\r\n      if (this.fifthResult) {\r\n        const prompt = `请基于以下问题和回答，分析面试者的创新能力：\r\n问题：${fifthQuestion}\r\n回答：${this.fifthResult}\r\n\r\n请评价面试者提出的解决方案的创新性、独特性和实用性，以及发现问题的敏锐度。`;\r\n        this.innovationAbilityAnalysis = await this.getAnalysisFromAPI(prompt);\r\n      }\r\n    },\r\n\r\n\r\n    // 调用API获取分析结果\r\n    async getAnalysisFromAPI(prompt) {\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`分析请求失败: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success') {\r\n          const taskId = data.task_id;\r\n          const pollInterval = 2000; // 轮询间隔2秒\r\n          const maxAttempts = 150;   // 最多轮询150次（约5分钟）\r\n\r\n          // 创建一个Promise来等待最终结果\r\n          return new Promise((resolve, reject) => {\r\n            let attempts = 0;\r\n\r\n            // 定义轮询函数，直接查询文件接口\r\n            const pollForFile = () => {\r\n              // 超过最大尝试次数则拒绝\r\n              if (attempts >= maxAttempts) {\r\n                reject(new Error('请求超时，未能获取结果'));\r\n                return;\r\n              }\r\n\r\n              attempts++;\r\n\r\n              // 直接调用文件查询接口\r\n              fetch(`${this.API_BASE_URL}/get_task_file_url`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  ...this.commonHeaders,\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ task_id: taskId })\r\n              })\r\n                .then(response => {\r\n                  // 无论响应状态如何，都尝试解析JSON\r\n                  return response.json().then(data => ({ data, response }));\r\n                })\r\n                .then(({ data, response }) => {\r\n                  // 成功获取到文件URL\r\n                  if (data.status === 'success' && data.file_url) {\r\n                    // 加载文件内容\r\n                    fetch(data.file_url, {\r\n                      method: 'GET',\r\n                      headers: this.commonHeaders\r\n                    })\r\n                      .then(fileResponse => {\r\n                        if (!fileResponse.ok) {\r\n                          throw new Error(`文件加载失败: ${fileResponse.status}`);\r\n                        }\r\n                        return fileResponse.text();\r\n                      })\r\n                      .then(fileContent => {\r\n                        // 检查内容是否为\"processing\"\r\n                        if (fileContent.trim() === 'processing') {\r\n                          // 仍在处理中，继续轮询\r\n                          setTimeout(pollForFile, pollInterval);\r\n                        } else {\r\n                          // 处理完成，返回结果\r\n                          resolve(fileContent);\r\n                        }\r\n                      })\r\n                      .catch(() => {\r\n                        // 文件加载失败，继续轮询\r\n                        setTimeout(pollForFile, pollInterval);\r\n                      });\r\n                  }\r\n                  // 未找到文件但可能还在处理中，继续轮询\r\n                  else if (response.status === 404 ||\r\n                    (data.status === 'error' && data.message.includes('未找到'))) {\r\n                    setTimeout(pollForFile, pollInterval);\r\n                  }\r\n                  // 其他错误情况\r\n                  else {\r\n                    reject(new Error(`获取文件失败: ${data.message || '未知错误'}`));\r\n                  }\r\n                })\r\n                .catch(error => {\r\n                  // 网络错误等情况，继续轮询\r\n                  setTimeout(pollForFile, pollInterval);\r\n                });\r\n            };\r\n\r\n            // 开始第一次查询\r\n            pollForFile();\r\n          });\r\n        } else {\r\n          return '无法生成分析结果';\r\n        }\r\n      } catch (error) {\r\n        console.error('获取分析结果失败:', error);\r\n        return '分析生成失败';\r\n      }\r\n    },\r\n\r\n    // 检查录音支持\r\n    async checkRecordingSupport() {\r\n      try {\r\n        // 检查浏览器是否支持媒体录制API\r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n          throw new Error('您的浏览器不支持录音功能');\r\n        }\r\n\r\n        // 尝试获取麦克风权限（可选，根据实际需求）\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n\r\n        // 释放流资源\r\n        stream.getTracks().forEach(track => track.stop());\r\n\r\n        // 可以在这里设置一个标志，表示支持录音\r\n        this.recordingSupported = true;\r\n        console.log('浏览器支持录音功能');\r\n      } catch (error) {\r\n        this.recordingSupported = false;\r\n        console.warn('录音功能检查失败:', error.message);\r\n      }\r\n    },\r\n    // 切换录音状态（开始/停止录音）\r\n    toggleRecording() {\r\n      if (this.isRecording) {\r\n        // 停止录音的逻辑\r\n        this.stopRecording();\r\n      } else {\r\n        // 开始录音的逻辑\r\n        this.startRecording();\r\n      }\r\n    },\r\n\r\n    // 生成综合评价\r\n    async generateComprehensiveEvaluation() {\r\n      // 构建提示信息\r\n      // 修改prompt，要求结合评分和具体建议\r\n      const prompt = `基于以下面试者的五维分析数据，生成综合评价和改进建议：\r\n1. 专业知识水平: ${this.firstResult || '无数据'}（评分：${this.reportValues[0]}）\r\n2. 技能匹配度: ${this.secondResult || '无数据'}（评分：${this.reportValues[1]}）\r\n3. 语言表达能力: ${this.thirdResult || '无数据'}（评分：${this.reportValues[2]}）\r\n4. 逻辑思维能力: ${this.fourthResult || '无数据'}（评分：${this.reportValues[3]}）\r\n5. 创新能力: ${this.fifthResult || '无数据'}（评分：${this.reportValues[4]}）\r\n\r\n请严格按照以下格式输出：\r\n【综合评价】\r\n[100字左右，结合评分总结优势和不足]\r\n\r\n【改进建议】\r\n1. [具体可操作的建议，关联专业知识]\r\n2. [具体可操作的建议，关联技能或表达]\r\n3. [具体可操作的建议，关联思维或创新]`;\r\n\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`生成综合评价失败: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'success' && data.result) {\r\n          const result = data.result;\r\n\r\n          // 提取综合评价\r\n          const evalMatch = result.match(/【综合评价】\\s*([\\s\\S]*?)(?=【改进建议】)/);\r\n          this.comprehensiveEvaluation = evalMatch ? evalMatch[1].trim() : '无法生成综合评价';\r\n\r\n          // 提取改进建议\r\n          this.improvementSuggestions = [];\r\n          const suggestionsMatch = result.match(/【改进建议】\\s*([\\s\\S]*)/);\r\n          if (suggestionsMatch && suggestionsMatch[1]) {\r\n            // 按序号提取建议\r\n            const suggestions = suggestionsMatch[1]\r\n              .split(/\\n\\d+\\./)\r\n              .filter(item => item.trim());\r\n\r\n            suggestions.forEach(suggestion => {\r\n              this.improvementSuggestions.push(suggestion.trim());\r\n            });\r\n          }\r\n\r\n          // 兜底处理（确保至少有3条建议）\r\n          while (this.improvementSuggestions.length < 3) {\r\n            this.improvementSuggestions.push('加强对应维度的专项训练');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('生成综合评价失败:', error);\r\n        // 使用默认评价\r\n        this.comprehensiveEvaluation = '面试者表现中等，各方面能力有提升空间。';\r\n        this.improvementSuggestions = [\r\n          \"加强专业知识的深度和广度\",\r\n          \"提高语言表达的清晰度和逻辑性\",\r\n          \"在实际应用中培养创新思维\"\r\n        ];\r\n      }\r\n    },\r\n\r\n    // 在generateComprehensiveEvaluation方法后添加\r\n    async generateKeyIssues() {\r\n      // 生成关键问题定位\r\n      // 修改prompt，明确要求结构化输出\r\n      const prompt = `基于以下面试者的表现，分析其在面试中暴露的关键问题和不足:\r\n专业知识水平: ${this.firstResult || '无数据'}\r\n技能匹配度: ${this.secondResult || '无数据'}\r\n语言表达能力: ${this.thirdResult || '无数据'}\r\n逻辑思维能力: ${this.fourthResult || '无数据'}\r\n创新能力: ${this.fifthResult || '无数据'}\r\n\r\n请严格按照以下格式输出，不要添加额外内容：\r\n【关键问题定位】\r\n[用1-2句话总结核心问题]\r\n\r\n【具体表现示例】\r\n1. [第一个具体例子]\r\n2. [第二个具体例子]\r\n3. [第三个具体例子]`;\r\n\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) throw new Error(`生成关键问题失败: ${response.status}`);\r\n\r\n        const data = await response.json();\r\n        if (data.status === 'success' && data.result) {\r\n          const result = data.result;\r\n\r\n          // 提取关键问题定位（匹配【关键问题定位】后的内容）\r\n          const issueMatch = result.match(/【关键问题定位】\\s*([\\s\\S]*?)(?=【具体表现示例】)/);\r\n          this.keyIssues = issueMatch ? issueMatch[1].trim() : '未发现明显问题';\r\n\r\n          // 提取具体示例（匹配【具体表现示例】后的列表）\r\n          this.issueExamples = [];\r\n          const examplesMatch = result.match(/【具体表现示例】\\s*([\\s\\S]*)/);\r\n          if (examplesMatch && examplesMatch[1]) {\r\n            // 按序号分割提取每个示例\r\n            const examples = examplesMatch[1].split(/\\n\\d+\\./).filter(item => item.trim());\r\n            examples.forEach(example => {\r\n              this.issueExamples.push(example.trim());\r\n            });\r\n            // 限制最多3个示例\r\n            this.issueExamples = this.issueExamples.slice(0, 3);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('生成关键问题失败:', error);\r\n        this.keyIssues = '无法分析关键问题';\r\n      }\r\n    },\r\n\r\n    async generateFeedbackSuggestions() {\r\n      // 生成分类反馈建议\r\n      // 修改prompt，明确分类和格式要求\r\n      const prompt = `基于以下面试者的表现，从5个维度给出具体改进建议：\r\n专业知识水平: ${this.firstResult || '无数据'}\r\n技能匹配度: ${this.secondResult || '无数据'}\r\n语言表达能力: ${this.thirdResult || '无数据'}\r\n逻辑思维能力: ${this.fourthResult || '无数据'}\r\n创新能力: ${this.fifthResult || '无数据'}\r\n\r\n请严格按照以下格式输出（每个维度至少2条建议，用\"-\"开头）：\r\n【专业知识】\r\n- 建议1\r\n- 建议2\r\n\r\n【技能提升】\r\n- 建议1\r\n- 建议2\r\n\r\n【表达能力】\r\n- 建议1\r\n- 建议2\r\n\r\n【思维逻辑】\r\n- 建议1\r\n- 建议2\r\n\r\n【创新思维】\r\n- 建议1\r\n- 建议2`;\r\n\r\n      try {\r\n        const response = await fetch(`${this.API_BASE_URL}/api/chat`, {\r\n          method: 'POST',\r\n          headers: {\r\n            ...this.commonHeaders,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ prompt: prompt })\r\n        });\r\n\r\n        if (!response.ok) throw new Error(`生成反馈建议失败: ${response.status}`);\r\n\r\n        const data = await response.json();\r\n        if (data.status === 'success' && data.result) {\r\n          this.feedbackCategories = [];\r\n          const categories = ['专业知识', '技能提升', '表达能力', '思维逻辑', '创新思维'];\r\n\r\n          categories.forEach(category => {\r\n            // 匹配每个分类的内容（如【专业知识】和下一个分类之间的内容）\r\n            const regex = new RegExp(`【${category}】\\\\s*([\\\\s\\\\S]*?)(?=【|$)`, 'i');\r\n            const match = data.result.match(regex);\r\n\r\n            if (match && match[1]) {\r\n              // 提取\"-\"开头的建议列表\r\n              const suggestions = match[1]\r\n                .split('\\n')\r\n                .filter(line => line.trim().startsWith('-'))\r\n                .map(line => line.trim().replace(/^-/, '').trim());\r\n\r\n              this.feedbackCategories.push({\r\n                title: category,\r\n                suggestions: suggestions.length ? suggestions : ['暂无具体建议']\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('生成反馈建议失败:', error);\r\n        this.feedbackCategories = [{\r\n          title: '通用建议',\r\n          suggestions: [\r\n            '加强专业知识学习',\r\n            '提高语言表达能力',\r\n            '多练习逻辑思维'\r\n          ]\r\n        }];\r\n      }\r\n    },\r\n\r\n    // 渲染雷达图（修复图表不显示问题）\r\n    renderRadarChart1() {\r\n      // 确保DOM元素已存在\r\n      this.$nextTick(() => {\r\n        const ctx = this.$refs.radarChart?.getContext('2d');\r\n        if (!ctx) {\r\n          console.error('未找到雷达图Canvas元素');\r\n          return;\r\n        }\r\n\r\n        // 销毁现有图表\r\n        if (this.chart) {\r\n          this.chart.destroy();\r\n        }\r\n\r\n        // 确保有数据再绘制图表\r\n        if (!this.reportIndicators || !this.reportValues || this.reportIndicators.length !== this.reportValues.length) {\r\n          console.error('雷达图数据不完整');\r\n          return;\r\n        }\r\n\r\n        // 创建新图表\r\n        this.chart = new Chart(ctx, {\r\n          type: 'radar',\r\n          data: {\r\n            labels: this.reportIndicators,\r\n            datasets: [{\r\n              label: '能力评分',\r\n              data: this.reportValues,\r\n              backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n              borderColor: 'rgba(59, 130, 246, 1)',\r\n              pointBackgroundColor: 'rgba(59, 130, 246, 1)',\r\n              pointBorderColor: '#fff',\r\n              pointHoverBackgroundColor: '#fff',\r\n              pointHoverBorderColor: 'rgba(59, 130, 246, 1)'\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              r: {\r\n                angleLines: { display: true },\r\n                suggestedMin: 0,\r\n                suggestedMax: 100,\r\n                ticks: { callback: (value) => `${value}分` }\r\n              }\r\n            },\r\n            plugins: {\r\n              legend: { position: 'top' },\r\n              tooltip: {\r\n                callbacks: { label: (context) => `${context.label}: ${context.raw}分` }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      });\r\n    },\r\n\r\n    // 获取评分等级文本\r\n    getScoreLevel(score) {\r\n      if (score >= 85) return '优秀';\r\n      if (score >= 75) return '良好';\r\n      if (score >= 65) return '一般';\r\n      return '待提高';\r\n    },\r\n\r\n    // 获取评分对应的CSS类\r\n    getScoreClass(score) {\r\n      if (score >= 85) return 'excellent';\r\n      if (score >= 75) return 'good';\r\n      if (score >= 65) return 'average';\r\n      return 'poor';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#dialog {\r\n  position: relative;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-color: #EDEDF5;\r\n}\r\n\r\n.van-nav-bar {\r\n  --van-nav-bar-background-color: #EFF1FD;\r\n  --van-nav-bar-title-text-color: black;\r\n}\r\n\r\n.chat-container {\r\n  width: 100%;\r\n  overflow-y: auto;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.messages {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  padding: 0 15px;\r\n}\r\n\r\n.message-item {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  margin: 5px 0;\r\n}\r\n\r\n.user-message {\r\n  justify-content: flex-end;\r\n\r\n}\r\n\r\n/* 用户消息气泡样式（关键） */\r\n.user-message .message-bubble,\r\n.user-message .voice-bubble,\r\n.user-message .expression-bubble {\r\n  margin-right: 8px;\r\n  /* 与头像保持距离 */\r\n  margin-left: 0;\r\n  /* 左侧无间距 */\r\n}\r\n\r\n.avatar {\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 10px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.ai-message .avatar {\r\n  background-color: #e6f7ff;\r\n  color: #1890ff;\r\n}\r\n\r\n.user-message .avatar {\r\n  background-color: #f5f5f5;\r\n  color: #8c8c8c;\r\n}\r\n\r\n.message-bubble {\r\n  padding: 10px 15px;\r\n  border-radius: 18px;\r\n  max-width: 80%;\r\n  word-wrap: break-word;\r\n  position: relative;\r\n}\r\n\r\n.ai-message .message-bubble {\r\n  background-color: #ffffff;\r\n  border-top-left-radius: 4px;\r\n}\r\n\r\n.user-message .message-bubble {\r\n  background-color: #1677ff;\r\n  color: white;\r\n  border-top-right-radius: 4px;\r\n}\r\n\r\n.voice-bubble {\r\n  max-width: 80%;\r\n  padding: 10px 15px;\r\n  border-radius: 18px;\r\n  position: relative;\r\n}\r\n\r\n.ai-message .voice-bubble {\r\n  background-color: #ffffff;\r\n  border-top-left-radius: 4px;\r\n}\r\n\r\n.user-message .voice-bubble {\r\n  background-color: #1677ff;\r\n  color: white;\r\n  border-top-right-radius: 4px;\r\n}\r\n\r\n.voice-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  min-width: 150px;\r\n}\r\n\r\n.voice-wave {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 3px;\r\n  height: 24px;\r\n  flex-grow: 1;\r\n}\r\n\r\n.voice-wave div {\r\n  width: 3px;\r\n  background-color: currentColor;\r\n  border-radius: 3px;\r\n  transition: height 0.2s ease;\r\n}\r\n\r\n.voice-duration {\r\n  font-size: 12px;\r\n  color: currentColor;\r\n  opacity: 0.8;\r\n}\r\n\r\n.play-icon {\r\n  cursor: pointer;\r\n}\r\n\r\n.voice-actions {\r\n  display: flex;\r\n  gap: 5px;\r\n  margin-top: 8px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.voice-text-result {\r\n  margin-top: 8px;\r\n  padding-top: 8px;\r\n  border-top: 1px dashed #eee;\r\n  font-size: 14px;\r\n  color: #333;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.voice-speed-result {\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n  color: #666;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  padding: 3px 5px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.voice-tone-result {\r\n  margin-top: 8px;\r\n  padding-top: 8px;\r\n  border-top: 1px dashed #eee;\r\n  font-size: 12px;\r\n  color: #666;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.voice-logic-result {\r\n  margin-top: 8px;\r\n  padding-top: 8px;\r\n  border-top: 1px dashed #eee;\r\n  font-size: 13px;\r\n  color: #333;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 表情和姿态分析样式 */\r\n.expression-bubble {\r\n  max-width: 80%;\r\n  padding: 10px 15px;\r\n  border-radius: 18px;\r\n  position: relative;\r\n}\r\n\r\n.ai-message .expression-bubble {\r\n  background-color: #ffffff;\r\n  border-top-left-radius: 4px;\r\n}\r\n\r\n.user-message .expression-bubble {\r\n  background-color: #1677ff;\r\n  color: white;\r\n  border-top-right-radius: 4px;\r\n}\r\n\r\n.expression-image-container {\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.expression-image {\r\n  width: 200px;\r\n  height: auto;\r\n  display: block;\r\n}\r\n\r\n.expression-results,\r\n.pose-result,\r\n.comprehensive-analysis {\r\n  margin-top: 8px;\r\n  font-size: 13px;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  color: #333;\r\n}\r\n\r\n.expression-actions {\r\n  display: flex;\r\n  gap: 5px;\r\n  margin-top: 8px;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.error-message {\r\n  background-color: #fff2f0 !important;\r\n  color: #f5222d !important;\r\n}\r\n\r\n.typing {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n}\r\n\r\n.typing span {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background-color: #6b7280;\r\n  animation: typing 1.4s infinite ease-in-out both;\r\n}\r\n\r\n.typing span:nth-child(1) {\r\n  animation-delay: -0.32s;\r\n}\r\n\r\n.typing span:nth-child(2) {\r\n  animation-delay: -0.16s;\r\n}\r\n\r\n@keyframes typing {\r\n\r\n  0%,\r\n  80%,\r\n  100% {\r\n    transform: scale(0);\r\n  }\r\n\r\n  40% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n\r\n#dialog_bottombar {\r\n  width: 100%;\r\n  background-color: #EFF1FD;\r\n}\r\n\r\n#dialog_bottombar_inside {\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 8px 2.5% 15px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.recording {\r\n  color: #f5222d !important;\r\n  animation: pulse 1.5s infinite;\r\n}\r\n\r\n.camera-active {\r\n  color: #00b42a !important;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n.report-icon {\r\n  color: #722ed1 !important;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n\r\n  50% {\r\n    transform: scale(1.2);\r\n  }\r\n\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n.recording-indicator {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 20px 30px;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.recording-dot {\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  background-color: #f5222d;\r\n  margin: 0 auto 10px;\r\n  animation: blink 1s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n\r\n  50% {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.status-bar {\r\n  position: absolute;\r\n  bottom: 120px;\r\n  left: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n/* 相机模态框样式 */\r\n.camera-modal {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.camera-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.camera-preview {\r\n  flex-grow: 1;\r\n  position: relative;\r\n  background-color: #000;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.camera-video {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.camera-loading,\r\n.camera-error {\r\n  position: absolute;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.camera-controls {\r\n  padding: 15px;\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n/* 评测报告弹窗样式 */\r\n.report-container {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 0;\r\n}\r\n\r\n.report-header {\r\n  text-align: center;\r\n  padding: 10px 20px;\r\n  position: relative;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.report-header h2 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  color: #1e293b;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #666;\r\n}\r\n\r\n.report-loading,\r\n.report-error {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-grow: 1;\r\n  gap: 15px;\r\n  padding: 20px;\r\n}\r\n\r\n.report-content {\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n  padding: 15px;\r\n}\r\n\r\n/* 雷达图样式 */\r\n.radar-chart-container {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 16px;\r\n  color: #334155;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  font-weight: 500;\r\n}\r\n\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 300px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* 能力详情样式 */\r\n.ability-details-container {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.details-title {\r\n  font-size: 16px;\r\n  color: #334155;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  font-weight: 500;\r\n}\r\n\r\n.details-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 10px;\r\n}\r\n\r\n.detail-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 8px 10px;\r\n  background: #fff;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n}\r\n\r\n.indicator-name {\r\n  color: #334155;\r\n}\r\n\r\n.score-value {\r\n  font-weight: bold;\r\n}\r\n\r\n.excellent {\r\n  color: #2ecc71;\r\n}\r\n\r\n.good {\r\n  color: #f39c12;\r\n}\r\n\r\n.average {\r\n  color: #3498db;\r\n}\r\n\r\n.poor {\r\n  color: #e74c3c;\r\n}\r\n\r\n/* 分析内容样式 */\r\n.analysis-container {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.analysis-title {\r\n  font-size: 16px;\r\n  color: #334155;\r\n  margin-bottom: 15px;\r\n  font-weight: 500;\r\n}\r\n\r\n.analysis-section {\r\n  margin-bottom: 15px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px dashed #e2e8f0;\r\n}\r\n\r\n.analysis-section:last-child {\r\n  margin-bottom: 0;\r\n  padding-bottom: 0;\r\n  border-bottom: none;\r\n}\r\n\r\n.analysis-section h4 {\r\n  margin: 0 0 8px 0;\r\n  font-size: 14px;\r\n  color: #1e293b;\r\n}\r\n\r\n.analysis-section p {\r\n  margin: 0;\r\n  font-size: 13px;\r\n  color: #475569;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* 综合评价样式 */\r\n.summary-container {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.summary-title {\r\n  font-size: 16px;\r\n  color: #334155;\r\n  margin-bottom: 15px;\r\n  font-weight: 500;\r\n}\r\n\r\n.summary-content {\r\n  background: #fff;\r\n  padding: 15px;\r\n  border-radius: 6px;\r\n}\r\n\r\n.summary-content p {\r\n  margin: 0 0 10px 0;\r\n  font-size: 13px;\r\n  color: #475569;\r\n  line-height: 1.5;\r\n}\r\n\r\n.summary-content h4 {\r\n  margin: 15px 0 8px 0;\r\n  font-size: 14px;\r\n  color: #1e293b;\r\n}\r\n\r\n.summary-content ul {\r\n  margin: 0;\r\n  padding-left: 20px;\r\n}\r\n\r\n.summary-content li {\r\n  font-size: 13px;\r\n  color: #475569;\r\n  margin-bottom: 5px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* 响应体展示样式 */\r\n.response-body-container {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.response-body-title {\r\n  font-size: 16px;\r\n  color: #334155;\r\n  margin-bottom: 10px;\r\n  font-weight: 500;\r\n}\r\n\r\n.response-body-content {\r\n  background: #fff;\r\n  padding: 15px;\r\n  border-radius: 6px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  font-family: monospace;\r\n}\r\n\r\n.response-body-content pre {\r\n  margin: 0;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  font-size: 12px;\r\n  color: #334155;\r\n}\r\n\r\n/* Markdown渲染样式 */\r\n.markdown-bubble {\r\n  padding: 12px 15px;\r\n  line-height: 1.8;\r\n}\r\n\r\n.markdown-render h1 {\r\n  font-size: 1.5rem;\r\n  margin: 1rem 0 0.5rem;\r\n  color: #333;\r\n}\r\n\r\n.markdown-render h2 {\r\n  font-size: 1.3rem;\r\n  margin: 0.8rem 0 0.4rem;\r\n  color: #444;\r\n}\r\n\r\n.markdown-render h3 {\r\n  font-size: 1.1rem;\r\n  margin: 0.6rem 0 0.3rem;\r\n  color: #555;\r\n}\r\n\r\n.markdown-render ul {\r\n  margin: 0.5rem 0;\r\n  padding-left: 1.5rem;\r\n}\r\n\r\n.markdown-render li {\r\n  margin: 0.3rem 0;\r\n}\r\n\r\n.markdown-render strong {\r\n  font-weight: bold;\r\n  color: #222;\r\n}\r\n\r\n.markdown-render em {\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.markdown-render p {\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n/* 修复可能的样式冲突 */\r\n.markdown-render * {\r\n  box-sizing: border-box;\r\n}\r\n\r\n.formatted-content {\r\n\r\n  color: #111827;\r\n}\r\n\r\n\r\n.formatted-content div[style*=\"color: rgba(107, 114, 128, 0.7)\"] {\r\n  color: rgba(107, 114, 128, 0.7) !important;\r\n  background-color: rgba(243, 244, 246, 0.3) !important;\r\n}\r\n.van-popup.dragging {\r\n  user-select: none;\r\n}\r\n</style>\r\n","import { render } from \"./DiscoverCom1.vue?vue&type=template&id=63e143ca&scoped=true\"\nimport script from \"./DiscoverCom1.vue?vue&type=script&lang=js\"\nexport * from \"./DiscoverCom1.vue?vue&type=script&lang=js\"\n\nimport \"./DiscoverCom1.vue?vue&type=style&index=0&id=63e143ca&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63e143ca\"]])\n\nexport default __exports__","<template>\r\n  <!-- 模板内容保持不变 -->\r\n  <div class=\"app-container\">\r\n    <!-- 选择面试官性格、风格和岗位的首页 -->\r\n    <div v-if=\"!isChatStarted\" class=\"selection-page\">\r\n      <h1 class=\"page-title\">设置面试参数</h1>\r\n      \r\n      <div class=\"selection-card\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">面试官性格</label>\r\n          <input \r\n            type=\"text\" \r\n            v-model=\"interviewerPersonality\" \r\n            placeholder=\"请输入面试官性格，例如：友善型、严厉型\"\r\n            class=\"form-input\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">面试风格</label>\r\n          <input \r\n            type=\"text\" \r\n            v-model=\"interviewStyle\" \r\n            placeholder=\"请输入面试风格，例如：技术导向、行为面试\"\r\n            class=\"form-input\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">面试岗位</label>\r\n          <input \r\n            type=\"text\" \r\n            v-model=\"jobPosition\" \r\n            placeholder=\"请输入面试岗位，例如：前端开发工程师、产品经理\"\r\n            class=\"form-input\"\r\n          >\r\n        </div>\r\n        \r\n        <button \r\n          class=\"next-button\"\r\n          :disabled=\"!interviewerPersonality || !interviewStyle || !jobPosition\"\r\n          @click=\"startChat\"\r\n        >\r\n          下一步开始对话\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 聊天页面 -->\r\n    <div v-else class=\"chat-page\">\r\n      <div class=\"flex justify-between items-center mb-6\">\r\n        <h1>\r\n          面试官 {{ interviewerName }}\r\n          <span class=\"interviewer-traits\">\r\n            ({{ interviewerPersonality }}·{{ interviewStyle }}·{{ jobPosition }})\r\n          </span>\r\n        </h1>\r\n        <button \r\n          id=\"clearBtn\" \r\n          @click=\"clearChatHistory\"\r\n          class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 px-4 py-2 rounded-lg transition-colors\"\r\n        >\r\n          清除历史聊天记录\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- 聊天内容区域 -->\r\n      <div id=\"results\" class=\"bg-white rounded-xl shadow-lg p-6 mb-6 h-[500px] overflow-y-auto\">\r\n        <div id=\"result\">\r\n          <div \r\n            v-for=\"(message, index) in chatMessages.filter(m => m.role !== 'system')\" \r\n            :key=\"index\" \r\n            :class=\"['message', `${message.role}-message`, 'flex', 'mb-4']\"\r\n          >\r\n            <img \r\n              class=\"avatar w-10 h-10 rounded-full mr-3 object-cover\" \r\n              :src=\"message.role === 'user' ? userAvatar : getInterviewerAvatar()\"\r\n              :alt=\"`${message.role === 'assistant' ? `${interviewerName} avatar` : 'user avatar'}`\" \r\n            />\r\n            <div class=\"content flex-1 bg-gray-100 p-4 rounded-lg shadow-sm\">\r\n              <!-- 显示面试官标识 -->\r\n              <div v-if=\"message.role === 'assistant'\" class=\"text-xs text-pink-500 mb-1\">{{ interviewerName }}</div>\r\n              <div v-html=\"parseContent(message.content)\"></div>\r\n              <div v-if=\"message.role === 'assistant' && showSpeakButton\" class=\"mt-2\">\r\n                <button \r\n                  @click=\"speakLatestAnswer(message.content)\" \r\n                  class=\"text-primary text-sm hover:underline flex items-center\"\r\n                >\r\n                  <i class=\"fa-solid fa-volume-up mr-1\"></i> 语音播放\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 文字输入区域 -->\r\n      <div class=\"bg-white rounded-xl shadow-lg p-6\">\r\n        <div id=\"sendVal\" class=\"flex\">\r\n          <input \r\n            id=\"question\" \r\n            type=\"text\" \r\n            placeholder=\"请输入信息...\" \r\n            v-model=\"userInput\"\r\n            @keydown.enter=\"sendMessage\"\r\n            :disabled=\"isLoading\"\r\n            class=\"flex-1 px-4 py-3 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-primary/50\"\r\n          />\r\n          <button \r\n            id=\"btn\" \r\n            @click=\"sendMessage\"\r\n            :disabled=\"isLoading || !userInput.trim()\"\r\n            class=\"bg-primary hover:bg-primary/90 text-white px-6 py-3 rounded-r-lg transition-colors\"\r\n          >\r\n            {{ isLoading ? '发送中...' : '发送' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div id=\"error\" class=\"text-center text-red-500 mt-4\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'InterviewVoiceChat',\r\n  data() {\r\n    return {\r\n      // 用户头像\r\n      userAvatar: require('../assets/images/my_profile.jpg'),\r\n      \r\n      // 选择页面相关状态\r\n      isChatStarted: false,\r\n      interviewerPersonality: '',  // 面试官性格（用户输入）\r\n      interviewStyle: '',          // 面试风格（用户输入）\r\n      jobPosition: '',             // 面试岗位（新增）\r\n      \r\n      // 聊天页面相关状态\r\n      userInput: '',\r\n      chatMessages: [],\r\n      isLoading: false,\r\n      currentAssistantMessage: '',\r\n      selectedModel: '4.0Ultra',\r\n      models: {\r\n        'lite': {\r\n          domain: 'lite',\r\n          url: 'wss://spark-api.xf-yun.com/v1.1/chat',\r\n          maxTokens: 4096\r\n        },\r\n        'generalv3': {\r\n          domain: 'generalv3',\r\n          url: 'wss://spark-api.xf-yun.com/v3.1/chat',\r\n          maxTokens: 8192\r\n        },\r\n        'pro-128k': {\r\n          domain: 'pro-128k',\r\n          url: 'wss://spark-api.xf-yun.com/chat/pro-128k',\r\n          maxTokens: 4096\r\n        },\r\n        'generalv3.5': {\r\n          domain: 'generalv3.5',\r\n          url: 'wss://spark-api.xf-yun.com/v3.5/chat',\r\n          maxTokens: 8192\r\n        },\r\n        'max-32k': {\r\n          domain: 'max-32k',\r\n          url: 'wss://spark-api.xf-yun.com/chat/max-32k',\r\n          maxTokens: 8192\r\n        },\r\n        '4.0Ultra': {\r\n          domain: '4.0Ultra',\r\n          url: 'wss://spark-api.xf-yun.com/v4.0/chat',\r\n          maxTokens: 8192\r\n        },\r\n        'kjwx': {\r\n          domain: 'kjwx',\r\n          url: 'wss://spark-openapi-n.cn-huabei-1.xf-yun.com/v1.1/chat_kjwx',\r\n          maxTokens: 8192\r\n        }\r\n      },\r\n      // 语音相关状态\r\n      mediaRecorder: null,\r\n      audioChunks: [],\r\n      recordingTimer: null,\r\n      remainingTime: 10,\r\n      isRecording: false,\r\n      statusMessage: '状态：准备就绪',\r\n      transcriptionResult: '',\r\n      audioUrl: '',\r\n      isAudioLoading: false,\r\n      showSpeakButton: true,\r\n      apiBaseUrl: 'https://117.72.49.76',\r\n      \r\n      // 将函数定义移到data中\r\n      functions: {\r\n        navigateProjectSection: {\r\n          name: \"作品导航\",\r\n          description: \"导航到作品的不同部分，包括面试、虚拟人juli和动态博客\",\r\n          parameters: {\r\n            type: \"object\",\r\n            properties: {\r\n              section: {\r\n                type: \"string\",\r\n                enum: [\"面试\", \"虚拟人juli\", \"动态博客\"],\r\n                description: \"要导航到的作品部分\"\r\n              }\r\n            },\r\n            required: [\"section\"]\r\n          },\r\n          handler: async (name, params) => {\r\n            console.log(\"导航到作品部分:\", params.section);\r\n            return `已为您导航到作品的「${params.section}」部分。`;\r\n          }\r\n        },\r\n        \r\n        weatherFunction: {\r\n          name: \"天气查询\",\r\n          description: \"天气插件可以提供天气相关信息。你可以提供指定的地点信息、指定的时间点或者时间段信息，来精准检索到天气信息。\",\r\n          parameters: {\r\n            type: \"object\",\r\n            properties: {\r\n              location: {\r\n                type: \"string\",\r\n                description: \"地点，比如北京。\"\r\n              },\r\n              date: {\r\n                type: \"string\",\r\n                description: \"日期。\"\r\n              }\r\n            },\r\n            required: [\"location\"]\r\n          },\r\n          handler: async (name, params) => {\r\n            console.log(params);\r\n            let location = params.location;\r\n            if (location == \"北京\") { window.open(\"https://weather.cma.cn/web/weather/54511.html\") }\r\n            else if (location == \"山东\") {\r\n              window.open(\"https://weather.cma.cn/web/weather/013462.html\")\r\n            }\r\n            return `已为您处理任务：${name}，参数：${JSON.stringify(params)}`\r\n          }\r\n        },\r\n        \r\n        baiduQuestions: {\r\n          name: \"百度搜索\",\r\n          description: \"百度可以提供需要的的相关信息。你可以提供指定的用户关键词语，来精准检索到目标。\",\r\n          parameters: {\r\n            type: \"object\",\r\n            properties: {\r\n              username: {\r\n                type: \"string\",\r\n                description: \"关键词，比如red润\"\r\n              }\r\n            },\r\n            required: [\"username\"]\r\n          },\r\n          handler: async (name, params) => {\r\n            let username = params.username;\r\n            // 构建百度搜索的 URL\r\n            let url = 'https://www.baidu.com/s?wd=' + encodeURIComponent(username);\r\n            window.open(url, '_blank');\r\n            return `已为您处理任务：${name}，参数：${JSON.stringify(params)}`\r\n          }\r\n        },\r\n        \r\n        imgQuestions: {\r\n          name: \"图片生成\",\r\n          description: \"根据详细描述生成图像\",\r\n          \"parameters\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"prompt\": {\r\n                \"type\": \"string\",\r\n                \"description\": \"图像的详细描述，需包含主体、风格、构图、色彩等关键信息。\"\r\n              },\r\n              \"style\": {\r\n                \"type\": \"string\",\r\n                \"enum\": [\"写实\", \"卡通\", \"水墨\", \"油画\", \"水彩\", \"数字艺术\", \"像素风\", \"动漫\"],\r\n                \"description\": \"生成图像的艺术风格\",\r\n                \"default\": \"写实\"\r\n              },\r\n              \"aspect_ratio\": {\r\n                \"type\": \"string\",\r\n                \"enum\": [\"16:9\", \"4:3\", \"1:1\", \"9:16\", \"3:4\"],\r\n                \"description\": \"生成图像的长宽比例\",\r\n                \"default\": \"16:9\"\r\n              },\r\n              \"color_palette\": {\r\n                \"type\": \"string\",\r\n                \"description\": \"可选：指定主色调或配色方案\",\r\n                \"default\": \"无特定要求\"\r\n              }\r\n            },\r\n            \"required\": [\"prompt\"]\r\n          },\r\n          handler: async (name, params) => {\r\n            console.log(params);\r\n            let prompt = params?.prompt || params?.content[0];\r\n            \r\n            // 模拟图片生成\r\n            const width = 800;\r\n            const height = 450;\r\n            const randomId = Math.floor(Math.random() * 1000);\r\n            const imgUrl = `https://picsum.photos/id/${randomId}/${width}/${height}`;\r\n            \r\n            // 将图片转换为Base64格式\r\n            return new Promise((resolve) => {\r\n              const img = new Image();\r\n              img.crossOrigin = 'anonymous';\r\n              img.onload = () => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(img, 0, 0);\r\n                const dataURL = canvas.toDataURL('image/jpeg');\r\n                resolve(dataURL);\r\n              };\r\n              img.src = imgUrl;\r\n            });\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    timerDisplay() {\r\n      const minutes = Math.floor(this.remainingTime / 60).toString().padStart(2, '0');\r\n      const seconds = (this.remainingTime % 60).toString().padStart(2, '0');\r\n      return `${minutes}:${seconds}`;\r\n    },\r\n    // 生成面试官名称\r\n    interviewerName() {\r\n      // 可以根据输入的性格生成更相关的名字\r\n      const names = ['Lily', 'Emma', 'John', 'Smith', 'Wong', 'Chen', 'Alex', 'Sarah', 'Michael', 'Zoe', 'Leo', 'Mia'];\r\n      return names[Math.floor(Math.random() * names.length)];\r\n    }\r\n  },\r\n  mounted() {\r\n    // 尝试从localStorage加载之前的设置\r\n    this.loadFromLocalStorage();\r\n    this.initRecorder();\r\n  },\r\n  methods: {\r\n    // 从localStorage加载数据\r\n    loadFromLocalStorage() {\r\n      const savedPersonality = localStorage.getItem('interviewerPersonality');\r\n      const savedStyle = localStorage.getItem('interviewStyle');\r\n      const savedJob = localStorage.getItem('jobPosition');\r\n      \r\n      if (savedPersonality) this.interviewerPersonality = savedPersonality;\r\n      if (savedStyle) this.interviewStyle = savedStyle;\r\n      if (savedJob) this.jobPosition = savedJob;\r\n    },\r\n    \r\n    // 重置选择状态\r\n    resetSelection() {\r\n      this.isChatStarted = false;\r\n      this.interviewerPersonality = '';\r\n      this.interviewStyle = '';\r\n      this.jobPosition = '';\r\n      this.chatMessages = [];\r\n      \r\n      // 清除localStorage\r\n      localStorage.removeItem('interviewerPersonality');\r\n      localStorage.removeItem('interviewStyle');\r\n      localStorage.removeItem('jobPosition');\r\n      localStorage.removeItem('chatHistory');\r\n    },\r\n    \r\n    // 开始聊天\r\n    startChat() {\r\n      // 保存选择到localStorage\r\n      localStorage.setItem('interviewerPersonality', this.interviewerPersonality);\r\n      localStorage.setItem('interviewStyle', this.interviewStyle);\r\n      localStorage.setItem('jobPosition', this.jobPosition);\r\n      \r\n      this.isChatStarted = true;\r\n      this.initChatHistory();\r\n    },\r\n    \r\n    // 根据面试官性格获取不同的头像\r\n    getInterviewerAvatar() {\r\n      // 使用picsum.photos提供的随机图片\r\n      const avatarIds = [64, 65, 91, 26, 25, 60, 61];\r\n      const avatarId = avatarIds[Math.floor(Math.random() * avatarIds.length)];\r\n      return `https://picsum.photos/id/${avatarId}/200/200`;\r\n    },\r\n    \r\n    // 初始化聊天历史\r\n    initChatHistory() {\r\n      // 根据用户输入的性格、风格和岗位生成系统提示\r\n      this.chatMessages = [\r\n        {\r\n          role: 'system',\r\n          content: `你是一位${this.interviewerPersonality}的面试官，名叫${this.interviewerName}。\r\n            - 性格特点：${this.interviewerPersonality}，表现出相应的语气和态度\r\n            - 面试风格：${this.interviewStyle}，采用相应的提问方式和节奏\r\n            - 面试岗位：${this.jobPosition}，专注于该岗位相关的专业知识和技能\r\n            - 交流方式：根据你的性格和风格，自然地与面试者交流，提出相关问题，给予适当反馈\r\n            - 注意事项: 无论用户说什么，都要回复，不能什么都不回复`\r\n        },\r\n        {\r\n          role: 'assistant',\r\n          content: `你好，${localStorage.getItem('username') || '面试者'}！我是${this.interviewerName}，今天将担任你的${this.jobPosition}岗位面试官。我会以${this.interviewerPersonality}的方式和${this.interviewStyle}对你进行面试。准备好了吗？`\r\n        }\r\n      ];\r\n      \r\n      this.scrollToBottom();\r\n    },\r\n    \r\n    // 其余方法保持不变...\r\n    clearChatHistory() {\r\n      const isClear = window.confirm(\"确定要清除所有聊天记录吗？此操作不可撤销。\");\r\n      if (isClear) {\r\n        localStorage.removeItem('chatHistory');\r\n        this.chatMessages = [];\r\n        this.initChatHistory();\r\n      }\r\n    },\r\n    \r\n    saveChatHistory() {\r\n      localStorage.setItem('chatHistory', JSON.stringify(this.chatMessages));\r\n    },\r\n    \r\n    async sendMessage() {\r\n      const inputVal = this.userInput.trim();\r\n      if (!inputVal) return;\r\n      \r\n      this.isLoading = true;\r\n      \r\n      // 保存用户消息\r\n      const userMessage = {\r\n        role: 'user',\r\n        content: inputVal\r\n      };\r\n      \r\n      this.chatMessages.push(userMessage);\r\n      this.saveChatHistory();\r\n      this.userInput = '';\r\n      this.scrollToBottom();\r\n      \r\n      // 创建助手消息\r\n      const assistantMessage = {\r\n        role: 'assistant',\r\n        content: '<div class=\"loading-dots\"><div></div><div></div><div></div></div>'\r\n      };\r\n      \r\n      this.chatMessages.push(assistantMessage);\r\n      this.saveChatHistory();\r\n      this.scrollToBottom();\r\n      \r\n      try {\r\n        // 获取当前选中模型的配置\r\n        const modelConfig = this.models[this.selectedModel];\r\n        \r\n        // 获取连接URL并建立WebSocket连接\r\n        const url = await this.getWebsocketUrl(modelConfig.url);\r\n        console.log(\"生成的WebSocket URL:\", url);\r\n        \r\n        const ws = new WebSocket(url);\r\n        \r\n        // 等待连接建立\r\n        await new Promise((resolve, reject) => {\r\n          ws.addEventListener('open', (event) => {\r\n            console.log('开启连接！！', event);\r\n            resolve(event);\r\n          });\r\n          ws.addEventListener('error', (error) => {\r\n            console.log('连接发送错误！！', error);\r\n            reject(error);\r\n          });\r\n        });\r\n        \r\n        // 准备发送给服务器的参数\r\n        const params = this.getParams(this.chatMessages);\r\n        console.log(\"发送的参数:\", params);\r\n        let answer = \"\";\r\n        \r\n        ws.send(JSON.stringify(params));\r\n        \r\n        ws.addEventListener(\"message\", async (event) => {\r\n          try {\r\n            const data = JSON.parse(event.data);\r\n            console.log(\"收到消息:\", data);\r\n            \r\n            if (data.header.code !== 0) {\r\n              console.error(\"Error:\", data.header.message);\r\n              answer = `抱歉，出现错误: ${data.header.message}`;\r\n              this.updateAssistantMessage(answer);\r\n              ws.close();\r\n              return;\r\n            }\r\n            \r\n            if (data.payload.choices.text) {\r\n              answer += data.payload.choices.text[0].content;\r\n              // 移除加载动画并更新内容\r\n              this.updateAssistantMessage(answer);\r\n              this.scrollToBottom();\r\n            }\r\n            \r\n            if (data.header.status === 2) {\r\n              // 处理函数调用\r\n              const function_call = data?.payload?.choices?.text[0]?.function_call;\r\n              if (function_call) {\r\n                const name = function_call.name;\r\n                const params = JSON.parse(function_call.arguments);\r\n                const target = this.getFunctionByName(name);\r\n                \r\n                if (target) {\r\n                  // 显示正在处理函数的提示\r\n                  this.updateAssistantMessage(`${answer}<br><br><i>正在处理 ${name} 请求...</i>`);\r\n                  this.scrollToBottom();\r\n                  \r\n                  try {\r\n                    const res = await target.handler(name, params);\r\n                    answer = res;\r\n                  } catch (error) {\r\n                    answer = `处理 ${name} 请求时出错: ${error.message}`;\r\n                  }\r\n                }\r\n              }\r\n              \r\n              // 保存最终回答\r\n              this.chatMessages[this.chatMessages.length - 1].content = answer;\r\n              this.saveChatHistory();\r\n              this.updateAssistantMessage(answer);\r\n              this.scrollToBottom();\r\n              \r\n              // 自动语音播放最新回答\r\n              this.speakLatestAnswer(answer);\r\n              \r\n              setTimeout(() => {\r\n                ws.close();\r\n              }, 1000);\r\n            }\r\n          } catch (parseError) {\r\n            console.error(\"解析消息错误:\", parseError);\r\n            console.log(\"原始消息:\", event.data);\r\n          }\r\n        });\r\n        \r\n        ws.addEventListener(\"close\", () => {\r\n          this.isLoading = false;\r\n        });\r\n        \r\n        ws.addEventListener(\"error\", (error) => {\r\n          console.error(\"WebSocket error:\", error);\r\n          this.updateAssistantMessage(\"抱歉，连接出现错误，请重试。\");\r\n          this.isLoading = false;\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n        this.updateAssistantMessage(\"抱歉，发送消息时出现错误，请重试。\");\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    \r\n    speakLatestAnswer(content) {\r\n      // 检查浏览器是否支持语音合成API\r\n      if ('speechSynthesis' in window) {\r\n        // 停止当前正在播放的语音\r\n        window.speechSynthesis.cancel();\r\n        \r\n        // 移除HTML标签，只保留文本内容\r\n        const textContent = content.replace(/<[^>]*>/g, '');\r\n        \r\n        // 创建语音合成实例\r\n        const utterance = new SpeechSynthesisUtterance(textContent);\r\n        \r\n        // 设置语音参数 - 根据面试官性格调整\r\n        utterance.lang = 'zh-CN'; // 中文\r\n        \r\n        // 可以根据用户输入的性格调整语音参数\r\n        if (this.interviewerPersonality.includes('友善')) {\r\n          utterance.rate = 0.9;  // 语速稍慢\r\n          utterance.pitch = 1.2; // 音调稍高\r\n          utterance.volume = 0.9;\r\n        } else if (this.interviewerPersonality.includes('严厉')) {\r\n          utterance.rate = 1.1;  // 语速稍快\r\n          utterance.pitch = 0.8; // 音调稍低\r\n          utterance.volume = 1.0;\r\n        } else if (this.interviewerPersonality.includes('专业')) {\r\n          utterance.rate = 1.0;  // 语速正常\r\n          utterance.pitch = 1.0; // 音调正常\r\n          utterance.volume = 0.9;\r\n        } else if (this.interviewerPersonality.includes('创新')) {\r\n          utterance.rate = 1.2;  // 语速较快\r\n          utterance.pitch = 1.3; // 音调较高\r\n          utterance.volume = 1.0;\r\n        } else {\r\n          utterance.rate = 1.0;\r\n          utterance.pitch = 1.0;\r\n          utterance.volume = 1.0;\r\n        }\r\n        \r\n        // 开始语音合成\r\n        window.speechSynthesis.speak(utterance);\r\n        \r\n        // 更新状态\r\n        this.showStatus('状态：正在语音播放...', 'normal');\r\n      } else {\r\n        this.showError('抱歉，您的浏览器不支持语音合成功能');\r\n      }\r\n    },\r\n    \r\n    // 其余方法保持不变...\r\n    initRecorder() {\r\n      // 检查浏览器兼容性\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        this.showStatus('错误：您的浏览器不支持录音功能', 'error');\r\n        document.getElementById('start-record-btn')?.setAttribute('disabled', true);\r\n      }\r\n    },\r\n    \r\n    startRecording() {\r\n      if (this.isRecording) return;\r\n      \r\n      this.isRecording = true;\r\n      this.showStatus('状态：正在录音...', 'recording');\r\n      \r\n      // 重置计时器\r\n      this.remainingTime = 10;\r\n      \r\n      // 开始录制\r\n      this.audioChunks = [];\r\n      \r\n      navigator.mediaDevices.getUserMedia({ audio: true })\r\n        .then(stream => {\r\n          this.mediaRecorder = new MediaRecorder(stream);\r\n          \r\n          this.mediaRecorder.addEventListener('dataavailable', event => {\r\n            if (event.data.size > 0) {\r\n              this.audioChunks.push(event.data);\r\n            }\r\n          });\r\n          \r\n          this.mediaRecorder.addEventListener('stop', () => {\r\n            // 停止流\r\n            stream.getTracks().forEach(track => track.stop());\r\n            \r\n            // 创建音频文件\r\n            const audioBlob = new Blob(this.audioChunks, { type: 'audio/wav' });\r\n            \r\n            // 发送到服务器\r\n            this.sendAudioToServer(audioBlob);\r\n          });\r\n          \r\n          this.mediaRecorder.start();\r\n          \r\n          // 设置计时器\r\n          this.recordingTimer = setInterval(() => {\r\n            this.remainingTime--;\r\n            if (this.remainingTime <= 0) {\r\n              this.stopRecording();\r\n            }\r\n          }, 1000);\r\n          \r\n        })\r\n        .catch(error => {\r\n          console.error('录音错误:', error);\r\n          this.showStatus(`错误：无法访问麦克风 - ${error.message}`, 'error');\r\n          this.isRecording = false;\r\n        });\r\n    },\r\n    \r\n    stopRecording() {\r\n      this.isRecording = false;\r\n      \r\n      // 清除计时器\r\n      if (this.recordingTimer) {\r\n        clearInterval(this.recordingTimer);\r\n        this.recordingTimer = null;\r\n      }\r\n      \r\n      // 停止录制\r\n      if (this.mediaRecorder && this.mediaRecorder.state !== 'inactive') {\r\n        this.mediaRecorder.stop();\r\n        this.mediaRecorder = null;\r\n      }\r\n      \r\n      this.showStatus('状态：录音已停止', 'normal');\r\n    },\r\n    \r\n    sendAudioToServer(audioData) {\r\n      this.showStatus('状态：正在上传音频...', 'uploading');\r\n      this.isLoading = true;\r\n      \r\n      const formData = new FormData();\r\n      const fileName = `audio_${Date.now()}.wav`;\r\n      formData.append('file', audioData, fileName);\r\n      \r\n      fetch(`${this.apiBaseUrl}/api/transcribe`, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP错误! 状态码: ${response.status}`);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          if (data.status === 'success') {\r\n            this.showStatus('状态：转写完成', 'success');\r\n            this.transcriptionResult = data.text;\r\n            \r\n            // 将语音转文字结果作为用户消息发送\r\n            if (this.transcriptionResult) {\r\n              this.userInput = this.transcriptionResult;\r\n              this.sendMessage();\r\n            }\r\n          } else {\r\n            this.showStatus(`状态：错误 - ${data.error || '未知错误'}`, 'error');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('转写错误:', error);\r\n          this.showStatus(`状态：错误 - ${error.message}`, 'error');\r\n        })\r\n        .finally(() => {\r\n          this.isLoading = false;\r\n        });\r\n    },\r\n    \r\n    updateAssistantMessage(content) {\r\n      this.chatMessages[this.chatMessages.length - 1].content = content;\r\n    },\r\n    \r\n    parseContent(content) {\r\n      // 首先检查是否是Base64图片数据\r\n      if (this.isBase64Image(content)) {\r\n        return `<img src=\"${content}\" alt=\"Generated image\" style=\"max-width:100%;\"/>`;\r\n      }\r\n\r\n      // 否则当作普通文本处理，解析其中的代码块\r\n      return this.parseCodeBlocks(content);\r\n    },\r\n    \r\n    isBase64Image(str) {\r\n      return str.startsWith('data:image/');\r\n    },\r\n    \r\n    parseCodeBlocks(content) {\r\n      // 匹配代码块的正则表达式\r\n      const codeBlockRegex = /```(\\w+)?\\s*([\\s\\S]*?)```/g;\r\n      return content.replace(codeBlockRegex, (match, lang, code) => {\r\n        // 如果指定了语言，则使用该语言，否则默认使用 'javascript'\r\n        const language = lang || \"javascript\";\r\n        // 高亮代码\r\n        const highlightedCode = this.highlightCode(code.trim(), language);\r\n        // 返回包裹在 <pre> 和 <code> 标签中的代码块\r\n        return `<pre><span>${language}<span><hr style='margin:10px 0;border-top: 1px solid blue;'/><code class=\"language-${language}\">${highlightedCode}</code></pre>`;\r\n      });\r\n    },\r\n    \r\n    highlightCode(code, language) {\r\n      if (language === \"javascript\") {\r\n        // 1. 匹配字符串\r\n        code = code.replace(\r\n          /\"([^\"]*)\"|'([^']*)'/g,\r\n          (match, p1, p2) => `<span class=\"string\">\"${p1 || p2}\"</span>`\r\n        );\r\n\r\n        // 2. 匹配关键字\r\n        code = code.replace(\r\n          /\\b(function|let|const|var|if|else|return)\\b/g,\r\n          '<span class=\"keyword\">$&</span>'\r\n        );\r\n\r\n        // 3. 匹配函数名\r\n        code = code.replace(\r\n          /\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(/g,\r\n          (match, p1) => `<span class=\"function\">${p1}</span>(`\r\n        );\r\n\r\n        // 4. 匹配 console.log\r\n        code = code.replace(\r\n          /\\b(console\\.log)\\b/g,\r\n          '<span class=\"function\">$&</span>'\r\n        );\r\n\r\n        // 5. 匹配单行注释\r\n        code = code.replace(\r\n          /\\/\\/.*$/gm,\r\n          '<span class=\"comment\">$&</span>'\r\n        );\r\n\r\n        // 6. 匹配多行注释\r\n        code = code.replace(\r\n          /\\/\\*[\\s\\S]*?\\*\\//g,\r\n          '<span class=\"comment\">$&</span>'\r\n        );\r\n\r\n        // 7. 匹配数字\r\n        code = code.replace(\r\n          /\\b(\\d+)\\b/g,\r\n          '<span class=\"number\">$&</span>'\r\n        );\r\n      }\r\n      return code;\r\n    },\r\n    \r\n    scrollToBottom() {\r\n      const resultsDiv = document.getElementById('results');\r\n      if (resultsDiv) {\r\n        resultsDiv.scrollTo({\r\n          top: resultsDiv.scrollHeight,\r\n          behavior: 'smooth'\r\n        });\r\n      }\r\n    },\r\n    \r\n    async getWebsocketUrl(hostUrl) {\r\n      // 硬编码鉴权信息\r\n      const APPID = '86f989e0';\r\n      const APISecret = 'YjczOWNiZTYxZWNhY2M5ZjI3OTE5YTJi';\r\n      const APIKey = '7264913c8b3035b87979668da32f762a';\r\n      \r\n      const host = new URL(hostUrl).host;\r\n      const pathname = new URL(hostUrl).pathname;\r\n      let apiKeyName = \"api_key\";\r\n      let date = new Date().toGMTString();\r\n      let algorithm = \"hmac-sha256\";\r\n      let headers = \"host date request-line\";\r\n      \r\n      console.log(\"生成签名的原始数据:\", {\r\n        host,\r\n        date,\r\n        pathname\r\n      });\r\n      \r\n      // 生成签名\r\n      let signatureOrigin = `host: ${host}\\ndate: ${date}\\nGET ${pathname} HTTP/1.1`;\r\n      \r\n      try {\r\n        let signature = await this.signatureToHmacSHA256ToBase64(signatureOrigin, APISecret);\r\n        let authorizationOrigin = `${apiKeyName}=\"${APIKey}\", algorithm=\"${algorithm}\", headers=\"${headers}\", signature=\"${signature}\"`;\r\n        let authorization = btoa(authorizationOrigin);\r\n        \r\n        // 将空格编码\r\n        let url = `${hostUrl}?authorization=${authorization}&date=${encodeURI(date)}&host=${host}`;\r\n        return url;\r\n      } catch (error) {\r\n        console.error(\"生成签名出错:\", error);\r\n        throw error;\r\n      }\r\n    },\r\n    \r\n    async signatureToHmacSHA256ToBase64(origin, secret) {\r\n      // 使用浏览器内置的加密API替代CryptoJS\r\n      const encoder = new TextEncoder();\r\n      const data = encoder.encode(origin);\r\n      const key = encoder.encode(secret);\r\n      \r\n      try {\r\n        const importedKey = await window.crypto.subtle.importKey(\r\n          \"raw\",\r\n          key,\r\n          { name: \"HMAC\", hash: \"SHA-256\" },\r\n          false,\r\n          [\"sign\"]\r\n        );\r\n        \r\n        const signatureArrayBuffer = await window.crypto.subtle.sign(\"HMAC\", importedKey, data);\r\n        \r\n        // 将ArrayBuffer转换为Base64\r\n        const bytes = new Uint8Array(signatureArrayBuffer);\r\n        let result = '';\r\n        for (const byte of bytes) {\r\n          result += String.fromCharCode(byte);\r\n        }\r\n        return btoa(result);\r\n      } catch (error) {\r\n        console.error(\"计算HMAC-SHA256签名出错:\", error);\r\n        throw error;\r\n      }\r\n    },\r\n    \r\n    getParams(textList) {\r\n      let functions = this.getFunctions();\r\n      let modelConfig = this.models[this.selectedModel];\r\n      \r\n      let params = {\r\n        \"header\": {\r\n          \"app_id\": '86f989e0',\r\n          \"uid\": 'red润'\r\n        },\r\n        \"parameter\": {\r\n          \"chat\": {\r\n            \"domain\": modelConfig.domain,\r\n            \"temperature\": 0.5,\r\n            \"max_tokens\": modelConfig.maxTokens,\r\n          }\r\n        },\r\n        \"payload\": {\r\n          \"message\": {\r\n            \"text\": textList\r\n          },\r\n          \"functions\": {\r\n            \"text\": functions\r\n          }\r\n        }\r\n      };\r\n      \r\n      console.log(\"生成的请求参数:\", params);\r\n      return params;\r\n    },\r\n    \r\n    getFunctions() {\r\n      // 从data中的functions对象获取所有函数定义\r\n      return Object.values(this.functions);\r\n    },\r\n    \r\n    getFunctionByName(name) {\r\n      // 从data中的functions对象查找指定名称的函数\r\n      return Object.values(this.functions).find(func => func.name === name);\r\n    },\r\n    \r\n    showStatus(message, type = 'normal') {\r\n      this.statusMessage = message;\r\n      \r\n      const statusContainer = document.getElementById('status-container');\r\n      if (!statusContainer) return;\r\n      \r\n      // 移除所有状态类\r\n      statusContainer.classList.remove('bg-green-50', 'bg-red-50', 'bg-blue-50', 'border-green-200', 'border-red-200', 'border-blue-200');\r\n      \r\n      // 添加新的状态类\r\n      if (type === 'success') {\r\n        statusContainer.classList.add('bg-green-50', 'border-green-200');\r\n      } else if (type === 'error') {\r\n        statusContainer.classList.add('bg-red-50', 'border-red-200');\r\n      } else if (type === 'recording' || type === 'uploading') {\r\n        statusContainer.classList.add('bg-blue-50', 'border-blue-200');\r\n      }\r\n    },\r\n    \r\n    showError(message) {\r\n      const errorDiv = document.getElementById('error');\r\n      errorDiv.textContent = message;\r\n      errorDiv.style.display = 'block';\r\n      errorDiv.style.color = '#f56565';\r\n    },\r\n    \r\n    showSuccess(message) {\r\n      const errorDiv = document.getElementById('error');\r\n      errorDiv.textContent = message;\r\n      errorDiv.style.display = 'block';\r\n      errorDiv.style.color = '#48bb78';\r\n    },\r\n    \r\n    copyToClipboard() {\r\n      const text = this.transcriptionResult.trim();\r\n      if (!text || text === '转写结果将显示在这里...') {\r\n        this.showError('状态：没有可复制的内容');\r\n        return;\r\n      }\r\n      \r\n      navigator.clipboard.writeText(text)\r\n        .then(() => {\r\n          this.showSuccess('已复制到剪贴板');\r\n          \r\n          // 临时更改复制按钮文本\r\n          const copyBtn = document.getElementById('copy-btn');\r\n          if (copyBtn) {\r\n            const originalText = copyBtn.innerHTML;\r\n            copyBtn.innerHTML = '<i class=\"fa-solid fa-check\"></i> <span>已复制</span>';\r\n            \r\n            setTimeout(() => {\r\n              copyBtn.innerHTML = originalText;\r\n            }, 2000);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.showError('复制失败');\r\n          console.error('复制错误:', err);\r\n        });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式内容保持不变 */\r\n.app-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Inter', system-ui, sans-serif;\r\n}\r\n\r\n/* 选择页面样式 */\r\n.selection-page {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  background-color: #f8fafc;\r\n}\r\n\r\n.page-title {\r\n  \r\n  color: #1e293b;\r\n  text-align: center;\r\n}\r\n\r\n.selection-card {\r\n  width: 100%;\r\n  max-width: 800px;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\r\n  \r\n}\r\n\r\n\r\n.form-label {\r\n  display: block;\r\n  \r\n  font-weight: 600;\r\n  color: #334155;\r\n  \r\n}\r\n\r\n.form-input {\r\n  width: 100%;\r\n  \r\n  border: 2px solid #e2e8f0;\r\n  border-radius: 8px;\r\n  transition: all 0.3s ease;\r\n  /* 添加高度设置 */\r\n  height: 40px; \r\n}\r\n\r\n.form-input:focus {\r\n  outline: none;\r\n  border-color: #38bdf8;\r\n  box-shadow: 0 0 0 3px rgba(56, 189, 248, 0.2);\r\n}\r\n\r\n.next-button {\r\n  width: 100%;\r\n  \r\n  background-color: #3b82f6;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.next-button:disabled {\r\n  background-color: #94a3b8;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.next-button:not(:disabled):hover {\r\n  background-color: #2563eb;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* 聊天页面样式 */\r\n.chat-page {\r\n  padding: 20px;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n  object-fit: cover;\r\n}\r\n\r\n.content {\r\n  background-color: #f0f0f0;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  max-width: 80%;\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.assistant-message .content {\r\n  background-color: #e0f2fe;\r\n}\r\n\r\n.user-message .content {\r\n  background-color: #e6f7ff;\r\n}\r\n\r\n.interviewer-traits {\r\n \r\n  color: #64748b;\r\n  font-weight: normal;\r\n  margin-left: 10px;\r\n}\r\n\r\n.gradient-bg {\r\n  background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);\r\n}\r\n\r\n.hover-scale {\r\n  transition: transform 0.2s ease-in-out;\r\n}\r\n\r\n.hover-scale:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.loading-dots {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.loading-dots div {\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: #60a5fa;\r\n  border-radius: 50%;\r\n  margin: 0 3px;\r\n  animation: bounce 1.4s infinite ease-in-out both;\r\n}\r\n\r\n.loading-dots div:nth-child(1) { animation-delay: -0.32s; }\r\n.loading-dots div:nth-child(2) { animation-delay: -0.16s; }\r\n\r\n@keyframes bounce {\r\n  0%, 80%, 100% { transform: scale(0); }\r\n  40% { transform: scale(1); }\r\n}\r\n\r\npre {\r\n  background-color: #f5f5f5;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  overflow-x: auto;\r\n  margin: 10px 0;\r\n}\r\n\r\ncode {\r\n  font-family: Consolas, Monaco, 'Andale Mono', monospace;\r\n  \r\n}\r\n\r\n.string { color: #d14; }\r\n.keyword { color: #0086b3; font-weight: bold; }\r\n.function { color: #900; font-weight: bold; }\r\n.comment { color: #998; font-style: italic; }\r\n.number { color: #099; }\r\n</style>\r\n","import { render } from \"./EmotionView.vue?vue&type=template&id=d86eef94&scoped=true\"\nimport script from \"./EmotionView.vue?vue&type=script&lang=js\"\nexport * from \"./EmotionView.vue?vue&type=script&lang=js\"\n\nimport \"./EmotionView.vue?vue&type=style&index=0&id=d86eef94&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\浏览器下载\\\\Imitative-Mobile-QQ-master\\\\Imitative-Mobile-QQ-master\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d86eef94\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from 'vue-router'\nimport actionview from '../views/ActionView.vue'\nimport WelcomeView from '../views/WelcomeView.vue'\nimport LoginView from '../views/LoginView.vue'\nimport HomeView from '../views/HomeView.vue'\nimport MessageCom from '../components/MessageCom.vue'\nimport FriendsCom from '../components/FriendsCom.vue'\nimport DiscoverCom from '../components/DiscoverCom.vue'\nimport CardView from '../views/CardView.vue'\nimport DialogView from '../views/DialogView.vue'\nimport SideView from '../views/SideView.vue'\nimport discover1 from '../components/DiscoverCom1.vue'\nimport emotion from '../views/EmotionView.vue'\n\n\nconst routes = [\n  {path:'/emotion',name:'emotion',component:emotion},\n  {path:'/action',name:'action',component:actionview},\n  { path: '/', redirect: '/welcome' },\n  { path: '/welcome', name: 'welcome', component: WelcomeView,meta: { \n    hideSidebar: true,  // 隐藏侧边栏\n    hideTopBar: true    // 隐藏右上栏\n  } },\n  { path: '/login', name: 'login', component: LoginView, meta: { \n    hideSidebar: true,  // 隐藏侧边栏\n    hideTopBar: true    // 隐藏右上栏\n  } },\n  { path: '/home', name: 'home', component: HomeView, \n    children: [\n      {path:'discover1',name:'discoverCom1',component:discover1},\n      { path: 'message', component: MessageCom, meta: {keepAlive: true} },\n      { path: 'friends', component: FriendsCom, meta: {keepAlive: true} },\n      { path: 'discover', component: DiscoverCom }\n    ]\n  },\n  { path: '/card', name: 'card', component: CardView },\n  { path: '/dialog/:name', name: 'dialog', component: DialogView },\n  { path: '/side', name: 'side', component: SideView }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router\n","import { createApp } from 'vue'\n// 补充引入 List、Popup 和 Loading 组件\nimport { Toast, Button, Form, Field, CellGroup, NavBar, Icon, Image as VanImage,\n    Tabbar, TabbarItem, Popover, SwipeCell, Cell, Tag, Search, PullRefresh, Tab, Tabs,\n    Collapse, CollapseItem, IndexBar, IndexAnchor, Row, Col, Popup, Loading, List,DropdownMenu, DropdownItem } from 'vant'  // 新增List\nimport App from './App.vue'\nimport router from './router'\n// 引入Vant样式（确保添加此行）\nimport 'vant/lib/index.css';\nimport 'element-plus/dist/index.css'\nimport ElementPlus from 'element-plus'\n\nconst app = createApp(App);\n// 注册已有的组件\napp.use(ElementPlus);\napp.use(DropdownMenu);\napp.use(DropdownItem);\napp.use(Toast);\napp.use(Button);\napp.use(Form);\napp.use(Field);\napp.use(CellGroup);\napp.use(NavBar);\n\napp.use(VanImage);\napp.use(Tabbar);\napp.use(TabbarItem);\napp.use(Popover);\napp.use(SwipeCell);\napp.use(Cell);\napp.use(Tag);\napp.use(Search);\napp.use(PullRefresh);\napp.use(Tab);\napp.use(Tabs);\napp.use(Collapse);\napp.use(CollapseItem);\napp.use(IndexBar);\napp.use(IndexAnchor);\napp.use(Row);\napp.use(Col);\n// 新增：注册 Popup、Loading 和 List 组件\napp.use(Popup);\napp.use(Loading);\napp.use(List);  // 注册List组件\n\napp.use(router);\napp.use(Icon);\napp.mount('#app');\n","var map = {\n\t\"./QQ图片20250719201652.jpg\": 4302,\n\t\"./QQ图片20250719201659.jpg\": 6129,\n\t\"./QQ图片20250719201704.jpg\": 2438,\n\t\"./QQ图片20250719201708.jpg\": 0,\n\t\"./QQ图片20250719201714.jpg\": 372,\n\t\"./QQ图片20250719201723.jpg\": 3272,\n\t\"./QQ图片20250719201727.jpg\": 9739,\n\t\"./QQ图片20250719201731.jpg\": 244,\n\t\"./QQ图片20250719201735.jpg\": 3263,\n\t\"./QQ图片20250719201739.png\": 5285,\n\t\"./StarrySky.png\": 7093,\n\t\"./my_profile.jpg\": 8326,\n\t\"./my_profile0.jpg\": 7202,\n\t\"./picture_克蕾赫.png\": 241,\n\t\"./picture_刹那.png\": 6235,\n\t\"./picture_回复术士的重来人生.png\": 2759,\n\t\"./picture_夏娃.png\": 1845,\n\t\"./picture_芙蕾雅.png\": 3437,\n\t\"./picture_诺伦.png\": 9278,\n\t\"./profile_02.jpg\": 4541,\n\t\"./profile_五河琴里.jpg\": 5348,\n\t\"./profile_八舞夕弦.jpg\": 3586,\n\t\"./profile_八舞耶俱矢.jpg\": 1059,\n\t\"./profile_发现新设备.jpg\": 9344,\n\t\"./profile_四糸乃.jpg\": 301,\n\t\"./profile_夜刀神十香.jpg\": 4025,\n\t\"./profile_我的电脑.jpg\": 3551,\n\t\"./profile_拉菲.jpg\": 4875,\n\t\"./profile_拉菲0.jpg\": 4,\n\t\"./profile_时崎狂三.jpg\": 5192,\n\t\"./profile_星宫六喰.jpg\": 8262,\n\t\"./profile_本条二亚.jpg\": 2657,\n\t\"./profile_栗山未来.jpg\": 2852,\n\t\"./profile_王者荣耀.jpg\": 5137,\n\t\"./profile_英雄联盟.jpg\": 3539,\n\t\"./profile_诱宵美九.jpg\": 4030,\n\t\"./profile_镜野七罪.jpg\": 1753,\n\t\"./profile_鸢一折纸.jpg\": 6800,\n\t\"./qq等级.png\": 7277,\n\t\"./side_background.jpg\": 5014,\n\t\"./side_background0.jpg\": 9165,\n\t\"./手机在线.png\": 3522\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 990;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/qq/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmobile_qq\"] = self[\"webpackChunkmobile_qq\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1792); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","class","_createElementVNode","_hoisted_14","_createElementBlock","_ctx","meta","hideSidebar","_createVNode","_component_van_image","round","width","height","src","require","alt","onClick","$options","_toDisplayString","$data","_component_van_popover","show","$event","actions","placement","offset","onSelect","reference","_component_van_icon","name","color","size","_hoisted_7","_Transition","_Fragment","_renderList","item","index","key","profile","_hoisted_17","_hoisted_18","_component_router_view","data","messageDropdownOpen","friendMessageList","active","titleMap","message","friends","discover","emotion","showPopover","text","icon","username","computed","currentTitle","this","methods","toggleMessageDropdown","handleMessageItemClick","indexOf","career","substring","localStorage","setItem","$router","push","path","query","interviewer","navigateTo","handleLeftClick","handleTopAvatarClick","handleSidebarAvatarClick","handleActionSelect","action","window","location","href","loadUsernameFromLocalStorage","userInfo","getItem","parsedUser","JSON","parse","error","console","watch","newPath","pathMap","mounted","$route","__exports__","render","style","ref","_hoisted_37","_hoisted_38","autoplay","playsinline","_component_van_nav_bar","fixed","placeholder","onClickLeft","right","title","_hoisted_2","_hoisted_5","msg","sender","type","isError","content","innerHTML","isPlaying","_hoisted_10","duration","_component_van_button","disabled","textResult","speechSpeed","Math","toneResult","tone_type","f0_mean","f0_min","f0_max","logicResult","_hoisted_21","analysis","score","_hoisted_22","_hoisted_23","imageUrl","_hoisted_28","expressionResults","result","poseResult","_hoisted_30","pose","toFixed","fps","comprehensiveAnalysis","_hoisted_32","_component_van_field","rows","autosize","maxHeight","minHeight","onKeypress","trim","_component_van_row","_component_van_col","span","_component_van_popup","overlay","position","onMousedown","_hoisted_44","_component_van_loading","_hoisted_48","maxWidth","overflow","_hoisted_54","_hoisted_56","_hoisted_61","_hoisted_65","_hoisted_69","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_83","_hoisted_84","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","_hoisted_101","length","_hoisted_103","_hoisted_104","example","_hoisted_106","_hoisted_108","category","catIndex","suggestions","suggestion","sugIndex","_hoisted_109","_hoisted_111","_hoisted_113","_hoisted_114","_hoisted_115","_hoisted_117","_hoisted_120","_hoisted_121","popupWidth","popupHeight","popupLeft","popupTop","isDragging","startX","startY","isResizing","startWidth","startHeight","keyIssues","issueExamples","feedbackCategories","params","messages","isTyping","typingId","API_BASE_URL","statusText","statusClass","commonHeaders","isRecording","mediaRecorder","audioBlob","recordingSeconds","recordingTimer","audioContext","audioElements","mediaStream","audioChunks","transcribeCount","isCameraModalVisible","isCameraActive","isLoadingCamera","cameraError","isProcessingImage","isAnalyzingContinuously","continuousAnalysisTimer","detectionInterval","videoStream","isReportVisible","reportLoading","reportError","chart","reportResponse","reportIndicators","reportValues","firstQuestion","secondQuestion","thirdQuestion","fourthQuestion","fifthQuestion","firstResult","secondResult","thirdResult","fourthResult","fifthResult","professionalKnowledgeAnalysis","skillMatchAnalysis","languageExpressionAnalysis","logicalThinkingAnalysis","innovationAbilityAnalysis","comprehensiveEvaluation","improvementSuggestions","formattedReportResponse","stringify","log","testConnection","initContainerHeight","addEventListener","checkRecordingSupport","loadStoredQuestionsAndAnswers","Chart","registerables","RadarController","beforeUnmount","removeEventListener","stopRecording","Object","values","forEach","audio","pause","stopCamera","clearInterval","destroy","startDrag","e","clientX","clientY","document","handleDrag","stopDrag","preventDefault","deltaX","deltaY","newLeft","newTop","max","min","innerWidth","innerHeight","startResize","handleResize","stopResize","deltaWidth","deltaHeight","minWidth","defaultQuestions","question","startInterviewProcess","avatarPlatform2","videoElement","createElement","controls","muted","marginTop","sourceElement","appendChild","play","catch","playPrompt","fontSize","textContent","messageContainer","fallbackText","createTextNode","addMessage","setTimeout","questions","videoUrl","currentIndex","defaultWidth","defaultHeight","defaultLeft","defaultTop","modal","cssText","draggableModal","modalHeader","headerTitle","closeButton","confirm","body","removeChild","modalContainer","progressIndicator","_","dot","questionContentWrapper","questionContent","buttonContainer","prevButton","background","nextButton","resizeHandle","renderCurrentQuestion","querySelectorAll","transform","savedAnswer","initSpeechRecognition","opacity","cursor","scrollTop","questionId","startBtn","getElementById","stopBtn","toneStatus","speedStatus","recordTime","answerTextarea","recognition","analyser","dataArray","animationId","recordStartTime","recordDuration","initRecognition","SpeechRecognition","webkitSpeechRecognition","alert","rec","continuous","interimResults","lang","initAudioAnalyser","stream","AudioContext","webkitAudioContext","createAnalyser","source","createMediaStreamSource","connect","fftSize","bufferLength","frequencyBinCount","Uint8Array","analyzeTone","getByteFrequencyData","sum","value","averageFreq","requestAnimationFrame","display","cancelAnimationFrame","stop","close","charCount","speed","async","Date","now","start","onresult","event","transcript","i","results","navigator","mediaDevices","getUserMedia","updateRecordTime","floor","MediaRecorder","err","saveCurrentAnswer","answer","querySelector","currentAnswer","initialLeft","initialTop","offsetWidth","offsetHeight","left","top","parseInt","transition","newWidth","newHeight","showStatus","backToHomeMessage","prompt","isLogicAnalysis","toLowerCase","includes","isGenerateReport","constructedPrompt","buildLogicAnalysisPrompt","buildEvaluationReportPrompt","scrollToBottom","addTypingIndicator","fetch","method","headers","then","response","removeTypingIndicator","ok","Error","status","json","taskId","task_id","pollInterval","maxAttempts","attempts","pollForFile","targetFile","markdown","txt","file_url","fileResponse","fileContent","processAndRenderReport","addFormattedMessageWithSpaces","getInterviewQuestions","dimensions","radarDataMarker","radarDataEndMarker","join","radarDataMarkers","end","isMarkdown","radarDataSection","startIndex","endIndex","warn","radarData","lines","split","line","match","dimension","undefined","radarContainerId","processedContent","radarChartHtml","processMarkdownContent","replace","$nextTick","script","onload","renderRadarChart","onerror","head","containerId","maxRetries","retries","tryRender","container","canvas","tagName","labels","map","label","chartInstance","getContext","datasets","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","options","scales","r","angleLines","suggestedMin","suggestedMax","ticks","stepSize","callback","plugins","legend","tooltip","callbacks","context","raw","processed","getTracks","track","addVoiceMessage","audioUrl","URL","createObjectURL","Audio","blob","url","toggleVoicePlayback","m","otherAudio","onended","formData","FormData","append","errorText","splice","existingTone","toneAnalysis","newToneAnalysis","calculateSpeechSpeed","speedPerMinute","existingSpeed","speedAnalysis","evaluateSpeechSpeed","newSpeedAnalysis","scoreMatch","parseFloat","existingLogic","newLogicAnalysis","saveAnalysisToStorage","expressionsText","exp","confidence","existingExpressions","newExpressions","poseText","existingPose","newPose","existingAnalysis","newAnalysis","addExpressionMessage","$refs","messagesContainer","scrollHeight","navBarHeight","bottomBarHeight","paddingTop","paddingBottom","formatDuration","seconds","mins","secs","isValidWavFile","arrayBuffer","Response","sampleRate","audioBuffer","decodeAudioData","wavBuffer","convertToWav","Blob","Promise","resolve","reader","FileReader","onloadend","target","readyState","DONE","uint8Array","riff","String","fromCharCode","readAsArrayBuffer","slice","numberOfChannels","format","bitDepth","Float32Array","c","getChannelData","buffer","ArrayBuffer","view","DataView","writeString","setUint32","setUint16","volume","sample","setInt16","string","setUint8","charCodeAt","startCamera","protocol","hostname","video","ideal","srcObject","videoWidth","videoHeight","ctx","drawImage","base64Image","toDataURL","analysisResult","analyzePose","startContinuousAnalysis","captureImage","setInterval","base64","predictions","image_base64","startPolling","interval","timestamp","generateReportFromStorage","calculateReportScores","generateDimensionAnalysis","generateComprehensiveEvaluation","generateKeyIssues","generateFeedbackSuggestions","indicators","knowledgeScore","random","skillScore","languageScore","logicScore","innovationScore","getAnalysisFromAPI","reject","recordingSupported","toggleRecording","startRecording","evalMatch","suggestionsMatch","filter","issueMatch","examplesMatch","examples","categories","regex","RegExp","startsWith","renderRadarChart1","radarChart","responsive","maintainAspectRatio","getScoreLevel","getScoreClass","imgStyle","created","_hoisted_3","_hoisted_6","loop","poster","onError","onPlay","onPause","onLoadeddata","onLoadedmetadata","_hoisted_8","_hoisted_9","onSubmit","required","autocomplete","_hoisted_16","password","_hoisted_19","email","_hoisted_24","_hoisted_26","api","axios","baseURL","timeout","withCredentials","isLogin","loading","loadingText","messageType","loginForm","registerForm","videoError","showPlayPrompt","hasUserInteracted","isVideoLoaded","videoPlayedOnce","videoDebugInfo","handleUserInteraction","checkVideoElementExists","initVideo","playbackCheckInterval","checkPlayPromptVisibility","backgroundVideo","showMessage","paused","tryPlayVideo","videoPaused","markVideoLoaded","handleVideoPlay","handleVideoPause","checkVideoDimensions","handleVideoError","errorMsg","code","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","post","success","clearMessage","_component_van_pull_refresh","onRefresh","Component","_createBlock","_KeepAlive","_resolveDynamicComponent","topbar_title","setTitle","components","TopBar","_hoisted_12","role","onKeydown","userInput","chatMessages","isLoading","currentAssistantMessage","selectedModel","models","domain","maxTokens","remainingTime","statusMessage","transcriptionResult","isAudioLoading","showSpeakButton","apiBaseUrl","timerDisplay","minutes","toString","padStart","initChatHistory","initRecorder","chatHistory","clearChatHistory","isClear","removeItem","saveChatHistory","inputVal","userMessage","assistantMessage","modelConfig","getWebsocketUrl","ws","WebSocket","getParams","send","header","updateAssistantMessage","payload","choices","function_call","arguments","getFunctionByName","res","handler","speakLatestAnswer","parseError","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","rate","pitch","speak","showError","setAttribute","sendAudioToServer","state","audioData","fileName","sendMessage","finally","parseContent","isBase64Image","parseCodeBlocks","str","codeBlockRegex","language","highlightedCode","highlightCode","p1","p2","resultsDiv","scrollTo","behavior","hostUrl","APISecret","APIKey","host","pathname","apiKeyName","date","toGMTString","algorithm","signatureOrigin","signature","signatureToHmacSHA256ToBase64","authorizationOrigin","authorization","btoa","encodeURI","origin","secret","encoder","TextEncoder","encode","importedKey","crypto","subtle","importKey","hash","signatureArrayBuffer","sign","bytes","byte","textList","functions","getFunctions","weatherFunction","baiduQuestions","imgQuestions","navigateProjectSection","find","func","description","parameters","properties","section","enum","open","encodeURIComponent","randomId","imgUrl","img","Image","crossOrigin","dataURL","statusContainer","classList","remove","add","errorDiv","showSuccess","copyToClipboard","clipboard","writeText","copyBtn","originalText","for","_hoisted_20","_hoisted_25","_hoisted_31","_hoisted_33","_hoisted_4","_hoisted_15","_hoisted_29","_hoisted_35","_hoisted_36","_hoisted_41","_hoisted_42","_hoisted_45","HTTPS_BASE_URL","PROXY_FILE_PATH","RECENT_FILES_PATH","PROCESS_VIDEO_PATH","CHAT_API_PATH","CHAT_RESULT_PATH","TTS_API_PATH","GET_LATEST_AUDIO_URL","POLL_INTERVAL","MAX_POLL_ATTEMPTS","AUDIO_POLL_INTERVAL","MAX_AUDIO_ATTEMPTS","CHAT_POLL_INTERVAL","MAX_CHAT_ATTEMPTS","OPTIONAL_VIDEO_URL","promptText","minResolution","ifRes","steps","chatResponseText","showChatResponse","audioPreviewHtml","isAudioGenerating","audioResultText","showAudioResult","audioFolderPrefix","currentTaskId","isProcessing","processStartTime","pollAttempts","pollTimer","abortController","processStatusText","showProcessStatus","progressBarWidth","videoPreviewHtml","showPreviewVideo","debugInfo","optionalVideoUrl","canProcessVideo","showDebugInfo","toISOString","el","fetchWithTimeout","race","startAudioPolling","folderPrefix","folder_path","audio_url","created_time","audioElement","onloadedmetadata","fileInfo","pollForChatResult","poll","resultUrl","resultData","interviewerPrompt","chatUrl","chatResponse","chatResult","aiResponse","ttsUrl","ttsData","reference_text","ttsResponse","ttsResult","folder_prefix","pollForRecentFiles","resetProcessingState","recentFilesUrl","searchParams","count","latestFile","files","elapsedMinutes","totalMinutes","clearTimeout","AbortController","processUrl","requestData","min_resolution","if_res","signal","used_video_file","handleCancelProcessing","abort","togglePreviewVideo","sortedBlogs","allComments","errorMessage","showBlogModal","currentBlog","formatDate","dateString","toLocaleString","year","month","day","hour","minute","second","getCommentsForBlog","blogDate","comment","decodedContent","decoded","hex","fetchBlogs","blogsRes","commentsRes","all","blogsData","Array","isArray","blog","hasUnicode","test","hasHtmlEntities","hasLineBreaks","encodingTypes","isTargetBlog","group","groupEnd","request","openBlogModal","closeBlogModal","renderMarkdown","marked","onMounted","qq","_component_van_cell","center","clickable","gender","age","birth_month","birth_day","constellation","place","backgroundImage","to","user","who","button1","button2","bottom_button_style","margin","borderRadius","letterSpacing","fontWeight","blackText","pictures","back","history","profilePreview","picturesPreview","images","startPosition","_hoisted_39","_hoisted_40","_hoisted_34","_hoisted_46","_hoisted_50","_hoisted_58","_hoisted_63","_hoisted_67","_hoisted_76","_hoisted_82","_hoisted_88","_hoisted_94","_hoisted_100","_hoisted_105","_hoisted_110","_hoisted_116","_hoisted_119","_hoisted_122","_hoisted_123","poetry","poetryList","openMyCard","_hoisted_11","userAvatar","isChatStarted","interviewerPersonality","interviewStyle","jobPosition","interviewerName","names","loadFromLocalStorage","savedPersonality","savedStyle","savedJob","resetSelection","startChat","getInterviewerAvatar","avatarIds","avatarId","routes","component","actionview","redirect","WelcomeView","hideTopBar","LoginView","HomeView","children","discover1","MessageCom","keepAlive","FriendsCom","DiscoverCom","CardView","DialogView","SideView","router","createRouter","createWebHashHistory","app","createApp","App","use","ElementPlus","mount","webpackContext","req","webpackContextResolve","__webpack_require__","o","keys","module","exports","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}